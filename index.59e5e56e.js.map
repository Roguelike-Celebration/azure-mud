{"mappings":"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","sources":["server/src/types.ts","src/storage.ts","src/components/feature/RainbowGateViews.tsx","src/components/feature/DullDoorViews.tsx","src/components/feature/FullRoomIndexViews.tsx","src/linkActions.ts","src/utils.ts","src/videochat/mediaChatContext.tsx","src/components/HeldItemView.tsx","src/components/NameView.tsx","src/components/PresenceView.tsx","src/components/RoomView.tsx","src/message.ts","src/components/MessageView.tsx","src/components/ChatView.tsx","src/components/InputView.tsx","src/SlashCommands.ts","src/reducer.ts","src/components/ProfileView.tsx","src/components/LocalMediaView.tsx","src/videochat/twilio/AudioTrack.tsx","src/videochat/twilio/VideoTrack.tsx","src/videochat/twilio/useMediaStreamTrack.ts","src/videochat/twilio/useVideoTrackDimensions.ts","src/videochat/twilio/Publication.tsx","src/videochat/twilio/useTrack.tsx","src/videochat/twilio/ParticipantTracks.tsx","src/videochat/twilio/usePublications.ts","src/components/ParticipantChatView.tsx","src/components/MediaChatButtonView.tsx","src/components/MediaChatView.tsx","src/components/ProfileEditView.tsx","src/components/MenuButtonView.tsx","src/components/MapView.tsx","src/components/MiniMapView.tsx","src/components/SideNavView.tsx","src/components/NoteView.tsx","src/components/NoteWallView.tsx","src/components/ModalView.tsx","src/components/VideoAudioSettingsView.tsx","src/components/SettingsView.tsx","src/components/MediaSelectorView.tsx","src/components/CodeOfConductView.tsx","src/components/ScheduleView.tsx","src/components/HelpView.tsx","src/components/MapModalView.tsx","src/components/LoggedOutView.tsx","src/components/WelcomeModalView.tsx","src/components/GoHomeView.tsx","src/components/YouAreBannedView.tsx","src/components/RoomListView.tsx","src/components/ServerSettingsView.tsx","src/components/ClientDeployedModal.tsx","src/components/HappeningNowView.tsx","src/components/VerifyEmailView.tsx","src/components/EmailVerifiedView.tsx","src/components/RiddleModal.tsx","src/speechRecognizer.ts","src/videochat/twilioChatContext.tsx","src/App.tsx","src/index.tsx"],"sourcesContent":["import { Room } from './rooms'\nimport { User, MinimalUser, PublicUser } from './user'\nimport { RoomNote } from './roomNote'\n\nexport interface HappeningNowEntry {\n  text: string,\n  roomId?: string,\n  externalLink?: string\n}\n\nfunction isHappeningNowEntry (obj: any): obj is HappeningNowEntry {\n  return obj.text && (typeof obj.text === 'string' || obj.text instanceof String) &&\n    obj.roomId ? (typeof obj.roomId === 'string' || obj.roomId instanceof String) : true &&\n    obj.externalLink ? (typeof obj.externalLink === 'string' || obj.externalLink instanceof String) : true\n}\n\nexport interface ServerSettings {\n  movementMessagesHideThreshold: number;\n  movementMessagesHideRoomIds: string[];\n  happeningNowEntries: HappeningNowEntry[];\n  spaceIsClosed: boolean\n  webhookDeployKey?: string\n}\n\nexport const DEFAULT_SERVER_SETTINGS: ServerSettings = {\n  movementMessagesHideThreshold: 20,\n  movementMessagesHideRoomIds: ['theater'],\n  happeningNowEntries: [],\n  spaceIsClosed: false\n}\n\n// There's 100% a more elegant way to do this, but I think this works and want to actually get this feature finally done.\nexport function toServerSettings (obj: Partial<ServerSettings>): ServerSettings | null {\n  try {\n    if (obj.movementMessagesHideThreshold === undefined || obj.movementMessagesHideRoomIds === undefined ||\n        (obj.happeningNowEntries && !obj.happeningNowEntries.every(isHappeningNowEntry))) {\n      console.log('Returning null in toServerSettings')\n      return null\n    } else {\n      return {\n        movementMessagesHideThreshold: obj.movementMessagesHideThreshold,\n        movementMessagesHideRoomIds: obj.movementMessagesHideRoomIds,\n        happeningNowEntries: obj.happeningNowEntries || [],\n        spaceIsClosed: !!obj.spaceIsClosed\n      }\n    }\n  } catch (e) {\n    console.log('Error in toServerSettings', e)\n    return null\n  }\n}\n\nexport interface RoomResponse {\n  roomId: string;\n  presenceData?: { [roomId: string]: string[] };\n  users?: { [userId: string]: MinimalUser };\n  roomData?: { [roomId: string]: Room };\n  profile?: PublicUser;\n  roomNotes?: RoomNote[]\n}\n\nexport interface ErrorResponse {\n  error: string;\n}\n\nexport interface ProfileResponse {\n  user: User;\n}\n\nexport enum ValidColors {\n  Blue = 'Blue',\n  Cyan = 'Cyan',\n  Green = 'Green',\n  Magenta = 'Magenta',\n  Orange = 'Orange',\n  Red = 'Red',\n  Violet = 'Violet',\n  Yellow = 'Yellow'\n}\n\nexport enum ValidFontRewards {\n  Comic = 'Comic',\n  Classic = 'Classic',\n  Impactful = 'Impactful'\n}\n","import { Message, WhisperMessage } from './message'\nimport localforage from 'localforage'\n\n// Message cache\n\nexport async function getMessages (): Promise<{messages: Message[], whispers: WhisperMessage[]}|undefined> {\n  try {\n    const timestamp: Date = await localforage.getItem(messageTimestampKey)\n    const messages: Message[] = await localforage.getItem(messagesKey)\n    const whispers: WhisperMessage[] = await localforage.getItem(whisperKey)\n\n    // A janky way to say \"Is it older than an hour\"\n    if (timestamp && new Date().getTime() - timestamp.getTime() < 1000 * 60 * 60) {\n      console.log(messages, whispers)\n      return { messages, whispers }\n    }\n\n    // If we haven't returned yet, there's either no valid timestamp, or too old a timestamp\n  } catch (err) {\n    console.log('Storage error', err)\n  }\n}\n\nexport async function setMessages (messages: Message[], timestamp?: Date) {\n  await localforage.setItem(messagesKey, messages)\n  await localforage.setItem(messageTimestampKey, timestamp || new Date())\n}\n\nexport async function setWhispers (whispers: WhisperMessage[]) {\n  await localforage.setItem(whisperKey, whispers)\n}\n\n// Rainbow gate\n\nexport async function getGateVisits (): Promise<number> {\n  return await localforage.getItem(rainbowGateKey) || 0\n}\n\nexport async function incrementGateVisits () {\n  const visits = await getGateVisits() + 1\n  await localforage.setItem(rainbowGateKey, visits)\n  return visits\n}\n\n// Username coloring\n\nexport async function getWasColoredEntering (): Promise<boolean> {\n  return await localforage.getItem(wasColoredEnteringKey) || false\n}\n\nexport async function setWasColoredEntering (value: boolean) {\n  await localforage.setItem(wasColoredEnteringKey, value)\n}\n\n// Settings page\nexport async function setTheme (theme: string) {\n  await localforage.setItem(themeKey, theme)\n}\n\nexport async function currentTheme (): Promise<string> {\n  return await localforage.getItem(themeKey) || 'default'\n}\n\nexport async function setUseSimpleNames (useSimpleNames: boolean) {\n  await localforage.setItem(useSimpleNamesKey, useSimpleNames)\n}\n\nexport async function getUseSimpleNames (): Promise<boolean> {\n  return await localforage.getItem(useSimpleNamesKey) || false\n}\n\n// Video chat settings\nexport async function setKeepCameraWhenMoving (keepCameraWhenMoving: boolean) {\n  await localforage.setItem(keepCameraWhenMovingKey, keepCameraWhenMoving)\n}\n\nexport async function getKeepCameraWhenMoving (): Promise<boolean> {\n  const keepCameraWhenMoving: boolean = await localforage.getItem(keepCameraWhenMovingKey)\n  return keepCameraWhenMoving === null ? false : keepCameraWhenMoving\n}\n\nexport async function setTextOnlyMode (textOnlyMode: boolean) {\n  await localforage.setItem(textOnlyModeKey, textOnlyMode)\n}\n\nexport async function getTextOnlyMode (): Promise<boolean> {\n  const textOnlyMode: boolean = await localforage.getItem(textOnlyModeKey)\n  return textOnlyMode == null ? false : textOnlyMode\n}\n\nexport async function setCaptionsEnabled (enabled: boolean) {\n  await localforage.setItem(captionsEnabledKey, enabled)\n}\n\nexport async function getCaptionsEnabled (): Promise<boolean> {\n  const captionsEnabled: boolean = await localforage.getItem(captionsEnabledKey)\n  return captionsEnabled == null ? false : captionsEnabled\n}\n\n// Keys\n\nconst messagesKey = 'messages'\nconst messageTimestampKey = 'messageTimeStamp'\nconst whisperKey = 'whispers'\nconst rainbowGateKey = 'FeatureRainbowGateVisited'\nconst wasColoredEnteringKey = 'WasColoredEntering'\nconst themeKey = 'UserSelectedTheme'\nconst useSimpleNamesKey = 'UseSimpleNames'\nconst keepCameraWhenMovingKey = 'KeepCameraWhenMoving'\nconst textOnlyModeKey = 'TextOnlyMode'\nconst captionsEnabledKey = 'CaptionsEnabled'\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DispatchContext, UserMapContext } from '../../App'\nimport { ValidColors } from '../../../server/src/types'\nimport { UpdateProfileColorAction, ShowModalAction } from '../../Actions'\nimport { Modal } from '../../modals'\nimport { getGateVisits, incrementGateVisits } from '../../storage'\n\n// When you pass through the ranbow door enough times, you get a randomly colored username\nexport const RainbowGateRoomView = () => {\n  function randomEnum<T> (anEnum: T): T[keyof T] {\n    const enumValues = (Object.values(anEnum) as unknown) as T[keyof T][]\n    const randomIndex = Math.floor(Math.random() * enumValues.length)\n    return enumValues[randomIndex]\n  }\n\n  const dispatch = React.useContext(DispatchContext)\n\n  const jumpThroughGate = async () => {\n    const newVisits = await incrementGateVisits()\n    dispatch(UpdateProfileColorAction(randomEnum(ValidColors)))\n    dispatch(ShowModalAction(Modal.FeatureRainbowGate))\n  }\n\n  return <div id=\"rainbow-gate-div\" className=\"feature-room-view\">\n    <p>Do you, in fact, approach the chair? <button id=\"rainbow-gate-button\" className='link-styled-button' onClick={jumpThroughGate}>Approach the chair.</button></p>\n  </div>\n}\n\nexport default function RainbowGateModalView () {\n  const { userMap, myId } = useContext(UserMapContext)\n\n  const [visits, setVisits] = useState(0)\n\n  useEffect(() => {\n    (async () => {\n      setVisits(await getGateVisits())\n    })()\n  }, [])\n\n  if (visits === 1) {\n    return (\n      <div>\n        <h1>It&apos;s a miracle of modern science!</h1>\n        <p>&quot;Oho! Why, you&apos;ve arrived just in time for the most amazing experience you&apos;ll ever... experience! Just sit in this chair, pull that lever, and you&apos;ll in for a truly eye-opening journey. Why, it&apos;s a miracle of modern science!&quot;</p>\n        <p>You sit in the chair (it&apos;s not especially comfortable and it&apos;s... slightly wet?) and pull the lever. There&apos;s a shudder as the machine rumbles to life and things start happening. Gears spin, lightning arcs up two metal trusses you hadn&apos;t noticed. Your hair begins to stand on end. The doctor (you didn&apos;t see any diplomas, so who&apos;s to say?) starts to cackle wildly, yelling, &quot;It works! It WORKS!&quot; to no one in particular. The machine&apos;s hum hits a crescendo when suddenly everything comes to a stop. All is silence. You wait for a moment when you hear a buzz above you.</p>\n        <p>Looking up, you see a mechanical arm holding a bucket extend out and rotate, spilling a bucket of paint all over you. &quot;Yes!&quot; yells the doctor (?) &quot;They said it couldn&apos;t be done! Now... if you&apos;ll excuse me, I need to clean the paint off the chair.&quot; They hold up a sponge and bucket of water and gesture at you to make yourself scarce.</p>\n        <p><em>Your chat name color is now <span className={`name ${userMap[myId].nameColor}`}>{userMap[myId].nameColor}</span></em>.</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <h1>Back for more?</h1>\n        <p>The ambiguously credentialed operator gives you a nod. &quot;Back for more, huh? Er, wait, no. I mean... *ahem* So! You&apos;ve returned for another glimpse at the uncanny realities beyond human perception! Well sit right down and pull yon lever, my friend.&quot; They floridly gesture to the chair at the center of the paint-dumping apparatus.</p>\n        <p>You pull the lever and nothing appears to happen. Then the machine operator runs up with a bucket of paint and spills it all over you. &quot;So sorry, we only have the aetheric budget to do the big show once per person. Grant writing, am I right?&quot; They look you over. &quot;You know, you don&apos;t look that different to me, but what do I know?&quot; They tap the multi-lensed googles obscuring most of their face. &quot;With these things on it&apos;s a wonder I can see at all. Everything is coming through like an original Game Boy screen.&quot;</p>\n        <p><em>Your chat name color is now <span className={`name ${userMap[myId].nameColor}`}>{userMap[myId].nameColor}</span></em>.</p>\n      </div>\n    )\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DispatchContext, UserMapContext } from '../../App'\nimport { UpdateProfileColorAction, ShowModalAction, HideModalAction } from '../../Actions'\nimport { Modal } from '../../modals'\nimport * as Storage from '../../storage'\n\n// When you pass through the rainbow door enough times, you get a randomly colored username.\n// This undoes that.\nexport const DullDoorRoomView = () => {\n  const dispatch = React.useContext(DispatchContext)\n  const { userMap, myId } = useContext(UserMapContext)\n\n  const user = userMap[myId]\n\n  const walkThroughDoor = () => {\n    if (user.nameColor) {\n      Storage.setWasColoredEntering(true)\n    } else {\n      Storage.setWasColoredEntering(false)\n    }\n    dispatch(ShowModalAction(Modal.FeatureDullDoor))\n  }\n\n  return <div id=\"dull-door-div\" className=\"feature-room-view\">\n    <p>Inside the glass tube there&apos;s nothing in particular, though you note that there&apos;s a grate on the floor. A damp sign next to the tube&apos;s opening says &quot;Secondarily-Hydrogenated Oxygen Weighted Emulsion Remover&quot;. A smaller sign below that reads &quot;For Dirts, Dyes, and Distress!&quot; <button id=\"dull-door-button\" className='link-styled-button' onClick={walkThroughDoor}>Step on the grate</button>.</p>\n  </div>\n}\n\nexport default function DullDoorModalView () {\n  const dispatch = React.useContext(DispatchContext)\n\n  const [wasColoredEntering, setWasColoredEntering] = useState(false)\n\n  useEffect(() => {\n    (async () => {\n      setWasColoredEntering(await Storage.getWasColoredEntering())\n    })()\n  }, [])\n\n  const giveColor = () => {\n    dispatch(UpdateProfileColorAction(null))\n    dispatch(HideModalAction())\n  }\n  const leave = () => {\n    dispatch(HideModalAction())\n  }\n\n  if (!wasColoredEntering) {\n    return (\n      <div>\n        <h1>Refreshing!</h1>\n        <p>As you step into the tube, the grating beneath you depresses and clicks. Suddenly the machine gurgles and from openings the top of the tube, warm Secondarily-Hydrogenated Oxygen (miracle of the modern age!) streams down on you and rinses any Dirts, Dyes, or Distress you may have accrued away. It&apos;s soothing, in its own odd way, but you aren&apos;t sure this so-called S.H.O.W.E.R. will catch on with the masses.</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <h1>Could be refreshing?</h1>\n        <p>You tentatively press a toe onto the grate. Suddenly the machine gurgles and from openings the top of the tube, warm Secondarily-Hydrogenated Oxygen (miracle of the modern age!) streams down! It certainly seems like any Dirts, Dyes, or Distress you may have accrued will be washed away if you step in fully. It&apos;ll probably be refreshing, but it will <em>definitely</em> take the paint from the doctor(?) with it.</p>\n        <p><strong>Fully enter the S.H.O.W.E.R.?</strong></p>\n        <button id='dull-door-agree' onClick={giveColor}>Enter</button>\n        <button id='dull-door-agree' onClick={leave}>Leave</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { DispatchContext } from '../../App'\nimport { ShowModalAction } from '../../Actions'\nimport { Modal } from '../../modals'\nimport { Room } from '../../room'\n\nexport const FullRoomIndexRoomView = () => {\n  const dispatch = React.useContext(DispatchContext)\n\n  const handleClick = () => {\n    dispatch(ShowModalAction(Modal.FeatureFullRoomIndex))\n  }\n\n  return <div id=\"full-room-index-div\" className=\"feature-room-view\">\n    <button id=\"full-room-index-button\" onClick={handleClick}>Read the book</button>\n  </div>\n}\n\nexport default function FullRoomIndexModalView (props: { rooms: Room[] }) {\n  return (\n    <div>\n      <h1>Unerring Teleport</h1>\n      <p>Verbal elements - either the True Name of the destination, the two common names of the destination, or the name of the destination from an adjoining location (which can only be known from that destination, and is colored in green for whatever reason). The name must exact, but the volume of the incantation is irrelevant.</p>\n      <p>Somatic elements - /go or /move</p>\n      <p>Material components - none</p>\n      <p>This spell will take you to whichever place you wish, hidden or not. The only issue is that the names of the hidden places are obscured by dark magics. I, the Great Wizard Teleportus, have researched long and hard, and at last produced a complete list of all the room in this space. Bow before my awesome intelligence!</p>\n      <p>Examples:</p>\n      <ul>\n        <li key='example-0'><em>/go hiddenPortalRoom</em> utilizes the true name to return here</li>\n        <li key='example-1'><em>/move leap into the shimmering portal</em> utilizes the name of the destination (&apos;leap into the shimmering portal&apos;) from the adjacent room (here)</li>\n        <li key='example-2'><em>/move Unconferencing: Sokoban</em> utilizes the first common name</li>\n        <li key='example-3'><em>/go the artists&apos; atelier</em> utilizes the second common name</li>\n      </ul>\n      <table>\n        <tbody>\n          <tr>\n            <th key='common-1-header'>common (first)</th>\n            <th key='common-2-header'>common (second)</th>\n            <th key='true-header'>true</th>\n          </tr>\n          {\n            props.rooms.map((e) => {\n              return <tr key={e.id}>\n                <td key={`common-1-${e.id}`}>{e.displayName}</td>\n                <td key={`common-2-${e.id}`}>{e.shortName}</td>\n                <td key={`true-${e.id}`}>{e.id}</td>\n              </tr>\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import { pickUpRandomItemFromList, pickUpItem, sendChatMessage, displayMessageFromList, updateFontReward, displayMessage } from './networking'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport const linkActions = {\n  generateFood: () => {\n    pickUpRandomItemFromList('vendingMachineFood')\n  },\n  pickUpPuppy: () => {\n    pickUpItem('a tiny puppy')\n  },\n  drinkPolymorph: () => { // Listen. Is this the correct way? No. Does it save me needing to write a new httpTrigger? Yes.\n    sendChatMessage(uuidv4(), '/get colourful potion')\n  },\n  drinkCancellation: () => {\n    sendChatMessage(uuidv4(), '/get clear potion')\n  },\n  getFortune: () => {\n    sendChatMessage(uuidv4(), '/get fortune cookie')\n  },\n  readPoster: () => {\n    displayMessageFromList('motivationPosters')\n  },\n  readClosedSign: () => {\n    displayMessageFromList('closedSigns')\n  },\n  getGameRec: () => {\n    displayMessageFromList('gameRecommendations')\n  },\n  pentagramHighTech: () => {\n    pentagramAction('Impactful')\n  },\n  pentagramMinimalist: () => {\n    pentagramAction('Classic')\n  },\n  pentagramComical: () => {\n    pentagramAction('Comic')\n  },\n  pentagramNormal: () => {\n    pentagramAction('')\n  },\n  hearPickupLine: () => {\n    displayMessageFromList('pickupLines')\n  },\n  watchRobot: () => {\n    displayMessageFromList('robots')\n  }\n}\n\nconst pentagramAction = function (font: string) {\n  updateFontReward(uuidv4(), font)\n  sendChatMessage(uuidv4(), '/go ASCII')\n  displayMessage('You feel changed by your journey through the pentagram...')\n}\n","import Config from './config'\n\nexport const nie = <T extends unknown>(_: T): void => {\n  throw Error('Not Implemented')\n}\n","import React, { useContext } from 'react'\nimport { nie } from '../utils'\nimport * as Twilio from 'twilio-video'\n\nexport const MediaChatContext = React.createContext<MediaChatContextProps>({\n  prepareForMediaChat: async () => console.log('Not implemented'),\n  prepareMediaDevices: async () => console.log('Not implemented'),\n\n  publishMedia: () => console.log('Not implemented'),\n  publishAudio: () => console.log('Not implemented'),\n  unpublishMedia: () => console.log('Not implemented'),\n\n  publishingCamera: false,\n  publishingMic: false,\n\n  cameras: [],\n  mics: [],\n\n  setCurrentCamera: nie,\n  setCurrentMic: nie,\n\n  currentMic: undefined,\n  currentCamera: undefined,\n\n  localStreamView: React.createElement('div'),\n\n  inCall: false,\n  joinCallFailed: false,\n  joinCall: nie,\n  leaveCall: () => console.log('Not implemented'),\n\n  callParticipants: undefined,\n\n  cameraEnabled: false,\n  micEnabled: false,\n\n  setCameraEnabled: (enabled: boolean) => console.log('Not implemented'),\n  setMicEnabled: (enabled: boolean) => console.log('Not implemented')\n})\n\ntype MediaChatContextProps = {\n    // Request media permissions, also do any token handshaking needed\n    prepareForMediaChat: () => Promise<any>\n    prepareMediaDevices: () => Promise<any>\n\n    publishingCamera: boolean\n    publishingMic: boolean\n\n    cameras: DeviceInfo[]\n    mics: DeviceInfo[]\n\n    currentCamera?: DeviceInfo\n    currentMic?: DeviceInfo\n\n    setCurrentCamera: (deviceId: string) => void\n    setCurrentMic: (deviceId: string) => void\n\n    localStreamView: React.ReactNode\n\n    inCall: boolean\n    joinCallFailed: boolean // true if joinCall has thrown an exception\n    joinCall: (room: string, keepCameraWhenMoving: boolean) => void\n    leaveCall: () => void\n    // The Twilio implementation has an object referencing the active call.\n    // Does it conceptually make sense to add one to the public interface?\n\n    // Hide or show your camera/mic across the network\n    // Note that the Twilio implementation has publishVideo() as well,\n    // but we don't currently reference it externally.\n    publishMedia: () => void\n    publishAudio: () => void\n    unpublishMedia: () => void\n\n    callParticipants?: Map<String, Twilio.Participant>\n    cameraEnabled: boolean\n    micEnabled: boolean\n\n    setCameraEnabled: (enabled: boolean) => void\n    setMicEnabled: (enabled: boolean) => void\n}\n\nexport type Participant = {\n    userId: string\n    muted: boolean\n    streamView: React.ReactNode\n    shouldShow: boolean\n}\n\nexport type DeviceInfo = {\n    id: string\n    name: string\n}\n\nexport const useMediaChatContext = () => useContext(MediaChatContext)\n","import React, { useContext } from 'react'\n\nimport { UserMapContext } from '../App'\nimport { dropItem } from '../networking'\n\nconst HeldItemView = () => {\n  const { userMap, myId } = useContext(UserMapContext)\n  const user = userMap[myId]\n\n  const dropHeldItem = () => {\n    dropItem()\n  }\n\n  if (user.item) {\n    return (\n      <span>\n        You are holding {user.item}.{' '}\n        <button className=\"link-styled-button\" onClick={dropHeldItem}>\n          Drop it\n        </button>\n        .\n      </span>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default HeldItemView\n","import React, { useContext } from 'react'\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport { DispatchContext, SettingsContext, UserMapContext } from '../App'\nimport ReactTooltip from 'react-tooltip'\nimport {\n  BanToggleAction,\n  HideModalAction,\n  ModToggleAction\n} from '../Actions'\nimport { User } from '../../server/src/user'\n\nimport '../../style/nameView.css'\nimport { fetchProfile } from '../networking'\n\nexport default function NameView (props: { userId: string; id?: string; nowrap?: boolean }) {\n  const dispatch = useContext(DispatchContext)\n  const { useSimpleNames } = useContext(SettingsContext)\n  const { userMap, myId } = useContext(UserMapContext)\n\n  const user: User = userMap[props.userId]\n  const username = user && user.username\n  const isMod = user && user.isMod\n  const isBanned = user && user.isBanned\n\n  const player = userMap[myId]\n  const playerIsMod = player && player.isMod\n\n  const handleProfile = (e, data) => {\n    dispatch(HideModalAction())\n    fetchProfile(data.id)\n  }\n\n  const handleBan = (e, data) => {\n    const doBan = confirm(\n      `Are you sure you would like to ${isBanned ? 'unban' : 'ban'} the user '${\n        data.username\n      }'?`\n    )\n    if (doBan) {\n      dispatch(BanToggleAction(data.id))\n    }\n  }\n\n  const handleMod = (e, data) => {\n    const doMod = confirm(\n      `Are you sure you would like to ${isMod ? 'remove' : 'add'} the user '${\n        data.username\n      }' ${isMod ? 'from' : 'to'} the mod list?`\n    )\n    if (doMod) {\n      dispatch(ModToggleAction(data.id))\n    }\n  }\n\n  const banButton = playerIsMod ? (\n    <MenuItem\n      data={{ id: props.userId, username: username }}\n      onClick={handleBan}\n    >\n      {isBanned ? 'Unban' : 'Ban'}\n    </MenuItem>\n  ) : (\n    ''\n  )\n\n  const modButton = playerIsMod ? (\n    <MenuItem\n      data={{ id: props.userId, username: username }}\n      onClick={handleMod}\n    >\n      {isMod ? 'Remove Mod' : 'Make Mod'}\n    </MenuItem>\n  ) : (\n    ''\n  )\n\n  // #issue 43: Left click for dropdowns in addition to rightclick. Apparently disabling \"holdToDisplay\" can make this happen,\n  // not sure what the side effects are though.\n  // https://github.com/vkbansal/react-contextmenu/issues/50#issuecomment-335855193\n  //\n  // Tooltip: If no pronouns are set, no tooltip will show\n\n  var className = 'name'\n  if (!useSimpleNames && user && user.nameColor) {\n    className = className + ' ' + user.nameColor\n  }\n  if (!useSimpleNames && user && user.fontReward) {\n    className = className + ' font-' + user.fontReward\n  }\n  // TODO: should be best handled via css\n  const customStyle = { ['whiteSpace' as any]: props.nowrap ? 'nowrap' : undefined }\n  return (\n    <span className={className} data-tip={user && user.pronouns} style={customStyle} >\n      <ContextMenuTrigger id={props.id} renderTag=\"span\" holdToDisplay={0}>\n        <strong className={isMod ? 'mod' : ''}>\n          {isMod ? '[Mod] ' : ''}\n          {(!useSimpleNames && user && user.polymorph) || ''}\n          {username || 'unknown'}\n        </strong>\n      </ContextMenuTrigger>\n      <ContextMenu id={props.id}>\n        <MenuItem data={{ id: props.userId }} onClick={handleProfile}>\n          Profile\n        </MenuItem>\n        <MenuItem data={{ id: props.userId }} onClick={handleProfile}>\n          Whisper\n        </MenuItem>\n        {banButton}\n        {modButton}\n      </ContextMenu>\n      <ReactTooltip />\n    </span>\n  )\n}\n","import React from 'react'\nimport { FaVideo, FaVolumeUp } from 'react-icons/fa'\nimport { UserMapContext } from '../App'\nimport { useMediaChatContext } from '../videochat/mediaChatContext'\nimport HeldItemView from './HeldItemView'\nimport NameView from './NameView'\n\n// https://stackoverflow.com/questions/23618744/rendering-comma-separated-list-of-links\n/* intersperse: Return an array with the separator interspersed between\n * each element of the input array.\n *\n * > _([1,2,3]).intersperse(0)\n * [1,0,2,0,3]\n */\nfunction intersperse (arr, sep) {\n  if (arr.length === 0) {\n    return []\n  }\n\n  return arr.slice(1).reduce(\n    function (xs, x, i) {\n      return xs.concat([sep, x])\n    },\n    [arr[0]]\n  )\n}\n\nconst PresenceView = (props: {\n  users?: string[];\n  userId?: string;\n  roomId: string;\n}) => {\n  const { userMap } = React.useContext(UserMapContext)\n  let { users, userId } = props\n  const { callParticipants } = useMediaChatContext()\n\n  let audioUsers, videoUsers\n  if (callParticipants) {\n    const mediaUsers = Array.from(callParticipants.values())\n    audioUsers = mediaUsers.filter(p => p.audioTracks.size > 0).map(p => p.identity)\n    videoUsers = mediaUsers.filter((p) => p.videoTracks.size > 0).map((p) => p.identity)\n  }\n\n  // Shep: Issue 43, reminder to myself that this is the code making sure users don't appear in their own client lists.\n  if (users && userId) {\n    users = users.filter((u) => u !== userId)\n  }\n\n  if (users) {\n    // TODO: This should happen in the reducer\n    let names\n\n    if (users.length === 0) {\n      return (\n        <div id=\"dynamic-room-description\">\n          You are all alone here. <HeldItemView />\n        </div>\n      )\n    }\n\n    if (props.roomId === 'theater') {\n      return (\n        <div id=\"dynamic-room-description\">\n          There are {users.length} other people sitting in here.\n        </div>\n      )\n    }\n\n    const userViews = users.map((u, idx) => {\n      const user = userMap[u]\n      if (!user) {\n        return <span />\n      }\n      const id = `presence-${idx}`\n      return (\n        <span key={`room-presence-${id}`}>\n          <NameView userId={u} id={id} key={id} />\n          {audioUsers && audioUsers.includes(user.id) ? (\n            <FaVolumeUp className=\"has-audio\" />\n          ) : null}\n          {videoUsers && videoUsers.includes(user.id) ? (\n            <FaVideo className=\"has-video\" />\n          ) : null}\n          {user.item ? ` (holding ${user.item})` : null}\n        </span>\n      )\n    })\n\n    if (users.length === 1) {\n      names = userViews[0]\n    } else if (users.length === 2) {\n      names = (\n        <span>\n          {userViews[0]} and {userViews[1]}\n        </span>\n      )\n    } else {\n      names = (\n        <span>\n          {intersperse(userViews.slice(0, users.length - 1), ', ')}, and{' '}\n          {userViews[userViews.length - 1]}\n        </span>\n      )\n    }\n\n    return (\n      <div id=\"dynamic-room-description\">\n        Also here {users.length === 1 ? 'is' : 'are'} {names}. <HeldItemView />\n      </div>\n    )\n  } else {\n    return <div id=\"dynamic-room-description\" />\n  }\n}\n\nexport default PresenceView\n","import * as React from 'react'\nimport { Room } from '../room'\nimport {\n  moveToRoom,\n  pickUpItem\n} from '../networking'\nimport { DispatchContext } from '../App'\nimport {\n  StopVideoChatAction,\n  ShowModalAction\n} from '../Actions'\nimport { FaChevronDown, FaChevronUp, FaCog } from 'react-icons/fa'\n\nimport '../../style/room.css'\nimport { Modal } from '../modals'\nimport { RainbowGateRoomView } from './feature/RainbowGateViews'\nimport { DullDoorRoomView } from './feature/DullDoorViews'\nimport { FullRoomIndexRoomView } from './feature/FullRoomIndexViews'\nimport { linkActions } from '../linkActions'\nimport { useState } from 'react'\nimport { useMediaChatContext } from '../videochat/mediaChatContext'\nimport PresenceView from './PresenceView'\n\nconst VIDEO_CHAT_MAX_SIZE = 8\n\ninterface Props {\n  room: Room;\n  userId: string;\n  roomData: { [roomId: string]: Room };\n  inMediaChat: boolean;\n  keepCameraWhenMoving: boolean;\n  textOnlyMode: boolean;\n  mediaChatView?: React.ReactElement\n  hasDismissedAModal: boolean\n}\n\nexport default function RoomView (props: Props) {\n  const dispatch = React.useContext(DispatchContext)\n  const {\n    prepareForMediaChat,\n    joinCall,\n    unpublishMedia\n  } = useMediaChatContext()\n  const { room } = props\n\n  const [fullDescriptionVisible, setFullDescriptionVisible] =\n      useState<boolean>(true)\n\n  // This is very silly.\n  // Since we're manually setting raw HTML, we can't get refs to add proper click handlers\n  // Instead, we just hijack ALL clicks in the description, and check if they're for a link\n  const descriptionClick = (e) => {\n    const roomId =\n      e.target && e.target.getAttribute && e.target.getAttribute('data-room')\n    if (roomId) {\n      moveToRoom(roomId)\n      return\n    }\n\n    const itemName =\n      e.target && e.target.getAttribute && e.target.getAttribute('data-item')\n    if (itemName) {\n      pickUpItem(itemName)\n    }\n\n    const actionName =\n      e.target && e.target.getAttribute && e.target.getAttribute('data-action')\n    if (actionName) {\n      linkActions[actionName]()\n    }\n  }\n\n  const toggleRoomDescriptionClick = (e) => {\n    setFullDescriptionVisible(!fullDescriptionVisible)\n  }\n\n  React.useEffect(() => {\n    if (room && room.mediaChat && !props.textOnlyMode && props.hasDismissedAModal) {\n      // HACK ALERT: This call is necessary to properly set the state variables related to leaving video chat, since\n      // our Twilio state isn't quite synchronized with our react state. We never publish if we don't want to (due to\n      // passing keepCameraWhenMoving into joinCall) so we aren't publishing and unpublishing. We still need to sync.\n      if (!props.keepCameraWhenMoving) {\n        leaveVideoChat()\n      }\n      prepareForMediaChat()\n      joinCall(props.room.id, props.keepCameraWhenMoving)\n    }\n  }, [props.room.id, props.hasDismissedAModal])\n\n  const leaveVideoChat = () => {\n    dispatch(StopVideoChatAction())\n    unpublishMedia()\n  }\n\n  const showNoteWall = () => {\n    dispatch(ShowModalAction(Modal.NoteWall))\n  }\n\n  const showRiddles = () => {\n    dispatch(ShowModalAction(Modal.Riddles))\n  }\n\n  let noteWallView\n  if (room && room.hasNoteWall) {\n    if (room.noteWallData) {\n      noteWallView = (\n        <div>\n          {room.noteWallData.roomWallDescription}{' '}\n          <button onClick={showNoteWall}>\n            {room.noteWallData.noteWallButton}\n          </button>\n        </div>\n      )\n    } else {\n      noteWallView = (\n        <div>\n          One of the walls has space for attendees to put up sticky notes.{' '}\n          <button onClick={showNoteWall}>View note wall</button>\n        </div>\n      )\n    }\n  }\n\n  console.log('ROOM', JSON.stringify(room, null, 2))\n\n  // TODO: Don't hard-code order of features\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  /* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n  /* eslint-disable jsx-a11y/no-static-element-interactions */\n  return (\n    <div id=\"room\">\n      <h1 id=\"room-name\">\n        {room ? room.displayName : 'Loading...'}\n        <button\n          type=\"button\"\n          id=\"room-collapse-button\"\n          className=\"link-styled-button\"\n          onClick={toggleRoomDescriptionClick}\n        >\n          {fullDescriptionVisible ? (\n            <span>\n              Hide Description <FaChevronUp />\n            </span>\n          ) : (\n            <span>\n              Show Description <FaChevronDown />\n            </span>\n          )}\n        </button>\n      </h1>\n\n      <div\n        id=\"full-room-description\"\n        className={fullDescriptionVisible ? '' : 'collapsed'}\n      >\n        <div\n          id=\"static-room-description\"\n          onClick={descriptionClick}\n          dangerouslySetInnerHTML={{\n            __html: room\n              ? parseDescription(room.description, props.roomData)\n              : 'Loading current room...'\n          }}\n        />\n        {room && room.id === 'theater' ? <StreamEmbed /> : null}\n        {room &&\n        room.specialFeatures &&\n        room.specialFeatures.includes('RAINBOW_DOOR') ? (\n            <RainbowGateRoomView />\n          ) : (\n            ''\n          )}\n        {room &&\n        room.specialFeatures &&\n        room.specialFeatures.includes('DULL_DOOR') ? (\n            <DullDoorRoomView />\n          ) : (\n            ''\n          )}\n        {room &&\n        room.specialFeatures &&\n        room.specialFeatures.includes('FULL_ROOM_INDEX') ? (\n            <FullRoomIndexRoomView />\n          ) : (\n            ''\n          )}\n        {room && room.riddles ? (\n          <button id=\"riddle-button\" onClick={showRiddles}>\n            {room.riddles.length > 1\n              ? 'Examine the Riddles'\n              : 'Examine the Riddle'}\n          </button>\n        ) : (\n          ''\n        )}\n        {noteWallView}\n      </div>\n      {room ? (\n        <PresenceView\n          users={room.users}\n          userId={props.userId}\n          roomId={room.id}\n        />\n      ) : (\n        ''\n      )}\n      {props.mediaChatView || ''}\n    </div>\n  )\n}\n\nfunction parseDescription (\n  description: string,\n  roomData: { [roomId: string]: Room }\n): string {\n  // eslint-disable-next-line no-useless-escape\n  const complexLinkRegex = /\\[\\[([^\\]]*?)\\-\\>([^\\]]*?)\\]\\]/g\n  const simpleLinkRegex = /\\[\\[(.+?)\\]\\]/g\n\n  description = description.replace(complexLinkRegex, (match, text, roomId) => {\n    const room = roomData[roomId]\n    if (roomId === 'item') {\n      return `<a class='room-link' href='#' data-item='${text}'>${text}</a>`\n    } else if (room) {\n      const userCount =\n        room && room.users && room.users.length > 0\n          ? ` (${room.users.length})`\n          : ''\n      return `<a class='room-link' href='#' data-room='${roomId}'>${text}${userCount}</a>`\n    } else if (linkActions[roomId]) {\n      return `<a class='room-link' href='#' data-action='${roomId}'>${text}</a>`\n    } else {\n      // TODO: This warning is now expected, with room data being JIT\n      console.log(\n        `Dev warning: tried to link to room ${roomId}, which doesn't exist`\n      )\n    }\n  })\n\n  description = description.replace(simpleLinkRegex, (match, roomId) => {\n    const room = roomData[roomId]\n    if (!room) {\n      // TODO: This warning is now expected, with room data being JIT\n      console.log(\n        `Dev warning: tried to link to room ${roomId}, which doesn't exist`\n      )\n    }\n    const userCount =\n      room && room.users && room.users.length > 0\n        ? ` (${room.users.length})`\n        : ''\n    return `<a class='room-link' href='#' data-room='${roomId}'>${roomId}${userCount}</a>`\n  })\n  return description\n}\n\nexport function StreamEmbed () {\n  const streamRef = React.useRef<HTMLIFrameElement>(null)\n  const captionsRef = React.useRef<HTMLIFrameElement>(null)\n\n  return (\n    <div id=\"iframes\" style={{ margin: 'auto' }}>\n      <iframe\n        width=\"560\"\n        title=\"stream\"\n        ref={streamRef}\n        height=\"315\"\n        src=\"https://www.youtube.com/embed/live_stream?channel=UCKv_QzXft4mD6TXmQBZtzIA\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n      <iframe\n        id=\"captions\"\n        title=\"captions\"\n        ref={captionsRef}\n        width=\"560\"\n        height=\"100\"\n        src=\"https://www.streamtext.net/player/?event=RoguelikeCelebration&chat=false&header=false&footer=false&indicator=false&ff=Consolas&fgc=93a1a1\"\n        frameBorder=\"0\"\n        allow=\"autoplay; encrypted-media;\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  )\n}\n","import { Room } from './room'\n\nexport type Message =\n  | ConnectedMessage\n  | DisconnectedMessage\n  | EnteredMessage\n  | LeftMessage\n  | MovedRoomMessage\n  | SameRoomMessage\n  | ChatMessage\n  | WhisperMessage\n  | ShoutMessage\n  | EmoteMessage\n  | DanceMessage\n  | ModMessage\n  | ErrorMessage\n  | CommandMessage\n  | CaptionMessage\n\nexport enum MessageType {\n  Connected = 'CONNECTED',\n  Disconnected = 'DISCONNECTED',\n  Entered = 'ENTERED',\n  Left = 'LEFT',\n  MovedRoom = 'MOVED',\n  SameRoom = 'SAME',\n  Chat = 'CHAT',\n  Whisper = 'WHISPER',\n  Shout = 'SHOUT',\n  Emote = 'EMOTE',\n  Dance = 'DANCE',\n  Mod = 'MOD',\n  Error = 'ERROR',\n  Command = 'COMMAND',\n  Caption = 'CAPTION'\n}\n\nexport function isDeletable (message: Message): message is ChatMessage | EmoteMessage | ShoutMessage | DanceMessage {\n  return [MessageType.Chat, MessageType.Emote, MessageType.Shout, MessageType.Dance, MessageType.Caption].includes(message.type)\n}\n\nexport interface ConnectedMessage {\n  type: MessageType.Connected;\n  userId: string;\n  roomId: string;\n  numUsersInRoom: number;\n  timestamp: Date;\n}\n\nexport const createConnectedMessage = (userId: string, roomId: string, numUsersInRoom: number): ConnectedMessage => {\n  return { type: MessageType.Connected, userId, roomId, numUsersInRoom, timestamp: new Date() }\n}\n\nexport interface DisconnectedMessage {\n  type: MessageType.Disconnected;\n  userId: string;\n  roomId: string;\n  numUsersInRoom: number;\n  timestamp: Date;\n}\n\nexport const createDisconnectedMessage = (\n  userId: string,\n  roomId: string,\n  numUsersInRoom: number\n): DisconnectedMessage => {\n  return { type: MessageType.Disconnected, userId, roomId, numUsersInRoom, timestamp: new Date() }\n}\n\nexport interface EnteredMessage {\n  type: MessageType.Entered;\n  userId: string;\n  fromId: string;\n  fromName: string;\n  roomId: string;\n  numUsersInRoom: number;\n  timestamp: Date;\n}\n\nexport const createEnteredMessage = (\n  userId: string,\n  fromId: string,\n  fromName: string,\n  roomId: string,\n  numUsersInRoom: number\n): EnteredMessage => {\n  return { type: MessageType.Entered, userId, fromId, fromName, roomId, numUsersInRoom, timestamp: new Date() }\n}\n\nexport interface LeftMessage {\n  type: MessageType.Left;\n  userId: string;\n  toId: string;\n  toName: string;\n  roomId: string;\n  numUsersInRoom: number;\n  timestamp: Date;\n}\n\nexport const createLeftMessage = (userId: string, toId: string, toName: string, roomId: string, numUsersInRoom: number): LeftMessage => {\n  return { type: MessageType.Left, userId, toId, toName, roomId, numUsersInRoom, timestamp: new Date() }\n}\n\nexport interface MovedRoomMessage {\n  type: MessageType.MovedRoom;\n  to: string;\n  timestamp: Date;\n}\n\nexport const createMovedRoomMessage = (to: string): MovedRoomMessage => {\n  return { type: MessageType.MovedRoom, to, timestamp: new Date() }\n}\n\nexport interface SameRoomMessage {\n  type: MessageType.SameRoom;\n  roomId: string;\n  timestamp: Date;\n}\n\nexport const createSameRoomMessage = (to: string): SameRoomMessage => {\n  return { type: MessageType.SameRoom, roomId: to, timestamp: new Date() }\n}\n\nexport interface ChatMessage {\n  type: MessageType.Chat;\n  messageId: string;\n  userId: string;\n  message: string;\n  timestamp: Date;\n}\n\nexport const createChatMessage = (\n  messageId: string,\n  userId: string,\n  message: string\n): ChatMessage => {\n  return { type: MessageType.Chat, messageId, userId, message, timestamp: new Date() }\n}\n\nexport interface CaptionMessage {\n  type: MessageType.Caption;\n  messageId: string;\n  userId: string;\n  message: string;\n  timestamp: Date;\n}\n\nexport const createCaptionMessage = (\n  messageId: string,\n  userId: string,\n  message: string\n): CaptionMessage => {\n  return { type: MessageType.Caption, messageId, userId, message, timestamp: new Date() }\n}\n\nexport interface WhisperMessage {\n  type: MessageType.Whisper;\n  userId: string;\n  message: string;\n  senderIsSelf: boolean;\n  timestamp: Date;\n}\n\nexport const createWhisperMessage = (\n  userId: string,\n  message: string,\n  senderIsSelf = false\n): WhisperMessage => {\n  return { type: MessageType.Whisper, userId, message, senderIsSelf, timestamp: new Date() }\n}\n\nexport interface ModMessage {\n  type: MessageType.Mod;\n  userId: string;\n  message: string;\n  senderIsSelf: boolean;\n  timestamp: Date;\n}\n\nexport const createModMessage = (\n  userId: string,\n  message: string,\n  senderIsSelf = false\n): ModMessage => {\n  return { type: MessageType.Mod, userId, message, senderIsSelf, timestamp: new Date() }\n}\n\nexport interface ShoutMessage {\n  type: MessageType.Shout;\n  messageId: string;\n  userId: string;\n  message: string;\n  timestamp: Date;\n}\n\nexport const createShoutMessage = (\n  id: string,\n  userId: string,\n  message: string\n): ShoutMessage => {\n  return { type: MessageType.Shout, messageId: id, userId, message, timestamp: new Date() }\n}\n\nexport interface EmoteMessage {\n  type: MessageType.Emote;\n  messageId: string;\n  userId: string;\n  message: string;\n  timestamp: Date;\n}\n\nexport const createEmoteMessage = (\n  id: string,\n  userId: string,\n  message: string\n): EmoteMessage => {\n  return { type: MessageType.Emote, messageId: id, userId, message, timestamp: new Date() }\n}\n\nexport interface DanceMessage {\n  type: MessageType.Dance;\n  messageId: string;\n  userId: string;\n  message: string;\n  timestamp: Date;\n}\n\nexport const createDanceMessage = (\n  id: string,\n  userId: string,\n  message: string\n): DanceMessage => {\n  return { type: MessageType.Dance, messageId: id, userId, message, timestamp: new Date() }\n}\n\nexport interface ErrorMessage {\n  type: MessageType.Error;\n  error: string;\n  timestamp: Date;\n}\n\nexport const createErrorMessage = (error: string): ErrorMessage => {\n  return { type: MessageType.Error, error, timestamp: new Date() }\n}\n\nexport interface CommandMessage {\n  type: MessageType.Command;\n  command: string;\n  timestamp: Date;\n}\n\nexport const createCommandMessage = (command: string): CommandMessage => {\n  return { type: MessageType.Command, command, timestamp: new Date() }\n}\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React, { useContext, FunctionComponent } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport Linkify from 'react-linkify'\n\nimport { MenuItem, ContextMenuTrigger, ContextMenu } from 'react-contextmenu'\n\nimport {\n  Message,\n  MessageType,\n  ConnectedMessage,\n  DisconnectedMessage,\n  EnteredMessage,\n  LeftMessage,\n  MovedRoomMessage,\n  SameRoomMessage,\n  ChatMessage,\n  WhisperMessage,\n  ErrorMessage,\n  ShoutMessage,\n  EmoteMessage,\n  DanceMessage,\n  ModMessage,\n  CommandMessage,\n  CaptionMessage\n} from '../message'\nimport NameView from './NameView'\nimport { DispatchContext, UserMapContext, RoomDataContext } from '../App'\nimport { deleteMessage, fetchProfile, moveToRoom } from '../networking'\n\nconst formatter = new Intl.DateTimeFormat('en', { hour: 'numeric', minute: 'numeric' })\n\nexport default function MessageView (props: { message: Message; id: string, hideTimestamp: boolean, msgIndex: number }) {\n  const { message } = props\n  if (!message) { return <div/> }\n\n  const messageMap = {\n    [MessageType.Connected]: ConnectedMessageView,\n    [MessageType.Disconnected]: DisconnectedMessageView,\n    [MessageType.Entered]: EnteredView,\n    [MessageType.Left]: LeftView,\n    [MessageType.MovedRoom]: MovedView,\n    [MessageType.SameRoom]: SameView,\n    [MessageType.Chat]: ChatMessageView,\n    [MessageType.Whisper]: WhisperView,\n    [MessageType.Shout]: ShoutView,\n    [MessageType.Emote]: EmoteView,\n    [MessageType.Dance]: DanceView,\n    [MessageType.Caption]: CaptionView,\n    [MessageType.Error]: ErrorView,\n    [MessageType.Mod]: ModMessageView,\n    [MessageType.Command]: CommandView\n  }\n\n  const component = messageMap[message.type]\n  if (!component) {\n    console.log('Unexpected message type', message.type)\n    return <div />\n  }\n\n  const date = (typeof message.timestamp === 'string' ? new Date(message.timestamp) : message.timestamp)\n  let className = 'message-wrapper'\n  if (props.msgIndex % 2 === 0) {\n    className += ' even-message'\n  }\n\n  return (\n    <div className={className}>\n      <div className={`time ${props.hideTimestamp ? 'show-on-hover' : null}`}>{formatter.format(date)}</div>\n      {React.createElement(component, { ...message, id: props.id })}\n    </div>\n  )\n}\n\nconst handleDeleteMessage = (e, data) => {\n  const doDelete = confirm(`Are you sure you would like to delete the message '${data.message}'?`)\n  if (doDelete) {\n    deleteMessage(data.messageId)\n  }\n}\n\ntype DeletableMessageViewProps = {\n  messageId: string\n}\n\nconst linkDecorator = (href, text, key) => (\n  <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\n    {text}\n  </a>\n)\n\nconst DeletableMessageView: FunctionComponent<DeletableMessageViewProps> = (props) => {\n  const { userMap, myId } = useContext(UserMapContext)\n  const playerIsMod = userMap[myId] && userMap[myId].isMod\n\n  if (!playerIsMod) {\n    return <Linkify componentDecorator={linkDecorator}>{props.children}</Linkify>\n  } else {\n    return (\n      <Linkify componentDecorator={linkDecorator}>\n        <span className=\"deleteMenu\">\n          <ContextMenuTrigger id={props.messageId} mouseButton={2} renderTag=\"span\">\n            {props.children}\n          </ContextMenuTrigger>\n          <ContextMenu id={props.messageId}>\n            <MenuItem\n              data={{ messageId: props.messageId, message: props.children }}\n              onClick={handleDeleteMessage}\n            >\n              { 'Delete Message?' }\n            </MenuItem>\n          </ContextMenu>\n          <ReactTooltip />\n        </span>\n      </Linkify>\n    )\n  }\n}\n\nconst ConnectedMessageView = (props: ConnectedMessage & { id: string }) => (\n  <div className=\"message\">\n    <NameView userId={props.userId} id={props.id} /> has connected.\n  </div>\n)\n\nconst DisconnectedMessageView = (\n  props: DisconnectedMessage & { id: string }\n) => (\n  <div className=\"message\">\n    <NameView userId={props.userId} id={props.id} /> has disconnected.\n  </div>\n)\n\nconst EnteredView = (props: EnteredMessage & { id: string }) => {\n  const onClick = () => {\n    moveToRoom(props.fromId)\n  }\n  const roomData = useContext(RoomDataContext)\n\n  if (roomData[props.fromId]) {\n    const fromButton: JSX.Element = roomData[props.fromId].hidden ? <text>somewhere...</text> : <button onClick={onClick} className='link-styled-button'>{props.fromName}.</button>\n    return (\n      <div className=\"message movement-message\">\n        <NameView userId={props.userId} id={props.id}/> has entered from{' '}{fromButton}\n      </div>\n    )\n  }\n  return null\n}\n\nconst LeftView = (props: LeftMessage & { id: string }) => {\n  const onClick = () => {\n    moveToRoom(props.toId)\n  }\n  const roomData = useContext(RoomDataContext)\n\n  if (roomData[props.toId]) {\n    const toButton: JSX.Element = roomData[props.toId].hidden ? <text>somewhere...</text> : <button onClick={onClick} className='link-styled-button'>{props.toName}.</button>\n    return (\n      <div className=\"message movement-message\">\n        <NameView id={props.id} userId={props.userId} /> has wandered off to{' '}{toButton}\n      </div>\n    )\n  }\n  return null\n}\n\nconst MovedView = (props: MovedRoomMessage & { id: string }) => (\n  <div className=\"message\">You have moved to {props.to}.</div>\n)\n\nconst SameView = (props: SameRoomMessage & { id: string }) => (\n  <div className=\"message\">You are already in {props.roomId}.</div>\n)\n\nconst ChatMessageView = (props: ChatMessage & { id: string }) => (\n  <div className=\"message\">\n    <NameView userId={props.userId} id={props.id} />: <DeletableMessageView messageId={props.messageId}>{props.message}</DeletableMessageView>\n  </div>\n)\n\nconst CaptionView = (props: CaptionMessage & { id: string }) => (\n  <div className=\"message\">\n    <NameView userId={props.userId} id={props.id} /> (spoken): <DeletableMessageView messageId={props.messageId}>{props.message}</DeletableMessageView>\n  </div>\n)\n\nconst WhisperView = (props: WhisperMessage & { id: string }) => {\n  const dispatch = useContext(DispatchContext)\n  const openProfile = () => {\n    fetchProfile(props.userId)\n  }\n\n  if (props.senderIsSelf) {\n    return (\n      <div className=\"whisper\" onClick={openProfile}>\n        You whisper to <NameView id={props.id} userId={props.userId} />:{' '}\n        {props.message}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"whisper\" onClick={openProfile}>\n        <NameView userId={props.userId} id={props.id} /> whispers:{' '}\n        {props.message}\n      </div>\n    )\n  }\n}\n\nconst ModMessageView = (props: ModMessage & { id: string }) => {\n  if (props.senderIsSelf) {\n    return (\n      <div className=\"message\">\n        <em>\n          <strong>You</strong> said to the <strong>mod team</strong>:{' '}\n          {props.message}\n          <br />\n          Someone from the <strong>mod team</strong> will be in touch soon.\n        </em>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"message\">\n        <em>\n          <span role=\"img\" aria-label=\"red exclamation point\">❗</span><NameView userId={props.userId} id={props.id} /> says to the{' '}\n          <strong>mods</strong>:{props.message}<span role=\"img\" aria-label=\"red exclamation point\">❗</span>\n        </em>\n      </div>\n    )\n  }\n}\n\nconst ShoutView = (props: ShoutMessage & { id: string }) => {\n  return (\n    <div className=\"message\">\n      <NameView userId={props.userId} id={props.id} /> shouts: <DeletableMessageView messageId={props.messageId}>{props.message}</DeletableMessageView>\n    </div>\n  )\n}\n\nconst EmoteView = (props: EmoteMessage & { id: string }) => {\n  return (\n    <div className=\"message\">\n      <em><NameView userId={props.userId} id={props.id} /> <DeletableMessageView messageId={props.messageId}>{props.message}</DeletableMessageView></em>\n    </div>\n  )\n}\n\nconst DanceView = (props: DanceMessage & { id: string }) => {\n  return (\n    <div className=\"message\">\n      <em><NameView userId={props.userId} id={props.id} /> <span dangerouslySetInnerHTML={ { __html: props.message } }></span></em>\n    </div>\n  )\n}\n\nconst ErrorView = (props: ErrorMessage & { id: string }) => {\n  return <div className=\"error\">{props.error}</div>\n}\n\nconst CommandView = (props: CommandMessage & { id: string }) => {\n  return <div className=\"message\"><em><span dangerouslySetInnerHTML={ { __html: props.command } }></span></em></div>\n}\n","import React, { useContext } from 'react'\nimport { findLastIndex } from 'lodash'\n\nimport MessageView from './MessageView'\nimport { Message, MessageType, ConnectedMessage, DisconnectedMessage, EnteredMessage, LeftMessage } from '../message'\n\nimport '../../style/chat.css'\nimport { DispatchContext } from '../App'\nimport { ActivateAutoscrollAction, DeactivateAutoscrollAction } from '../Actions'\nimport { ServerSettings } from '../../server/src/types'\n\nfunction isMovementMessage (message: Message): message is ConnectedMessage | DisconnectedMessage | EnteredMessage | LeftMessage {\n  return message.type === MessageType.Connected || message.type === MessageType.Disconnected ||\n    message.type === MessageType.Entered || message.type === MessageType.Left\n}\n\ninterface Props {\n  messages: Message[],\n  autoscrollChat: boolean,\n  serverSettings: ServerSettings,\n  captionsEnabled: boolean\n}\n\nexport default function ChatView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n\n  const handleScroll = () => {\n    const messageWindow = document.querySelector('#messages')\n    const isScrolledToBottom = messageWindow.scrollHeight === messageWindow.scrollTop + messageWindow.clientHeight\n\n    if (isScrolledToBottom && !props.autoscrollChat) {\n      dispatch(ActivateAutoscrollAction())\n    } else if (!isScrolledToBottom && props.autoscrollChat) {\n      dispatch(DeactivateAutoscrollAction())\n    }\n  }\n\n  React.useEffect(() => {\n    const lastMessage = document.querySelector(\n      '#messages .message-wrapper:last-of-type'\n    )\n    if (lastMessage && props.autoscrollChat) {\n      // I was using lastMessage.scrollIntoView()\n      // But I was seeing odd behavior when there was only one message on-screen.\n      // This very TS-unfriendly code fixes taht.\n      (lastMessage.parentNode as Element).scrollTop =\n        (lastMessage as any).offsetTop -\n        (lastMessage.parentNode as any).offsetTop\n    }\n  })\n\n  const [shouldShowOlderMessages, setShouldShowOlderMessages] = React.useState(false)\n\n  // This message filtering logic is kinda ugly and hard to read\n  function shouldRemoveMessage (m: Message) {\n    return isMovementMessage(m) &&\n      (\n        props.serverSettings.movementMessagesHideRoomIds.includes(m.roomId) ||\n        m.numUsersInRoom > props.serverSettings.movementMessagesHideThreshold\n      )\n  }\n  const messages = props.messages\n    .filter((msg) => {\n      // Hide movement messages if the room is busy enough\n      return !shouldRemoveMessage(msg)\n    })\n    .filter((msg) => {\n      // Don't show captions unless they're enabled\n      if (props.captionsEnabled) return true\n      return msg.type !== MessageType.Caption\n    })\n\n  const lastIndexOfMovedMessage = findLastIndex(\n    messages,\n    message => message.type === MessageType.MovedRoom\n  )\n  const currentRoomMessages = messages.slice(lastIndexOfMovedMessage)\n  const shownMessages = shouldShowOlderMessages ? messages : currentRoomMessages\n\n  return (\n    <>\n      <button\n        className=\"link-styled-button\"\n        onClick={() => setShouldShowOlderMessages(!shouldShowOlderMessages)}\n      >\n        {shouldShowOlderMessages ? 'Hide' : 'Show'} Older Messages\n      </button>\n      <div id=\"messages\" onScroll={handleScroll}>\n        {shownMessages.slice(-150).map((m, idx) => {\n          let hideTimestamp = false\n          const previousMessage = props.messages[idx - 1]\n          if (previousMessage) {\n            // TODO: Give all messages a userId for this to be meaningful\n            if (\n              (previousMessage as any).userId &&\n          (m as any).userId &&\n          (previousMessage as any).userId === (m as any).userId\n            ) {\n              const diff =\n            new Date(m.timestamp).getTime() -\n            new Date(previousMessage.timestamp).getTime()\n              // This is a bad way to calculate '3 minutes' and I should feel bad -em\n              if (diff < 1000 * 60 * 3) {\n                hideTimestamp = true\n              }\n            }\n          }\n\n          const shouldShowInterstitial = m.type === MessageType.MovedRoom\n          const id = `message-${idx}`\n\n          return (\n            <>\n              {shouldShowInterstitial ? <hr key={id + '-interstitial'}/> : null}\n              <MessageView\n                message={m}\n                key={id}\n                id={id}\n                hideTimestamp={hideTimestamp}\n                msgIndex={idx}\n              />\n            </>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { DispatchContext } from '../App'\nimport { SendMessageAction } from '../Actions'\n\nimport '../../style/input.css'\nconst emojifier = require('node-emoji')\n\nexport default function InputView (props: {\n  sendMessage: (message: string) => void,\n  prepopulated?: string\n}) {\n  const dispatch = useContext(DispatchContext)\n  const [input, setInput] = useState('')\n\n  const handleInputChange = (e) => {\n    const result = emojifier.emojify(e.currentTarget.value)\n    setInput(result)\n  }\n\n  const checkEnter = (e) => {\n    if (e.key === 'Enter') {\n      onClick()\n    }\n  }\n\n  const onClick = () => {\n    props.sendMessage(input)\n    setInput('')\n  }\n\n  useEffect(() => {\n    document.getElementById('chat-input').focus()\n    if (props.prepopulated) {\n      setInput(props.prepopulated)\n    }\n  }, [props.prepopulated])\n\n  return (\n    <div id=\"input\">\n      <input\n        type=\"text\"\n        id=\"chat-input\"\n        onChange={handleInputChange}\n        onKeyPress={checkEnter}\n        value={input}\n        aria-label=\"Chat text input box\"\n        autoComplete=\"off\"\n      />\n      <button id=\"send\" onClick={onClick}>\n        Send\n      </button>\n    </div>\n  )\n}\n","interface SlashCommand {\n    type: string;\n    description: string;\n    invocations: string[];\n    singleParameter: boolean;\n}\n\nconst SlashCommand = (\n  name: string,\n  description: string,\n  invocations: string[],\n  singleParameter: boolean\n): SlashCommand => { return { type: name, description: description, invocations: invocations, singleParameter: singleParameter } }\n\nexport enum SlashCommandType {\n  Help = 'HELP',\n  Move = 'MOVE',\n  Whisper = 'WHISPER',\n  Shout = 'SHOUT',\n  Emote = 'EMOTE',\n  Dance = 'DANCE',\n  Interact = 'INTERACT',\n  ContactMod = 'CONTACT_MOD',\n  Look = 'LOOK'\n}\n\nexport const SlashCommands: SlashCommand[] = [\n  SlashCommand(SlashCommandType.Help, 'Lists the available commands', ['/help'], true),\n  SlashCommand(SlashCommandType.Move, 'Move from one room to another. You can also click on the link in the room description.', ['/go', '/move'], false),\n  SlashCommand(SlashCommandType.Whisper, 'Whisper another user. You can also click directly on their name and select the whisper option.', ['/whisper'], false),\n  SlashCommand(SlashCommandType.Shout, 'Sends a message to everybody at once - has a 5 minute cooldown. Do not abuse this!', ['/shout'], false),\n  SlashCommand(SlashCommandType.Emote, 'Like a normal message, but in italics!', ['/emote', '/me'], false),\n  SlashCommand(SlashCommandType.Dance, 'Bust a move!', ['/dance'], true),\n  SlashCommand(SlashCommandType.ContactMod, 'Sends a message to the mod team. We will be in touch shortly afterwards.', ['/mod', '/mods', '/moderator', '/moderators'], false),\n  SlashCommand(SlashCommandType.Look, 'View the profile of another user. You can also click on their name and select the Profile option.', ['/look'], false),\n  SlashCommand(SlashCommandType.Interact, 'Interact with or get something in a room by referencing the name in the description - experiment as you explore!', ['/interact', '/get'], false)\n]\n\nexport function matchingSlashCommand (message: String): SlashCommand | undefined {\n  return SlashCommands.find((command) =>\n    command.invocations.find((invocation) =>\n      command.singleParameter ? message.startsWith(invocation) : message.startsWith(invocation + ' ')\n    )\n  )\n}\n","import { Action, ActionType } from './Actions'\nimport {\n  Message,\n  createConnectedMessage,\n  createDisconnectedMessage,\n  createEnteredMessage,\n  createLeftMessage,\n  createChatMessage,\n  createWhisperMessage,\n  createErrorMessage,\n  createShoutMessage,\n  createEmoteMessage,\n  createDanceMessage,\n  createModMessage,\n  createMovedRoomMessage,\n  createSameRoomMessage,\n  isDeletable,\n  createCommandMessage,\n  WhisperMessage,\n  createCaptionMessage\n} from './message'\nimport { Room } from './room'\nimport {\n  sendChatMessage,\n  toggleUserBan,\n  toggleUserMod,\n  updateProfileColor,\n  updateFontReward,\n  fetchProfile,\n  sendCaption\n} from './networking'\nimport { PublicUser, MinimalUser } from '../server/src/user'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Modal } from './modals'\nimport { matchingSlashCommand, SlashCommandType } from './SlashCommands'\nimport { MESSAGE_MAX_LENGTH, MESSAGE_MAX_WORD_LENGTH } from '../server/src/config'\nimport { ServerSettings, DEFAULT_SERVER_SETTINGS } from '../server/src/types'\nimport * as Storage from './storage'\nimport firebase from 'firebase/app'\nimport Config from './config'\nexport interface State {\n  firebaseApp: firebase.app.App;\n  authenticated: boolean;\n  checkedAuthentication: boolean;\n  authenticationProvider?: string;\n  mustVerifyEmail?: boolean;\n\n  hasDismissedAModal: boolean;\n\n  hasRegistered: boolean;\n\n  roomId?: string;\n  userId?: string;\n  userMap: { [userId: string]: MinimalUser };\n  roomData: { [roomId: string]: Room };\n  profileData?: PublicUser;\n\n  messages: Message[];\n  whispers: WhisperMessage[];\n  autoscrollChat: boolean;\n\n  prepopulatedInput?: string;\n\n  // Settings data\n  useSimpleNames?: boolean;\n\n  /** This is poorly named, but being \"in media chat\" means \"is publishing audio and/or video\" */\n  inMediaChat: boolean;\n  keepCameraWhenMoving?: boolean;\n  captionsEnabled: boolean,\n\n  /** text-only mode functionally overrides audio-only mode, since we don't even connect to Twilio */\n  textOnlyMode?: boolean;\n  audioOnlyMode?: boolean;\n\n  /** Tuples of userId and when they were last the visible speaker */\n  visibleSpeakers: [string, Date][]\n  currentSpeaker?: string\n\n  // How many people (other than you) to show in media chat\n  numberOfFaces: number\n\n  // If this is set to something other than Modal.None, that will indicate\n  // which modal view should be rendered on top of the chat view\n  activeModal: Modal\n  activeModalOptions: ModalOptions,\n\n  // User ID of whose profile should be shwon\n  visibleProfile?: PublicUser;\n\n  // If the device is a portrait smartphone, we hide the menu in favor of a hamburger button\n  // In that situation, this reflects whether the side menu is visible.\n  mobileSideMenuIsVisible?: boolean\n\n  // If true, non-mods cannot access the space\n  isClosed?: boolean\n\n  isBanned: boolean\n\n  serverSettings: ServerSettings\n}\n\nconsole.log(Config.FIREBASE_CONFIG)\nexport const defaultState: State = {\n  firebaseApp: firebase.initializeApp(Config.FIREBASE_CONFIG),\n  authenticated: false,\n  checkedAuthentication: false,\n  hasRegistered: false,\n  messages: [],\n  whispers: [],\n  visibleSpeakers: [],\n  autoscrollChat: true,\n  userMap: {},\n  roomData: {},\n  inMediaChat: false,\n  activeModal: Modal.None,\n  activeModalOptions: {},\n  isBanned: false,\n  serverSettings: DEFAULT_SERVER_SETTINGS,\n  numberOfFaces: 5,\n  captionsEnabled: false,\n  hasDismissedAModal: false\n}\n\n// TODO: Split this out into separate reducers based on worldstate actions vs UI actions?\nexport default (oldState: State, action: Action): State => {\n  console.log('In reducer', action)\n\n  // TODO: This could hurt perf when we have a lot of messages\n  const state: State = JSON.parse(JSON.stringify(oldState))\n  state.prepopulatedInput = undefined\n\n  if (action.type === ActionType.ReceivedMyProfile) {\n    state.profileData = action.value\n  }\n\n  if (action.type === ActionType.ReceivedServerSettings) {\n    state.serverSettings = action.value\n  }\n\n  if (action.type === ActionType.UpdatedCurrentRoom) {\n    const oldRoomId = state.roomId\n    state.roomId = action.value.roomId\n    state.roomData = { ...state.roomData, ...action.value.roomData }\n\n    if (state.roomId === 'entryway' || !state.hasDismissedAModal) {\n      // This will show any time anyone reloads into the entryway, which\n      // might be slightly annoying for e.g. greeters.\n      // Given our time constraints, that seems an acceptable tradeoff\n      // for not needing to QA more complex logic?\n      state.activeModal = Modal.Welcome\n    }\n\n    // Add a local \"you have moved to X room\" message\n    // Don't display if we're in the same room (issue 162)\n    if (state.roomData && state.roomData[action.value.roomId]) {\n      const room = state.roomData[action.value.roomId]\n      if (state.roomId !== oldRoomId) {\n        addMessage(state, createMovedRoomMessage(room.shortName))\n      } else {\n        addMessage(state, createSameRoomMessage(room.shortName))\n      }\n    }\n\n    /** Here lies a giant hack.\n     * So, the WebRTC connection handshake lives outside of Flux.\n     * The set of peer connections are long-lived objects that shouldn't live inside React components,\n     * but they also need access to a `dispatch` function, so having them separate seems easiest.\n     *\n     * HOWEVER!\n     * When a new peer says \"hey, you can connect to me\", we need some state data.\n     * Specifically, we need to know if you're currently in a videocall.\n     * This means we need to do some state-munging to actively remove you from a call once you've left the room.\n     *\n     * TODO: There may be cases other than moving rooms where we want to disconnect you.\n     * If so, we need to dupe this logic there.\n     */\n    // (action as Action).type = ActionType.StopVideoChat\n  }\n\n  if (action.type === ActionType.UpdatedRoomData) {\n    state.roomData = { ...state.roomData, ...action.value }\n  }\n\n  if (action.type === ActionType.UpdatedPresence) {\n    Object.keys(action.value).forEach((roomId) => {\n      if (state.roomData[roomId]) {\n        state.roomData[roomId].users = action.value[roomId]\n      }\n    })\n  }\n\n  if (action.type === ActionType.PlayerConnected) {\n    const user = action.value\n    const roomData = state.roomData[state.roomId]\n    if (!roomData.users.includes(user.id)) {\n      roomData.users.push(user.id)\n      addMessage(state, createConnectedMessage(user.id, state.roomId, roomData.users.length))\n    }\n    state.userMap[user.id] = user\n  }\n\n  if (action.type === ActionType.PlayerDisconnected) {\n    const roomData = state.roomData[state.roomId]\n    roomData.users = roomData.users.filter((u) => u !== action.value)\n    addMessage(state, createDisconnectedMessage(action.value, state.roomId, roomData.users.length))\n  }\n\n  if (action.type === ActionType.PlayerEntered) {\n    const roomData = state.roomData[state.roomId]\n    if (!roomData.users.includes(action.value.name)) {\n      roomData.users.push(action.value.name)\n      addMessage(state,\n        createEnteredMessage(action.value.name, action.value.fromId, action.value.fromName, state.roomId, roomData.users.length)\n      )\n    }\n  }\n\n  if (action.type === ActionType.PlayerLeft) {\n    const roomData = state.roomData[state.roomId]\n    roomData.users = roomData.users.filter((u) => u !== action.value.name)\n    addMessage(state, createLeftMessage(action.value.name, action.value.toId, action.value.toName, state.roomId, roomData.users.length))\n  }\n\n  if (action.type === ActionType.ChatMessage) {\n    addMessage(state,\n      createChatMessage(action.value.messageId, action.value.name, action.value.message)\n    )\n  }\n\n  if (action.type === ActionType.CaptionMessage) {\n    addMessage(state,\n      createCaptionMessage(action.value.messageId, action.value.name, action.value.message)\n    )\n  }\n\n  if (action.type === ActionType.Whisper) {\n    const whisperMessage = createWhisperMessage(action.value.name, action.value.message)\n    addMessage(state, whisperMessage)\n    saveWhisper(state, whisperMessage)\n  }\n\n  if (action.type === ActionType.ModMessage) {\n    addMessage(\n      state,\n      createModMessage(\n        action.value.name,\n        action.value.message,\n        action.value.name === state.userId\n      )\n    )\n  }\n\n  if (action.type === ActionType.DeleteMessage) {\n    deleteMessage(state, action.value.targetMessageId)\n  }\n\n  if (action.type === ActionType.Shout) {\n    addMessage(state,\n      createShoutMessage(action.value.messageId, action.value.name, action.value.message)\n    )\n  }\n\n  if (action.type === ActionType.Emote) {\n    addMessage(state,\n      createEmoteMessage(action.value.messageId, action.value.name, action.value.message)\n    )\n  }\n\n  if (action.type === ActionType.Dance) {\n    addMessage(state,\n      createDanceMessage(action.value.messageId, action.value.name, action.value.message)\n    )\n  }\n\n  if (action.type === ActionType.UserMap) {\n    state.userMap = { ...state.userMap, ...action.value }\n\n    // If the actively-viewed profile updated, do a clean fetch\n    if (state.visibleProfile && state.userMap[state.visibleProfile.id]) {\n      fetchProfile(state.visibleProfile.id)\n    }\n  }\n\n  if (action.type === ActionType.PlayerBanned) {\n    if (action.value.id === state.userId) {\n      state.isBanned = true\n    } else {\n      state.userMap[action.value.id].isBanned = true\n      addMessage(state, createErrorMessage('User ' + action.value.username + ' was banned!'))\n    }\n  }\n\n  // This message is never received by the banned player.\n  if (action.type === ActionType.PlayerUnbanned) {\n    if (state.userMap[action.value.id]) {\n      state.userMap[action.value.id].isBanned = false\n    }\n    addMessage(state, createErrorMessage('User ' + action.value.username + ' was unbanned!'))\n  }\n\n  if (action.type === ActionType.UpdateProfileColor) {\n    state.userMap[state.userId].nameColor = action.color\n\n    if (action.color) {\n      addMessage(state, createErrorMessage('Your name color was changed to ' + action.color))\n    } else {\n      addMessage(state, createErrorMessage('Your name color has changed back to its original state.'))\n    }\n\n    updateProfileColor(state.userId, action.color)\n  }\n\n  if (action.type === ActionType.UpdateFontReward) {\n    state.userMap[state.userId].fontReward = action.font\n\n    // I'm following the pattern of the set colour but... I don't think the user sees these message, and they aren't errors, why do we do this?\n    if (action.font) {\n      addMessage(state, createErrorMessage('You feel invigorated, and like you\\'ve become more... ' + action.font))\n    } else {\n      addMessage(state, createErrorMessage('You feel yourself return to your normal state, like you never went riddling to begin with.'))\n    }\n\n    updateFontReward(state.userId, action.font)\n  }\n\n  if (action.type === ActionType.Error) {\n    addMessage(state, createErrorMessage(action.value))\n  }\n\n  if (action.type === ActionType.MediaReceivedSpeakingData) {\n    state.currentSpeaker = action.value\n    if (action.value !== null && action.value !== state.userId) {\n      if (!state.visibleSpeakers.find(([userId, _]) => userId === action.value)) {\n        if (state.visibleSpeakers.length < state.numberOfFaces) {\n          state.visibleSpeakers.push([action.value, new Date()])\n        } else {\n          // Find the oldest speaker and replace them\n          let oldestIndex = -1\n          let oldestTime = new Date()\n          for (let i = 0; i < state.visibleSpeakers.length; i++) {\n            if (state.visibleSpeakers[i][1] < oldestTime) {\n              oldestTime = state.visibleSpeakers[i][1]\n              oldestIndex = i\n            }\n          }\n          state.visibleSpeakers[oldestIndex] = [action.value, new Date()]\n        }\n      }\n    }\n  }\n\n  if (action.type === ActionType.SetNumberOfFaces) {\n    state.numberOfFaces = action.value\n  }\n\n  if (action.type === ActionType.StartVideoChat) {\n    state.inMediaChat = true\n  }\n\n  if (action.type === ActionType.StopVideoChat) {\n    // stopAudioAnalyserLoop()\n    state.inMediaChat = false\n  }\n\n  // UI Actions\n  if (action.type === ActionType.SendMessage) {\n    const messageId: string = uuidv4()\n    const trimmedMessage = action.value.trim()\n    const beginsWithSlash = /^\\/.+?/.exec(trimmedMessage)\n    const matching = beginsWithSlash ? matchingSlashCommand(trimmedMessage) : undefined\n\n    if (trimmedMessage.length > MESSAGE_MAX_LENGTH) {\n      addMessage(state, createErrorMessage('Your message is too long! Please try to keep it under ~600 characters!'))\n    } else if (trimmedMessage.split(' ').find((s) => s.length > MESSAGE_MAX_WORD_LENGTH)) {\n      addMessage(state, createErrorMessage('Your message has a word that is too long! Please keep it under 60 characters!'))\n    } else if (beginsWithSlash && matching === undefined) {\n      const commandStr = /^(\\/.+?) (.+)/.exec(trimmedMessage)\n      addMessage(state, createErrorMessage(`Your command ${commandStr ? commandStr[1] : action.value} is not a registered slash command!`))\n    } else if (beginsWithSlash && matching.type === SlashCommandType.Whisper) {\n      const commandStr = /^(\\/.+?) (.+)/.exec(trimmedMessage)\n      const parsedUsernameMessage = /^(.+?) (.+)/.exec(commandStr[2])\n\n      if (!parsedUsernameMessage) {\n        addMessage(state, createErrorMessage(`Your whisper to ${commandStr[2]} had no message!`))\n      } else {\n        sendChatMessage(messageId, trimmedMessage)\n\n        const [_, username, message] = parsedUsernameMessage\n        const user = Object.values(state.userMap).find(\n          (u) => u.username === username\n        )\n        const userId = user && user.id\n        if (userId) {\n          const whisperMessage = createWhisperMessage(userId, message, true)\n          addMessage(state, whisperMessage)\n          saveWhisper(state, whisperMessage)\n        }\n      }\n    } else if (beginsWithSlash && matching.type === SlashCommandType.Help) {\n      state.activeModal = Modal.Help\n      addMessage(state, createCommandMessage('You consult the help docs. (You can also find them in sidebar!)'))\n    } else if (beginsWithSlash && matching.type === SlashCommandType.Look) {\n      const commandStr = /^(\\/.+?) (.+)/.exec(trimmedMessage)\n      addMessage(state, createCommandMessage(`You attempt to examine ${commandStr[2]}. (You can also click on their username and select Profile!)`))\n      sendChatMessage(messageId, trimmedMessage)\n    } else if (beginsWithSlash) {\n      sendChatMessage(messageId, trimmedMessage)\n    } else {\n      sendChatMessage(messageId, action.value)\n      addMessage(state, createChatMessage(messageId, state.userId, action.value))\n    }\n  }\n\n  if (action.type === ActionType.SendCaption) {\n    const messageId: string = uuidv4()\n    sendCaption(messageId, action.value)\n    addMessage(state, createCaptionMessage(messageId, state.userId, action.value))\n  }\n\n  if (action.type === ActionType.StartWhisper) {\n    state.prepopulatedInput = `/whisper ${action.value} `\n  }\n\n  if (action.type === ActionType.HideModalAction) {\n    state.activeModal = Modal.None\n    state.hasDismissedAModal = true\n  }\n\n  if (action.type === ActionType.ShowProfile) {\n    state.visibleProfile = action.value\n  }\n\n  if (action.type === ActionType.HideProfile) {\n    state.visibleProfile = null\n  }\n\n  if (action.type === ActionType.ShowModal) {\n    state.activeModal = action.value\n    state.activeModalOptions = {}\n  }\n\n  if (action.type === ActionType.ShowModalWithOptions) {\n    console.log('Showing', action)\n    state.activeModal = action.value.modal\n    state.activeModalOptions = action.value.options\n  }\n\n  if (action.type === ActionType.ShowSideMenu) {\n    state.mobileSideMenuIsVisible = true\n  }\n\n  if (action.type === ActionType.HideSideMenu) {\n    state.mobileSideMenuIsVisible = false\n  }\n\n  if (action.type === ActionType.DeactivateAutoscroll) {\n    state.autoscrollChat = false\n  }\n\n  if (action.type === ActionType.ActivateAutoscroll) {\n    state.autoscrollChat = true\n  }\n\n  if (action.type === ActionType.SetUseSimpleNames) {\n    state.useSimpleNames = action.value\n    Storage.setUseSimpleNames(action.value)\n  }\n\n  if (action.type === ActionType.SetKeepCameraWhenMoving) {\n    state.keepCameraWhenMoving = action.value\n    Storage.setKeepCameraWhenMoving(action.value)\n  }\n\n  if (action.type === ActionType.SetCaptionsEnabled) {\n    state.captionsEnabled = action.value\n    Storage.setCaptionsEnabled(action.value)\n  }\n\n  if (action.type === ActionType.SetTextOnlyMode) {\n    state.textOnlyMode = action.textOnlyMode\n    if (!action.refresh) {\n      Storage.setTextOnlyMode(action.textOnlyMode)\n    } else {\n      Storage.setTextOnlyMode(action.textOnlyMode).then(() => window.location.reload())\n    }\n  }\n\n  if (action.type === ActionType.SetAudioOnlyMode) {\n    state.audioOnlyMode = action.value\n  }\n\n  if (action.type === ActionType.Authenticate) {\n    state.checkedAuthentication = true\n\n    state.authenticationProvider = action.value.provider\n    state.mustVerifyEmail = action.value.mustVerifyEmail\n\n    if (action.value.userId && action.value.name) {\n      state.authenticated = true\n      state.userId = action.value.userId\n\n      // If you haven't registered yet, we need to grab your username before we've pulled a server userMap\n      state.userMap[action.value.userId] = {\n        id: action.value.userId,\n        username: action.value.name\n      }\n    } else {\n      state.authenticated = undefined\n      state.userId = undefined\n    }\n  }\n\n  if (action.type === ActionType.IsRegistered) {\n    state.hasRegistered = true\n  }\n\n  if (action.type === ActionType.BanToggle) {\n    toggleUserBan(action.value)\n  }\n\n  if (action.type === ActionType.ModToggle) {\n    toggleUserMod(action.value)\n  }\n\n  if (action.type === ActionType.LoadMessageArchive) {\n    state.messages = action.messages\n    state.whispers = action.whispers || []\n  }\n\n  // Notes\n  if (action.type === ActionType.NoteAdd) {\n    const room = state.roomData && state.roomData[action.value.roomId]\n    if (room.hasNoteWall) {\n      if (!room.notes) room.notes = []\n\n      room.notes.push(action.value.note)\n    }\n  }\n\n  if (action.type === ActionType.NoteRemove) {\n    const room = state.roomData && state.roomData[action.value.roomId]\n    if (room.hasNoteWall) {\n      if (!room.notes) room.notes = []\n\n      room.notes = room.notes.filter(n => n.id !== action.value.noteId)\n    }\n  }\n\n  if (action.type === ActionType.NoteUpdateLikes) {\n    const room = state.roomData && state.roomData[action.value.roomId]\n    if (room.hasNoteWall) {\n      if (!room.notes) room.notes = []\n\n      const note = room.notes.find(n => n.id === action.value.noteId)\n      if (note) {\n        note.likes = action.value.likes\n      }\n    }\n  }\n\n  if (action.type === ActionType.NoteUpdateRoom) {\n    const room = state.roomData && state.roomData[action.value.roomId]\n    if (room.hasNoteWall) {\n      room.notes = action.value.notes\n    }\n  }\n\n  if (action.type === ActionType.SpaceIsClosed) {\n    state.isClosed = true\n  }\n\n  if (action.type === ActionType.SpaceOpenedOrClosed) {\n    if (state.userMap[state.userId].isMod) {\n      state.isClosed = action.value\n      addMessage(state, createCommandMessage(`The space is now ${action.value ? 'closed' : 'open'}`))\n    } else {\n      // Not reloading the page will show the 'go home' screen, but will still send SignalR data\n      // Just hard-reloading the page will stop them from getting messages\n      window.location.reload()\n    }\n  }\n\n  if (action.type === ActionType.CommandMessage) {\n    const message = createCommandMessage(action.value)\n    addMessage(state, message)\n  }\n\n  return state\n}\n\n// WARNING: These three functions modify the message state without awaiting on the result.\n// If you're seeing weird race conditions with the message store, that's probably the issue.\n\nfunction deleteMessage (state: State, messageId: String) {\n  const target = state.messages.find(m => isDeletable(m) && m.messageId === messageId)\n  // Calling isDeletable again here so TypeScript can properly cast; if there's a nicer way to do this, please inform!\n  if (isDeletable(target)) {\n    target.message = 'message was removed by moderator'\n    Storage.setMessages(state.messages)\n  }\n}\n\nasync function saveWhisper (state: State, message: WhisperMessage) {\n  state.whispers.push(message)\n  Storage.setWhispers(state.whispers)\n}\n\nasync function addMessage (state: State, message: Message) {\n  state.messages.push(message)\n  state.messages = state.messages.slice(-500)\n  Storage.setMessages(state.messages)\n}\n\n// This is intended to be a big old unreadable grab bag,\n// but seems better than alternatives\nexport interface ModalOptions {\n    hideVideo?: boolean,\n    showJoinButton?: boolean\n}\n","import React, { useContext } from 'react'\nimport Linkify from 'react-linkify'\nimport { PublicUser } from '../../server/src/user'\nimport { HideProfileAction, SendMessageAction, ReceivedMyProfileAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport { Message, WhisperMessage, MessageType } from '../message'\nimport InputView from './InputView'\nimport NameView from './NameView'\nimport ReactTooltip from 'react-tooltip'\n\nimport '../../style/profileView.css'\n\nconst ProfileWhisperView = (props: WhisperMessage & {id: string, otherUser: PublicUser}) => {\n  const { otherUser } = props\n\n  if (props.senderIsSelf) {\n    return (\n      <div className=\"whisper-message\">\n        <em>\n          You:{' '}\n          {props.message}\n        </em>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"whisper-message\">\n        <em>\n          <span data-tip={otherUser && otherUser.pronouns}>\n            {otherUser.username}\n          </span>:{' '}\n          {props.message}\n          <ReactTooltip />\n        </em>\n      </div>\n    )\n  }\n}\n\nexport default function ProfileView (props: { user: PublicUser, whispers: WhisperMessage[] }) {\n  const { user, whispers } = props\n  const dispatch = useContext(DispatchContext)\n\n  React.useEffect(() => {\n    const lastMessage = document.querySelector(\n      '#chat .whisper-message:last-of-type'\n    )\n    if (!lastMessage) return\n\n    // I was using lastMessage.scrollIntoView()\n    // But I was seeing odd behavior when there was only one message on-screen.\n    // This very TS-unfriendly code fixes taht.\n    (lastMessage.parentNode as Element).scrollTop =\n      (lastMessage as any).offsetTop -\n      (lastMessage.parentNode as any).offsetTop\n  })\n\n  const whisperMessages = (whispers || []).filter((m, _) => m.userId === user.id) as Array<WhisperMessage>\n\n  const realName = user.realName ? (\n    <div id=\"profile-realName\">{user.realName}</div>\n  ) : (\n    null\n  )\n\n  const twitterHandle = user.twitterHandle ? (\n    <div id=\"profile-twitter\">\n      <strong>Twitter</strong>:{' '}\n      <a href={`https://twitter.com/${user.twitterHandle}`} target=\"_blank\" rel=\"noreferrer\">\n      @{user.twitterHandle}\n      </a>\n    </div>\n  ) : (\n    null\n  )\n\n  const url = user.url ? (\n    <div id=\"profile-url\">\n      <strong>Web Site</strong>:{' '}\n      {user.url}\n    </div>\n  ) : (\n    null\n  )\n\n  const description = user.description ? (\n    <div id=\"profile-description\">{user.description}</div>\n  ) : (\n    null\n  )\n\n  const askMeAbout = user.askMeAbout ? (\n    <div id=\"profile-askme\">\n      <strong>Ask me about:</strong>{' '}\n      {user.askMeAbout}\n    </div>\n  ) : (\n    null\n  )\n\n  const linkDecorator = (href, text, key) => (\n    <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\n      {text}\n    </a>\n  )\n\n  return (\n    <Linkify componentDecorator={linkDecorator}>\n      <div id=\"profile\">\n        <div className='fixed'>\n          <div id=\"header\">\n            <h2 className={user.isMod ? 'mod' : ''}><NameView userId={user.id} id={`profile-nameview-${user.id}`} /></h2>\n            <button className='close-profile' onClick={() => dispatch(HideProfileAction())}>X</button>\n          </div>\n          <p>\n            {realName}\n            <div id=\"profile-pronouns\">{user.pronouns}</div>\n            {description}\n          </p>\n\n          {user.item ? <p>{user.username} is currently holding {user.item}</p> : null}\n\n          <p>\n            {twitterHandle}\n            {url}\n            {askMeAbout}\n          </p>\n          <div id=\"chat-container\">\n            <div id=\"chat-header\">Whisper Chat</div>\n            <div id=\"chat\">\n              {whisperMessages.length > 0 ? whisperMessages.map((m, idx) => {\n                const id = `whisper-message-${idx}`\n                return <ProfileWhisperView {...m} key={id} id={id} otherUser={user} />\n              }) : <em>{`This is the beginning of your whisper chat with ${user.username}`}</em>}\n            </div>\n            <InputView sendMessage={(message) => dispatch(SendMessageAction(`/whisper ${user.username} ${message}`))}/>\n          </div>\n        </div>\n      </div>\n    </Linkify>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { FaCog, FaVolumeUp, FaVolumeMute, FaVideo, FaVideoSlash, FaUser } from 'react-icons/fa'\n\nimport { DispatchContext } from '../App'\nimport { ShowModalAction } from '../Actions'\nimport { Modal } from '../modals'\nimport { useMediaChatContext } from '../videochat/mediaChatContext'\n\ninterface Props {\n  speaking: boolean\n  hideUI?: boolean\n}\n\nexport default function LocalMediaView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n  const { localStreamView, setMicEnabled, setCameraEnabled, cameraEnabled, micEnabled } = useMediaChatContext()\n\n  const onChangeVideo = (e) => {\n    setCameraEnabled(!cameraEnabled)\n  }\n\n  const onChangeAudio = (e) => {\n    setMicEnabled(!micEnabled)\n  }\n\n  const showMediaSelector = () => {\n    dispatch(ShowModalAction(Modal.MediaSelector))\n  }\n\n  if (!localStreamView) {\n    return null\n  }\n\n  return (\n    <div className=\"my-video\">\n      You\n      {cameraEnabled ? (\n        localStreamView\n      ) : (\n        <FaUser\n          size={90}\n          style={{ textAlign: 'center' }}\n          className=\"placeholder-avatar\"\n        />\n      )}\n      {props.hideUI ? (\n        ''\n      ) : (\n        <div>\n          <button\n            id=\"send-video\"\n            onClick={onChangeVideo}\n            className={`link-styled-button video-button ${\n              cameraEnabled ? 'enabled' : 'disabled'\n            }`}\n            aria-label=\"Toggle Video\"\n          >\n            {cameraEnabled ? <FaVideo /> : <FaVideoSlash />}\n          </button>\n          <button\n            id=\"send-audio\"\n            onClick={onChangeAudio}\n            className={`link-styled-button video-button ${\n              micEnabled ? 'enabled' : 'disabled'\n            }`}\n            aria-label=\"Toggle Audio\"\n          >\n            {micEnabled ? <FaVolumeUp /> : <FaVolumeMute />}\n          </button>\n          <button\n            id=\"show-media-selector\"\n            onClick={showMediaSelector}\n            className=\"link-styled-button video-button\"\n            aria-label=\"Show Media Selector\"\n          >\n            <FaCog />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { useEffect, useRef } from 'react'\nimport { AudioTrack as IAudioTrack } from 'twilio-video'\n\ninterface AudioTrackProps {\n  track: IAudioTrack;\n}\n\n// TODO: Figure out what's up with activeSinkId\n\nexport default function AudioTrack ({ track }: AudioTrackProps) {\n//   const { activeSinkId } = useAppState()\n  const audioEl = useRef<HTMLAudioElement>()\n\n  useEffect(() => {\n    audioEl.current = track.attach()\n    audioEl.current.setAttribute('data-cy-audio-track-name', track.name)\n    document.body.appendChild(audioEl.current)\n    return () => track.detach().forEach(el => el.remove())\n  }, [track])\n\n  //   useEffect(() => {\n  //     audioEl.current?.setSinkId?.(activeSinkId)\n  //   }, [activeSinkId])\n\n  return null\n}\n","\nimport React, { useRef, useEffect } from 'react'\nimport { LocalVideoTrack, RemoteVideoTrack, Track } from 'twilio-video'\nimport useMediaStreamTrack from './useMediaStreamTrack'\nimport useVideoTrackDimensions from './useVideoTrackDimensions'\n\ninterface VideoTrackProps {\n  track: LocalVideoTrack | RemoteVideoTrack;\n  isLocal?: boolean;\n  priority?: Track.Priority | null;\n}\n\nexport default function VideoTrack ({ track, isLocal, priority }: VideoTrackProps) {\n  const ref = useRef<HTMLVideoElement>(null!)\n  const mediaStreamTrack = useMediaStreamTrack(track)\n  const dimensions = useVideoTrackDimensions(track)\n  const isPortrait = (dimensions?.height ?? 0) > (dimensions?.width ?? 0)\n  console.log('Rendering videotrack', track)\n  useEffect(() => {\n    const el = ref.current\n    el.muted = true\n    if ((track as RemoteVideoTrack).setPriority && priority) {\n      (track as RemoteVideoTrack).setPriority(priority)\n    }\n    track.attach(el)\n    return () => {\n      track.detach(el)\n      if ((track as RemoteVideoTrack).setPriority && priority) {\n        // Passing `null` to setPriority will set the track's priority to that which it was published with.\n        (track as RemoteVideoTrack).setPriority(null)\n      }\n    }\n  }, [track, priority, mediaStreamTrack])\n\n  // The local video track is mirrored if it is not facing the environment.\n  const isFrontFacing = mediaStreamTrack?.getSettings().facingMode !== 'environment'\n  const style = {\n    transform: isLocal && isFrontFacing ? 'rotateY(180deg)' : '',\n    objectFit: isPortrait || track.name.includes('screen') ? ('contain' as const) : ('cover' as const)\n  }\n\n  // eslint-disable-next-line jsx-a11y/media-has-caption\n  return <video ref={ref} style={style} />\n}\n","\nimport { useState, useEffect } from 'react'\nimport { AudioTrack, VideoTrack } from 'twilio-video'\n\n/*\n * This hook allows components to reliably use the 'mediaStreamTrack' property of\n * an AudioTrack or a VideoTrack. Whenever 'localTrack.restart(...)' is called, it\n * will replace the mediaStreamTrack property of the localTrack, but the localTrack\n * object will stay the same. Therefore this hook is needed in order for components\n * to rerender in response to the mediaStreamTrack changing.\n */\nexport default function useMediaStreamTrack (track?: AudioTrack | VideoTrack) {\n  const [mediaStreamTrack, setMediaStreamTrack] = useState(track?.mediaStreamTrack)\n\n  useEffect(() => {\n    setMediaStreamTrack(track?.mediaStreamTrack)\n\n    if (track) {\n      const handleStarted = () => { console.log('Set media stream track!'); setMediaStreamTrack(track.mediaStreamTrack) }\n      track.on('started', handleStarted)\n      return () => {\n        track.off('started', handleStarted)\n      }\n    }\n  }, [track])\n\n  return mediaStreamTrack\n}\n","\nimport { useState, useEffect } from 'react'\nimport { LocalVideoTrack, RemoteVideoTrack } from 'twilio-video'\n\ntype TrackType = LocalVideoTrack | RemoteVideoTrack;\n\nexport default function useVideoTrackDimensions (track?: TrackType) {\n  const [dimensions, setDimensions] = useState(track?.dimensions)\n\n  useEffect(() => {\n    setDimensions(track?.dimensions)\n\n    if (track) {\n      const handleDimensionsChanged = (track: TrackType) => setDimensions({\n        width: track.dimensions.width,\n        height: track.dimensions.height\n      })\n      track.on('dimensionsChanged', handleDimensionsChanged)\n      return () => {\n        track.off('dimensionsChanged', handleDimensionsChanged)\n      }\n    }\n  }, [track])\n\n  return dimensions\n}\n","import React from 'react'\nimport useTrack from './useTrack'\nimport AudioTrack from './AudioTrack'\nimport VideoTrack from './VideoTrack'\n\nimport {\n  AudioTrack as IAudioTrack,\n  LocalTrackPublication,\n  LocalVideoTrack,\n  RemoteTrackPublication,\n  RemoteVideoTrack,\n  Track\n} from 'twilio-video'\n\ninterface PublicationProps {\n  publication: LocalTrackPublication | RemoteTrackPublication;\n  isLocalParticipant?: boolean;\n  videoOnly?: boolean;\n  videoPriority?: Track.Priority | null;\n}\n\nexport default function Publication ({ publication, isLocalParticipant, videoOnly, videoPriority }: PublicationProps) {\n  const track = useTrack(publication)\n\n  if (!track) return null\n\n  switch (track.kind) {\n    case 'video':\n      return (\n        <VideoTrack\n          track={track as LocalVideoTrack|RemoteVideoTrack}\n          priority={videoPriority}\n          isLocal={track.name.includes('camera') && isLocalParticipant}\n        />\n      )\n    case 'audio':\n      return videoOnly ? null : <AudioTrack track={track as IAudioTrack} />\n    default:\n      return null\n  }\n}\n","\nimport { useEffect, useState } from 'react'\nimport { LocalTrackPublication, RemoteTrackPublication } from 'twilio-video'\n\nexport default function useTrack (publication: LocalTrackPublication | RemoteTrackPublication | undefined) {\n  const [track, setTrack] = useState(publication && publication.track)\n\n  useEffect(() => {\n    // Reset the track when the 'publication' variable changes.\n    setTrack(publication && publication.track)\n\n    if (publication) {\n      const removeTrack = () => setTrack(null)\n\n      publication.on('subscribed', setTrack)\n      publication.on('unsubscribed', removeTrack)\n      return () => {\n        publication.off('subscribed', setTrack)\n        publication.off('unsubscribed', removeTrack)\n      }\n    }\n  }, [publication])\n\n  return track\n}\n","\nimport React from 'react'\nimport { Participant, Track } from 'twilio-video'\nimport Publication from './Publication'\nimport usePublications, { TrackPublication } from './usePublications'\n\ninterface ParticipantTracksProps {\n  participant: Participant;\n  // These handle whether the video/audio is run on the client-side only - they don't change the underlying tracks\n  displayVideo: boolean;\n  displayAudio: boolean;\n  videoOnly?: boolean;\n  enableScreenShare?: boolean;\n  videoPriority?: Track.Priority | null;\n  isLocalParticipant?: boolean;\n}\n\n/*\n *  The object model for the Room object (found here: https://www.twilio.com/docs/video/migrating-1x-2x#object-model) shows\n *  that Participant objects have TrackPublications, and TrackPublication objects have Tracks.\n *\n *  The React components in this application follow the same pattern. This ParticipantTracks component renders Publications,\n *  and the Publication component renders Tracks.\n */\n\n// TODO: This should handle mute\n\nexport default function ParticipantTracks ({\n  participant,\n  displayVideo,\n  displayAudio,\n  videoOnly,\n  videoPriority,\n  isLocalParticipant\n}: ParticipantTracksProps) {\n  const publications = usePublications(participant)\n  const videoPublications = publications.filter(p => p.kind === 'video')\n  const audioPublications = publications.filter(p => p.kind === 'audio')\n\n  let finalPublications: TrackPublication[] = []\n\n  if (displayVideo && videoPublications.length > 0) {\n    finalPublications.push(videoPublications[0])\n  }\n\n  if (displayAudio) {\n    finalPublications = finalPublications.concat(audioPublications)\n  }\n\n  return (\n    <>\n      {\n        finalPublications.map(publication => {\n          return <Publication\n            key={publication.kind}\n            publication={publication}\n            isLocalParticipant={isLocalParticipant}\n            videoOnly={videoOnly}\n            videoPriority={videoPriority}\n          />\n        })\n      }\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { LocalTrackPublication, Participant, RemoteTrackPublication } from 'twilio-video'\n\nexport type TrackPublication = LocalTrackPublication | RemoteTrackPublication;\n\nexport default function usePublications (participant: Participant) {\n  const [publications, setPublications] = useState<TrackPublication[]>([])\n\n  useEffect(() => {\n    // Reset the publications when the 'participant' variable changes.\n    setPublications(Array.from(participant.tracks.values()) as TrackPublication[])\n\n    const publicationAdded = (publication: TrackPublication) =>\n      setPublications(prevPublications => [...prevPublications, publication])\n    const publicationRemoved = (publication: TrackPublication) =>\n      setPublications(prevPublications => prevPublications.filter(p => p !== publication))\n\n    participant.on('trackPublished', publicationAdded)\n    participant.on('trackUnpublished', publicationRemoved)\n    return () => {\n      participant.off('trackPublished', publicationAdded)\n      participant.off('trackUnpublished', publicationRemoved)\n    }\n  }, [participant])\n\n  return publications\n}\n","import React from 'react'\nimport { FaVolumeUp, FaVolumeMute, FaVideo, FaVideoSlash, FaUser } from 'react-icons/fa'\nimport NameView from './NameView'\n\nimport '../../style/videoChat.css'\nimport ParticipantTracks from '../videochat/twilio/ParticipantTracks'\nimport * as Twilio from 'twilio-video'\n\ninterface Props {\n  participant: Twilio.Participant\n  isDominant: boolean\n  renderAsFace: boolean\n}\n\nexport default function ParticipantChatView (props: Props) {\n  const [playVideo, setPlayVideo] = React.useState<boolean>(props.renderAsFace)\n  const [playAudio, setPlayAudio] = React.useState<boolean>(true)\n\n  const onChangeVideo = (e) => {\n    setPlayVideo(!playVideo)\n  }\n\n  const onChangeAudio = (e) => {\n    setPlayAudio(!playAudio)\n  }\n\n  const customStyle = {\n    border: props.isDominant ? 'solid' : undefined\n  }\n\n  if (!props.renderAsFace) {\n    return (\n      <ParticipantTracks\n        participant={props.participant}\n        displayVideo={false}\n        displayAudio={playAudio}\n      />\n    )\n  }\n\n  const hasVideoTracks = props.participant.videoTracks.size > 0\n  const hasAnyTracks = props.participant.audioTracks.size + props.participant.videoTracks.size > 0\n\n  if (!hasAnyTracks) {\n    return <div key={`stream-wrapper-${props.participant.identity}`} />\n  }\n\n  let placeholderAvatar\n  if (!playVideo || !hasVideoTracks) {\n    placeholderAvatar = <FaUser size={90} style={{ textAlign: 'center' }} className='placeholder-avatar'/>\n  }\n\n  return (\n    <div key={`stream-wrapper-${props.participant.identity}`} className='participant-track-square other-participant' style={customStyle}>\n      <NameView userId={props.participant.identity} id={`stream-nameview-${props.participant.identity}`} nowrap={true} />\n      <ParticipantTracks participant={props.participant} displayVideo={playVideo} displayAudio={playAudio} />\n      {hasVideoTracks\n        ? <button id='play-video'\n          onClick={onChangeVideo}\n          className={`link-styled-button video-button ${playVideo ? 'enabled' : 'disabled'}`}\n          aria-label={`Toggle Video ${props.participant.identity}`}>\n          {playVideo ? <FaVideo /> : <FaVideoSlash />}\n        </button>\n        : null}\n      {placeholderAvatar}\n      <button id='play-audio'\n        onClick={onChangeAudio}\n        className={`link-styled-button video-button ${playAudio ? 'enabled' : 'disabled'}`}\n        aria-label={`Toggle Audio ${props.participant.identity}`}>\n        {playAudio ? <FaVolumeUp /> : <FaVolumeMute />}\n      </button>\n    </div>\n  )\n}\n","import React from 'react'\nimport { FaCog } from 'react-icons/fa'\nimport { SetAudioOnlyModeAction, SetTextOnlyModeAction, ShowModalAction, ShowModalWithOptionsAction, StopVideoChatAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport { Modal } from '../modals'\nimport { useMediaChatContext } from '../videochat/mediaChatContext'\n\ninterface Props {\n  inMediaChat: boolean\n  textOnlyMode: boolean\n  offscreenCount: number\n  totalCount: number\n  audioOnlyMode: boolean\n  canJoinVideoChat: boolean\n}\nconst MediaChatButtonView = (props: Props) => {\n  const {\n    currentMic,\n    currentCamera,\n    publishingCamera,\n    publishingMic,\n    inCall,\n    publishMedia,\n    publishAudio,\n    unpublishMedia\n  } = useMediaChatContext()\n\n  const dispatch = React.useContext(DispatchContext)\n\n  const leaveVideoChat = () => {\n    dispatch(StopVideoChatAction())\n    unpublishMedia()\n  }\n\n  const joinVideoChat = async () => {\n    if (!props.canJoinVideoChat) return\n    if (currentMic || currentCamera) {\n      publishMedia()\n    } else {\n      dispatch(ShowModalAction(Modal.MediaSelector))\n    }\n  }\n\n  const showMediaSelector = () => {\n    dispatch(ShowModalAction(Modal.MediaSelector))\n  }\n\n  const joinAudioChat = async () => {\n    if (!props.canJoinVideoChat) return\n    if (currentMic) {\n      publishAudio()\n    } else {\n      dispatch(\n        ShowModalWithOptionsAction(Modal.MediaSelector, { hideVideo: true })\n      )\n    }\n  }\n\n  const enableTextOnlyMode = () => {\n    const prompt = confirm('This will disable all audio/video aspects of this space other than the ' +\n      'stream in the theater. You will no longer be able to see or hear other participants, but you can still ' +\n      'interact via text chat.\\n\\nSwitching modes will refresh your page - please be patient while it reloads.'\n    )\n    if (prompt) {\n      dispatch(SetTextOnlyModeAction(true, true))\n    }\n  }\n\n  const disableTextOnlyMode = () => {\n    const prompt = confirm('Re-enabling video and audio mode means that you will be able to see and hear video and audio from ' +\n      'other participants. Your camera and microphone will default to off when you switch modes.\\b\\n\\nSwitching modes will ' +\n      'refresh your page - please be patient while it reloads.'\n    )\n    if (prompt) {\n      dispatch(SetTextOnlyModeAction(false, true))\n    }\n  }\n\n  const toggleAudioOnlyMode = () => {\n    let text\n    if (props.audioOnlyMode) {\n      text =\n        'This will show you others&apos; webcam feeds. ' +\n        'This will not affect whether or not you are sending your own webcam feed to others.'\n    } else {\n      text = 'This will hide all video feeds from other attendees. ' +\n        \"You will still be able to hear them, but you won't see them. This may improve performance if things are slow.\\n\\n\" +\n        'Note that you will still broadcast your webcam feed to others if you enable it, and you will ' +\n        'still be able to see the talks broadcast in the Theater.'\n    }\n    const prompt = confirm(text)\n    if (prompt) {\n      dispatch(SetAudioOnlyModeAction(!props.audioOnlyMode))\n    }\n  }\n\n  let chatButtons\n  if (props.inMediaChat) {\n    let leaveButtonLabel = ''\n    if (publishingCamera && publishingMic) {\n      leaveButtonLabel = 'Turn off Webcam and Mic'\n    } else if (publishingCamera) {\n      // This case shouldn't ever exist with the current UI\n      leaveButtonLabel = 'Turn off Webcam'\n    } else if (publishingMic) {\n      leaveButtonLabel = 'Turn off Mic'\n    }\n    chatButtons = (\n      <>\n        <button onClick={leaveVideoChat} id=\"join-video-chat\">\n          {leaveButtonLabel}\n        </button>\n        <button\n          key=\"show-media-selector\"\n          id=\"big-reconfigure-media-selector\"\n          onClick={showMediaSelector}\n          className=\"link-styled-button video-button\"\n          aria-label=\"Show Media Selector\"\n        >\n          <FaCog />\n        </button>\n      </>\n    )\n  } else if (props.textOnlyMode) {\n    chatButtons = [\n      <button key=\"text-only-mode\" onClick={disableTextOnlyMode} id=\"toggle-text-only-mode\">\n          Re-Enable Audio/Video\n      </button>\n    ]\n  } else if (props.canJoinVideoChat) {\n    chatButtons = [\n      <button key=\"join-video\" onClick={joinVideoChat} id=\"join-video-chat\">\n        {inCall ? 'Turn on Webcam + Mic' : <s>Turn on Webcam + Mic</s>}\n      </button>,\n      <button key=\"join-audio\" onClick={joinAudioChat} id=\"join-audio-chat\">\n        {inCall ? 'Turn on Mic' : <s>Turn on Mic</s>}\n      </button>,\n      <button\n        key=\"show-media-selector\"\n        id=\"big-reconfigure-media-selector\"\n        onClick={showMediaSelector}\n        className=\"link-styled-button video-button\"\n        aria-label=\"Show Media Selector\"\n      >\n        <FaCog />\n      </button>\n    ]\n  }\n\n  var offscreenLabel\n  if (props.totalCount > 0) {\n    offscreenLabel = (\n      <div className=\"offscreen-count\">\n        {props.totalCount} {props.totalCount === 1 ? 'person is' : 'people are'} in the call{publishingCamera || publishingMic ? ', not including you' : ''}.\n      </div>\n    )\n  }\n\n  return (\n    <div id=\"media-chat-buttons\">\n      {offscreenLabel}\n      {chatButtons}\n      <div>\n        <button\n          key=\"audio-only-mode\"\n          onClick={toggleAudioOnlyMode}\n          id=\"toggle-audio-only-mode\"\n          className=\"link-styled-button\"\n        >\n          {props.audioOnlyMode ? 'Show' : 'Hide'} all video feeds\n        </button>\n        <button\n          key=\"text-only-mode\"\n          onClick={enableTextOnlyMode}\n          id=\"toggle-text-only-mode\"\n          className=\"link-styled-button\"\n        >\n          Mute all audio and video\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default MediaChatButtonView\n","import React, { useEffect, VideoHTMLAttributes, useRef, useState } from 'react'\nimport LocalMediaView from './LocalMediaView'\n\nimport '../../style/videoChat.css'\nimport { useMediaChatContext } from '../videochat/mediaChatContext'\nimport ParticipantChatView from './ParticipantChatView'\nimport MediaChatButtonView from './MediaChatButtonView'\nimport { SetTextOnlyModeAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport { MinimalUser } from '../../server/src/user'\n\ninterface MediaProps {\n  visibleSpeakers: [string, Date][]\n  currentSpeaker: string\n  numberOfFaces: number\n  inMediaChat: boolean\n  textOnlyMode: boolean\n  audioOnlyMode: boolean\n  currentUser: MinimalUser\n}\n\nexport default function MediaChatView (props: MediaProps) {\n  const { publishingCamera, callParticipants, inCall, joinCallFailed } = useMediaChatContext()\n  const dispatch = React.useContext(DispatchContext)\n\n  // TODO: props.visibleSpeakers should never be undefined, but it is?!\n  const visibleSpeakers = (props.visibleSpeakers || []).map(x => x[0])\n\n  console.log('Re-rendering media chat view?')\n\n  if (!inCall) {\n    if (joinCallFailed) {\n      return (\n        <div id=\"media-wrapper\">\n          <strong>\n            Could not connect to audio/video! Rooms are max 50 chatters - if you\n            want to use audio/video, try moving to another room. Otherwise, it\n            may be a network issue.\n          </strong>\n        </div>\n      )\n    } else if (props.textOnlyMode) {\n      const disableTextMode = () => {\n        const prompt = confirm('Entering video/audio mode means that you will be able to see and hear video and audio from ' +\n          'other participants. Your camera and microphone will default to off when you switch modes. Switching modes will ' +\n          'refresh your page - please be patient while it reloads.'\n        )\n        if (prompt) {\n          dispatch(SetTextOnlyModeAction(false, true))\n        }\n      }\n\n      return (\n        <div id=\"media-wrapper\">\n          There may be a voice/video call happening here that you can&apos;t see.\n          <button className=\"link-styled-button\" onClick={disableTextMode} style={{ marginLeft: '1em' }}>Disable Text-Only Mode</button>.\n        </div>\n      )\n    } else {\n      return (\n        <div id=\"media-wrapper\">\n          <strong>Attempting to connect to room.</strong>\n        </div>\n      )\n    }\n  }\n\n  // TODO: Is this a meaningful fail state? What causes this? s\n  if (!callParticipants) {\n    return <div id=\"media-view\" />\n  }\n\n  let playerVideo\n  if (publishingCamera) {\n    playerVideo = <LocalMediaView speaking={false} />\n  }\n\n  const participants = Array.from(callParticipants.values())\n    .filter(p => p.audioTracks.size + p.videoTracks.size > 0)\n\n  const videoParticipantIds = participants\n    .filter((p) => visibleSpeakers.includes(p.identity))\n\n  const audioParticipantIds = participants\n    .filter((p) => !visibleSpeakers.includes(p.identity))\n\n  console.log('[NUM_FACES]: ', props.numberOfFaces)\n  // We might have folks on video, but no \"dominantSpeaker\" notifications generated yet.\n  // We should still flesh out the wall o' faces in that situation.\n  // NOTE: This will result in video folks being added in whatever they appear in an Arrayified callParticipants\n  // I don't know what that ordering is, or if it's deterministic.\n  while (videoParticipantIds.length < props.numberOfFaces && audioParticipantIds.length > 0) {\n    videoParticipantIds.push(audioParticipantIds.shift())\n  }\n\n  const videoParticipants = videoParticipantIds.map((p) => {\n    return (\n      <ParticipantChatView\n        key={`participant-chat-view-${p.identity}`}\n        participant={p}\n        isDominant={props.currentSpeaker === p.identity}\n        renderAsFace={!props.audioOnlyMode}\n      />\n    )\n  })\n\n  const audioParticipants = audioParticipantIds\n    .map((p) => {\n      <ParticipantChatView\n        participant={p}\n        isDominant={props.currentSpeaker === p.identity}\n        renderAsFace={false}\n      />\n    })\n\n  // TODO: This will eventually need to check for speakers as well\n  // It's unclear to me if this logic should live here\n  // (vs inside MediaChatButtonView, or in the data model proper)\n  const canJoinVideoChat = props.currentUser.isMod\n\n  // If we're showing the bar, we don't override the height; if we're hiding we force it to 0.\n  // We still want it to render the audioParticipants, so that's why we still paint it.\n  // TODO: this is jank\n  const customStyle = { height: playerVideo || (!props.audioOnlyMode && videoParticipants.length > 0) ? undefined : '0px' }\n  return (\n    <div id=\"media-wrapper\">\n      <div id=\"media-view\" style={customStyle}>\n        {playerVideo} {videoParticipants} {audioParticipants}\n      </div>\n      <MediaChatButtonView\n        textOnlyMode={props.textOnlyMode}\n        inMediaChat={props.inMediaChat}\n        totalCount={videoParticipants.length + audioParticipants.length}\n        canJoinVideoChat={canJoinVideoChat}\n        offscreenCount={\n          props.audioOnlyMode\n            ? videoParticipants.length + audioParticipants.length\n            : audioParticipants.length\n        }\n        audioOnlyMode={props.audioOnlyMode}\n      />\n    </div>\n  )\n}\n\n// via https://github.com/facebook/react/issues/11163\ntype PropsType = VideoHTMLAttributes<HTMLVideoElement> & {\n  srcObject: MediaStream;\n};\n\nexport function HtmlVideo ({ srcObject, ...props }: PropsType) {\n  const refVideo = useRef<HTMLVideoElement>(null)\n\n  useEffect(() => {\n    if (!refVideo.current) return\n    console.log(srcObject)\n    refVideo.current.srcObject = srcObject\n  }, [srcObject])\n\n  return <video ref={refVideo} {...props} autoPlay /> // eslint-disable-line jsx-a11y/media-has-caption\n}\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useState, useContext } from 'react'\nimport { updateProfile } from '../networking'\nimport { PublicUser } from '../../server/src/user'\n\nimport '../../style/profileEditView.css'\nimport { DispatchContext } from '../App'\nimport { HideModalAction } from '../Actions'\nimport config from '../config'\n\ninterface Props {\n  isFTUE: boolean;\n  defaultHandle?: string;\n  prepopulateTwitterWithDefaultHandle?: boolean\n  user?: PublicUser;\n}\n\n// shep: issue #45. Turns ' ' into '-'\nfunction crushSpaces (s: string) : string {\n  if (s.includes(' ')) {\n    console.log('spaces detected ' + s)\n    while (s.includes(' ')) {\n      s = s.replace(' ', '-')\n    }\n    console.log('spaces crushed: ' + s)\n  }\n  return s\n}\n\nexport default function ProfileEditView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n\n  const { defaultHandle, user, prepopulateTwitterWithDefaultHandle } = props\n\n  const [handle, setHandle] = useState(\n    (user && user.username) || defaultHandle || ''\n  )\n  const [realName, setRealName] = useState((user && user.realName) || '')\n  const [pronouns, setPronouns] = useState((user && user.pronouns) || '')\n  const [description, setDescription] = useState(\n    (user && user.description) || ''\n  )\n  const [askMeAbout, setAskMeAbout] = useState((user && user.askMeAbout) || '')\n  const [url, setUrl] = useState((user && user.url) || '')\n  const [twitter, setTwitter] = useState(\n    (user && user.twitterHandle) ||\n    (prepopulateTwitterWithDefaultHandle && defaultHandle) ||\n    '')\n\n  const close = () => {\n    dispatch(HideModalAction())\n  }\n\n  const submit = () => {\n    updateProfile({\n      username: handle,\n      realName,\n      pronouns,\n      description,\n      askMeAbout,\n      twitterHandle: twitter,\n      url,\n      hostname: config.SERVER_HOSTNAME\n    },\n    props.isFTUE)\n  }\n  return (\n    <div id='profile-edit' className={`container ${props.isFTUE ? 'ftue' : ''}`}>\n      <div className=\"form\">\n        <h1>{`${props.isFTUE ? 'Create' : 'Edit'} Name Badge`}</h1>\n        <div style={{ marginTop: '2em', marginBottom: '2em' }}>\n          This is your virtual conference badge!<br/>\n        Whatever you enter will be visible to other attendees.<br/>\n        You can come back and change this at any time.\n        </div>\n        <div className=\"grid\">\n          <div className=\"field\">\n            <label htmlFor=\"username\">Chat Handle</label>\n            <em>What shows up when you send messages</em>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={handle}\n              onChange={(e) => {\n                // shep: issue #45, prevent spaces in usernames\n                const s = crushSpaces(e.currentTarget.value)\n                if (s.localeCompare(e.currentTarget.value) !== 0) {\n                  e.currentTarget.value = s\n                }\n                setHandle(e.currentTarget.value)\n              }}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"realname\">Name</label>\n            <em>Optional: Your \"IRL\" name.</em>\n            <input\n              type=\"text\"\n              id=\"real-name\"\n              value={realName}\n              onChange={(e) => setRealName(e.currentTarget.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"description\">Character Description</label>\n            <em>Optional: Describe your avatar!</em>\n            <input\n              type=\"text\"\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.currentTarget.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"pronouns\">Pronouns</label>\n            <em>e.g. \"she/her\" or \"he/they\"</em>\n            <input\n              type=\"text\"\n              id=\"pronouns\"\n              value={pronouns}\n              onChange={(e) => setPronouns(e.currentTarget.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"website\">Website</label>\n            <em>Optional: Your personal site!</em>\n            <input\n              type=\"text\"\n              id=\"website\"\n              value={url}\n              onChange={(e) => setUrl(e.currentTarget.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"twitter\">Twitter Handle</label>\n            <em>Optional: Don't include the @</em>\n            <input\n              type=\"text\"\n              id=\"twitter\"\n              value={twitter}\n              onChange={(e) => setTwitter(e.currentTarget.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"ask-me-about\">Ask Me About</label>\n            <em>Optional: What are you excited to talk about?</em>\n            <input\n              type=\"text\"\n              id=\"ask-me-about\"\n              value={askMeAbout}\n              onChange={(e) => setAskMeAbout(e.currentTarget.value)}\n            />\n          </div>\n        </div>\n        <button\n          // shep: issue #45, double checking that spaces didn't sneak into handle.\n          onClick={(e) => {\n            setHandle(crushSpaces(handle))\n            submit()\n          }}\n          className=\"submit\">\n            Save Changes\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { FaCog } from 'react-icons/fa'\n\nimport { ContextMenuTrigger, ContextMenu, MenuItem } from 'react-contextmenu'\nimport { ShowModalAction } from '../Actions'\nimport { DispatchContext, UserMapContext } from '../App'\nimport { Modal } from '../modals'\nimport { fetchProfile, openOrCloseSpace, disconnect } from '../networking'\nimport { signOut } from '../authentication'\n\nexport default function MenuButtonView (props: { username: string, spaceIsClosed: boolean }) {\n  const dispatch = useContext(DispatchContext)\n  const { userMap, myId } = useContext(UserMapContext)\n\n  const user = userMap[myId]\n  const isMod = user && user.isMod\n\n  const logOut = () => {\n    const prompt = confirm('Are you sure you want to log out?')\n    // TODO: When a user disconnects via the /disconnect endpoint, it still shows that user as in the room. I suspect\n    // the same is true for banned users. Check on that.\n    if (prompt) {\n      disconnect(myId).then(() => {\n        signOut().then(() => {\n          window.location.reload()\n        })\n      }).catch((error) => {\n        console.log('error signing out', error)\n        window.location.reload()\n      })\n    }\n  }\n\n  const toggleSpaceAvailability = () => {\n    const doToggle = confirm(\n      `Are you sure you would like to ${props.spaceIsClosed ? 'open' : 'close'} the space for all non-mod users?`\n    )\n    if (doToggle) {\n      openOrCloseSpace(!props.spaceIsClosed)\n    }\n  }\n\n  const toggleSpaceItem = <MenuItem onClick={toggleSpaceAvailability}>{props.spaceIsClosed ? 'Open' : 'Close'} the Space</MenuItem>\n\n  const showProfile = () => {\n    fetchProfile(myId)\n  }\n\n  const showProfileEdit = () => {\n    dispatch(ShowModalAction(Modal.ProfileEdit))\n  }\n\n  const showSettings = () => {\n    dispatch(ShowModalAction(Modal.Settings))\n  }\n\n  const showServerSettings = () => {\n    dispatch(ShowModalAction(Modal.ServerSettings))\n  }\n\n  return (\n    <div id=\"menu-button\">\n      <ContextMenuTrigger id=\"topMenu\" holdToDisplay={0}>\n        <strong>{props.username}</strong> <FaCog />\n      </ContextMenuTrigger>\n      <ContextMenu id={'topMenu'}>\n        <MenuItem onClick={showProfile}>View Profile</MenuItem>\n        <MenuItem onClick={showProfileEdit}>Edit Profile</MenuItem>\n        <MenuItem onClick={showSettings}>Settings & Theme</MenuItem>\n        {isMod ? toggleSpaceItem : null}\n        {isMod ? <MenuItem onClick={showServerSettings}>Server Settings</MenuItem> : null}\n        <MenuItem onClick={logOut}>Log Out</MenuItem>\n      </ContextMenu>\n    </div>\n  )\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useContext } from 'react'\nimport { Room } from '../room'\nimport { moveToRoom } from '../networking'\nimport { HideModalAction } from '../Actions'\nimport { DispatchContext } from '../App'\n\n/**\n * This renders a clickable ASCII map!\n *\n * The map itself is just plaintext ASCII pasted in here, generated using the\n * Mac app MonoDraw app (see the map.monopic file in the root of this repo)\n *\n * (In 2021, this was switched to the Windows/Mac/Linux app Playscii - that's\n * map2021.psci.)\n *\n * There are two additional data sources in here:\n *\n * 1. To make rooms clickable, there is an array of ClickableArea objects\n * that define clickable squares that move to a given roomId.\n * Coordinates are given using ASCII character coordinates, not pixels.\n *\n * 2. To add real-time presence numbers to rooms, there's an array of roomIds\n * that correspond to the number in parenthesis that lives in the ASCII map itself\n * This number is monotonically increasing. To add a new room, add its name to the\n * end of the array and then make the number you use in the ASCII map the array index.\n * The ASCII map is 0-indexed.\n */\n\n interface Props {\n  roomData: { [roomId: string]: Room };\n  currentRoomId: string\n  isMiniMap?: boolean\n }\n\n  interface ClickableArea {\n    x: number,\n    y: number,\n    height: number,\n    width: number,\n    roomId: string\n  }\n\nexport default function MapView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n  const { roomData, currentRoomId } = props\n\n  // Pixel size of one ASCII character\n  let w, h\n  if (props.isMiniMap) {\n    w = 8\n    h = 13\n  } else {\n    w = 10\n    h = 21\n  }\n\n  // Scroll to make sure that the user's location is visible\n  // The empty array at the end means we only run this on first render, not every time it re-renders\n  // This ensures it only scrolls on load, not every time new presence data comes in\n  React.useEffect(() => {\n    // console.log('Attempting to scroll', `${props.isMiniMap ? 'minimap-' : ''}clickable-room-${currentRoomId}`)\n    const location = document.getElementById(`${props.isMiniMap ? 'minimap-' : ''}clickable-room-${currentRoomId}`)\n    if (location) {\n      // console.log(location)\n      location.scrollIntoView({ block: 'center', inline: 'center' })\n    } else {\n      // console.log('NO LOCATION')\n    }\n  }, (props.isMiniMap ? null : []))\n\n  if (!roomData) { return <div/> }\n\n  let map = mapText\n\n  presenceMapping.forEach((roomId, idx) => {\n    let replaceString = '[0]'\n\n    if (roomData[roomId] && roomData[roomId].users && roomData[roomId].users.length > 0) {\n      replaceString = `[${roomData[roomId].users.length}]`\n    }\n    replaceString = replaceString.padEnd(4, '.')\n    map = map.replace(`(${idx.toString().padStart(2, '0')})`, replaceString)\n  })\n\n  map = map.replace(/\\[([0-9]*)\\]/g, '($1)')\n\n  const handleClick = (e) => {\n    const roomId =\n      e.target && e.target.getAttribute && e.target.getAttribute('data-room')\n    if (roomId) {\n      moveToRoom(roomId)\n      dispatch(HideModalAction())\n    }\n  }\n\n  const clickableDivs = clickableAreas.map(a => {\n    return <div\n      style={{\n        position: 'absolute',\n        left: `${a.x * w}px`,\n        top: `${a.y * h}px`,\n        width: `${a.width * w}px`,\n        height: `${a.height * h}px`,\n        cursor: 'pointer'\n      }}\n      key={a.roomId}\n      onClick={handleClick}\n      data-room={a.roomId}\n      id={`${props.isMiniMap ? 'minimap-' : ''}clickable-room-${a.roomId}`} />\n  })\n\n  return <div className='map' style={{ position: 'relative', margin: '15px' }}>\n    {clickableDivs}\n    <pre style={{ letterSpacing: '2px', fontFamily: 'IBM Plex Mono' }}><code>\n      {map}\n    </code></pre>\n  </div>\n}\n\nconst mapText = `                        ┌────────────────────────────────────────────┐                                        \n┌────────────────┐      │............................................│   ┌──────────┐     ┌──────────┐        \n│................│      │.................Theater....................│   │.Warrior..│     │.. Mage...│        \n│.Robot Labs.....│      │...................(05).....................│   │...(12)...│     │...(13)...│        \n│...(00).........│      │............................................│   └─────#────┘     └─────#────┘        \n│................│      │............................................│         #                #             \n│................│      │............................................############################             \n└──────────#─────┘      │............................................│         #                #             \n┌──────────#─────┐      │............................................│   ┌─────#────┐     ┌─────#────┐        \n│............... │      │............................................│   │..Rogue...│     │.Tourist..│        \n│.Space.Hangar...│      │............................................│   │...(14)...│     │...(15)...│        \n│.Lounge.........│      │............................................│   └──────────┘     └──────────┘        \n│...(01).........│      │............................................│                                        \n│................│      │............................................│                                        \n│┌────────────┐..│      │............................................│                                        \n││.Vending....│..###    │............................................│                                        \n││.Machine....│..│ ##   └────────────────────#───────────────────────┘                                        \n││...(02).....│..│  ###                      #           ┌──────────────────────────────────────────────────┐ \n│└────────────┘..│     ###        ┌──────────#────────┐  │..................Unconferencing..................│ \n└────────────────┘       ###      │...................####..................Lobby ..(16)....................│ \n┌────────────┐         ┌────────────┐.................│  └──────────────#───────────────────#───────────────┘ \n│.Office Of..│         │Destinations│..Central Hall...│  ┌──────────┐   #    ┌──────────┐   #   ┌──────────┐  \n│.Steam......│         │..(06)......│.....(10)........│  │Cockatrice│   #    │...Naga...│   #   │..Tengu...│  \n│...(27).....│         └────────────┘.................│  │...(17)...##########...(18)...│########...(19)...│  \n└───────#────┘         ###        │...................│  └──────────┘   #    └──────────┘   #   └──────────┘  \n┌───────#────────┐   ###          │...................│  ┌──────────┐   #    ┌──────────┐   #   ┌──────────┐  \n│................│ ###            │...................│  │..Dragon..│   #    │.Skeleton.│   #   │...Yak....│  \n│.Adventurers....│##              │..┌────────────┐...│  │...(20)...##########...(21)...#########...(22)...│  \n│.Guild..........##               │..│.Swag Table.│...│  └──────────┘        └──────────┘       └──────────┘  \n│...(03).........│   ┌──────────┐ │..│...(11).....│...│ ┌──────────────────────────────────────────────┐      \n│................│   │...Paint..│ │..└────────────┘...│ │....................................┌───────┐.│      \n│................│   │...(07)...│ │...................###.................Bar ..(23).........│Railing│.│      \n│................│   └────#─────┘ │...................│ │....................................│..(25).│.│      \n└───────#────────┘   ┌────#─────┐ └──────────#────────┘ │..┌───────┐.....┌────────────┐......└───────┘.│      \n┌───────#────────┐   │...Dyes...│            #          │..│Stools │.....│....Stage...│................│      \n│................│  ##...(08)...│            #          │..│..(24).│.....│....(29)....│................│      \n│.Office of......│###└────#─────┘ ┌──────────#────────┐ │..└───────┘.....└────────────┘................│      \n│.Transmutation..##  ┌────#─────┐ │.....Library.......│ │.....................┌────────────┐...........│      \n│...(04).........│   │..SHOWER..│ │.......(28)........│ │.....................│Back...(26).│...........│      \n│................│   │...(09)...│ │...................│ │.....................└────────────┘...........│      \n└────────────────┘   └──────────┘ └───────────────────┘ └──────────────────────────────────────────────┘      \n`\n\nconst presenceMapping = [\n  'robots',\n  'sfHub',\n  'vendingMachine',\n  'exploreHub',\n  'transmute',\n  'theater',\n  'destinations',\n  'doctorPaint',\n  'dyes',\n  'shower',\n  'hall',\n  'swag',\n  'warrior',\n  'mage',\n  'rogue',\n  'tourist',\n  'unconference',\n  'cockatrice',\n  'naga',\n  'tengu',\n  'dragon',\n  'skeleton',\n  'yak',\n  'bar',\n  'stools',\n  'railing',\n  'back',\n  'steam',\n  'library',\n  'barStage'\n]\n\nconst clickableAreas: ClickableArea[] = [\n  {\n    roomId: 'robots',\n    x: 0,\n    y: 1,\n    width: 18,\n    height: 7\n  },\n  {\n    roomId: 'sfHub',\n    x: 0,\n    y: 8,\n    width: 18,\n    height: 12\n  },\n  {\n    roomId: 'vendingMachine',\n    x: 1,\n    y: 14,\n    width: 14,\n    height: 5\n  },\n  {\n    roomId: 'exploreHub',\n    x: 0,\n    y: 25,\n    width: 18,\n    height: 9\n  },\n  {\n    roomId: 'transmute',\n    x: 0,\n    y: 34,\n    width: 18,\n    height: 7\n  },\n  {\n    roomId: 'theater',\n    x: 24,\n    y: 0,\n    width: 46,\n    height: 17\n  },\n  {\n    roomId: 'destinations',\n    x: 23,\n    y: 20,\n    width: 14,\n    height: 4\n  },\n  {\n    roomId: 'doctorPaint',\n    x: 21,\n    y: 29,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'dyes',\n    x: 21,\n    y: 33,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'shower',\n    x: 21,\n    y: 37,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'hall',\n    x: 34,\n    y: 18,\n    width: 21,\n    height: 16\n  },\n  {\n    roomId: 'swag',\n    x: 37,\n    y: 27,\n    width: 14,\n    height: 4\n  },\n  {\n    roomId: 'warrior',\n    x: 73,\n    y: 1,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'mage',\n    x: 90,\n    y: 1,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'rogue',\n    x: 73,\n    y: 8,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'tourist',\n    x: 90,\n    y: 8,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'unconference',\n    x: 57,\n    y: 17,\n    width: 52,\n    height: 4\n  },\n  {\n    roomId: 'cockatrice',\n    x: 57,\n    y: 21,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'naga',\n    x: 77,\n    y: 21,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'tengu',\n    x: 96,\n    y: 21,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'dragon',\n    x: 57,\n    y: 25,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'skeleton',\n    x: 77,\n    y: 25,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'yak',\n    x: 96,\n    y: 25,\n    width: 12,\n    height: 4\n  },\n  {\n    roomId: 'bar',\n    x: 56,\n    y: 29,\n    width: 48,\n    height: 12\n  },\n  {\n    roomId: 'stools',\n    x: 59,\n    y: 33,\n    width: 9,\n    height: 4\n  },\n  {\n    roomId: 'railing',\n    x: 93,\n    y: 30,\n    width: 9,\n    height: 4\n  },\n  {\n    roomId: 'back',\n    x: 78,\n    y: 37,\n    width: 14,\n    height: 3\n  },\n  {\n    roomId: 'steam',\n    x: 0,\n    y: 20,\n    width: 14,\n    height: 5\n  },\n  {\n    roomId: 'library',\n    x: 34,\n    y: 36,\n    width: 21,\n    height: 5\n  },\n  {\n    roomId: 'barStage',\n    x: 73,\n    y: 33,\n    width: 14,\n    height: 4\n  }\n]\n","import React, { useContext } from 'react'\nimport { ShowModalAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport { Modal } from '../modals'\nimport { Room } from '../room'\n\nimport MapView from './MapView'\n\n interface Props {\n  roomData: { [roomId: string]: Room };\n  currentRoomId: string\n }\n\nexport default function MiniMapView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n\n  const handleClickCapture = (e) => {\n    dispatch(ShowModalAction(Modal.Map))\n    e.stopPropagation()\n  }\n\n  return (\n    <div id='mini-map' onClickCapture={handleClickCapture} style={{ cursor: 'pointer' }}>\n      <MapView roomData={props.roomData} currentRoomId={props.currentRoomId} isMiniMap={true} />\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Room } from '../room'\nimport MenuButtonView from './MenuButtonView'\n\nimport '../../style/nav.css'\nimport { IsMobileContext, DispatchContext } from '../App'\nimport { HideSideMenuAction, ShowModalAction } from '../Actions'\nimport { Modal } from '../modals'\nimport MiniMapView from './MiniMapView'\n\ninterface Props {\n  roomData: { [roomId: string]: Room };\n  currentRoomId: string\n  username: string;\n  spaceIsClosed?: boolean;\n}\n\nexport default function SideNavView (props: Props) {\n  const isMobile = useContext(IsMobileContext)\n  const dispatch = useContext(DispatchContext)\n\n  const close = () => {\n    dispatch(HideSideMenuAction())\n  }\n\n  const showMap = () => {\n    dispatch(ShowModalAction(Modal.Map))\n  }\n\n  const showHappeningNow = () => {\n    dispatch(ShowModalAction(Modal.HappeningNow))\n  }\n\n  return (\n    <nav id=\"side-menu\" role=\"navigation\" aria-label=\"List of rooms you can navigate to\">\n      {isMobile ? <button\n        onClick={close}\n        id='close-button'\n        className='close'\n      >x</button> : ''}\n      <MenuButtonView username={props.username} spaceIsClosed={props.spaceIsClosed} />\n      <button id='happening-now-button' onClick={showHappeningNow}>Happening Now</button>\n      <button id='nav-map-button' onClick={showMap}>Map</button>\n      <ul>\n        <MenuItem title=\"Schedule\" modal={Modal.Schedule} />\n        <MenuItem title=\"Room List\" modal={Modal.RoomList} />\n        <MenuItem title=\"Code of Conduct\" modal={Modal.CodeOfConduct} />\n        <MenuItem title=\"Help\" modal={Modal.Help} />\n      </ul>\n      {props.roomData && props.currentRoomId\n        ? <MiniMapView roomData={props.roomData} currentRoomId={props.currentRoomId}/>\n        : null\n      }\n    </nav>\n  )\n}\n\nconst MenuItem = (props: {title: string, modal: Modal}) => {\n  const dispatch = useContext(DispatchContext)\n\n  const handler = () => {\n    dispatch(ShowModalAction(props.modal))\n  }\n  return (\n    <li>\n      <button className='nav-item' onClick={handler}>\n        <strong>{props.title}</strong>\n      </button>\n    </li>\n  )\n}\n","import React, { useContext } from 'react'\nimport { FaThumbsUp, FaRegThumbsUp } from 'react-icons/fa'\nimport ReactTooltip from 'react-tooltip'\nimport Linkify from 'react-linkify'\n\nimport { RoomNote } from '../../server/src/roomNote'\nimport { UserMapContext } from '../App'\nimport { MinimalUser } from '../../server/src/user'\nimport { deleteRoomNote, unlikeRoomNote, likeRoomNote } from '../networking'\nimport NameView from './NameView'\n\nexport function NoteView (props: { note: RoomNote }) {\n  const { userMap, myId } = useContext(UserMapContext)\n  const n = props.note\n\n  const me: MinimalUser = userMap[myId]\n  const canDelete = me.isMod || n.authorId === myId\n  const canLike = n.authorId !== myId\n\n  const onClickDelete = () => {\n    if (confirm('Are you sure you would like to delete this?')) {\n      deleteRoomNote(n.id)\n    }\n  }\n\n  const hasLiked = n.likes && n.likes.includes(myId)\n  const likes = n.likes ? n.likes.length : 0\n  let likeNames\n\n  if (hasLiked) {\n    likeNames = n.likes.map(l => userMap[l].username).join(', ')\n  }\n\n  const onClickLike = () => {\n    if (!canLike) return\n    if (hasLiked) {\n      unlikeRoomNote(n.id)\n    } else {\n      likeRoomNote(n.id)\n    }\n  }\n\n  const linkDecorator = (href, text, key) => (\n    <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\n      {text}\n    </a>\n  )\n\n  return (\n    <Linkify componentDecorator={linkDecorator}>\n      <div className='note'>\n        {canDelete ? <button onClick={onClickDelete} className='link-styled-button note-delete'>X</button> : ''}\n        {n.message} <br/>\n        <button className={`link-styled-button like-button ${hasLiked || !canLike ? 'liked' : 'unliked'}`} onClick={onClickLike} data-tip={likeNames}>\n          {likes}{hasLiked ? <FaThumbsUp /> : <FaRegThumbsUp />}\n          <ReactTooltip />\n        </button>\n        -<NameView userId={n.authorId} id={`noteAuthor-${n.id}`}/> <br/>\n      </div>\n    </Linkify>\n  )\n}\n","import React from 'react'\nimport { RoomNote } from '../../server/src/roomNote'\nimport { ServerSettings, toServerSettings } from '../../server/src/types'\nimport { addNoteToWall, deleteRoomNote, updateServerSettings } from '../networking'\nimport { NoteView } from './NoteView'\n\nimport '../../style/noteWall.css'\nimport { NoteWallData } from '../../server/src/rooms'\nimport { PublicUser } from '../../server/src/user'\n\n// TODO: insanely silly to hardcode these here, since they can easily fall out of sync\n// If you're reading this, these are the specific room ids for Roguelike Celebration 2021\n// and you should rip them out, probably?\nconst UNCONFERENCING_ROOM_IDS = ['cockatrice', 'dragon', 'naga', 'skeleton', 'tengu', 'yak']\n\nfunction numLikes (roomNote: RoomNote) {\n  return !roomNote.likes ? 0 : roomNote.likes.length\n}\n\nexport function NoteWallView (props: {notes: RoomNote[], noteWallData?: NoteWallData, user: PublicUser, serverSettings: ServerSettings}) {\n  const addNote = () => {\n    const promptText = props.noteWallData ? props.noteWallData.addNotePrompt : 'What do you type on the note wall?'\n    const message = prompt(promptText)\n    addNoteToWall(message)\n  }\n\n  const deleteAllNotes = () => {\n    const confirmation = confirm('Are you sure you want to delete all notes?')\n    if (confirmation) {\n      props.notes.map((note) => deleteRoomNote(note.id))\n    }\n  }\n\n  const setAsUnconferencingTopics = () => {\n    const confirmation = confirm('This will assign the top 6 rooms to the unconferencing rooms, are you sure?')\n    if (confirmation && props.notes.length > 0) {\n      const settingsCopy: ServerSettings = JSON.parse(JSON.stringify(props.serverSettings))\n      const sortedDescending = props.notes.sort((a, b) => numLikes(a) < numLikes(b) ? 1 : -1)\n      const newEntries = []\n      for (var i = 0; i < Math.min(sortedDescending.length, UNCONFERENCING_ROOM_IDS.length); i++) {\n        newEntries.push({\n          text: `Unconference: ${sortedDescending[i].message} in the ${UNCONFERENCING_ROOM_IDS[i]} room.`,\n          roomId: UNCONFERENCING_ROOM_IDS[i]\n        })\n      }\n      settingsCopy.happeningNowEntries = newEntries.concat(settingsCopy.happeningNowEntries)\n      updateServerSettings(settingsCopy)\n    }\n  }\n\n  const sortedNotes = (props.notes || []).sort((a, b) => {\n    const aLikes = a.likes ? a.likes.length : 0\n    const bLikes = b.likes ? b.likes.length : 0\n    return bLikes - aLikes\n  })\n\n  const noteViews = sortedNotes.map(n => <NoteView key={n.id} note={n} />)\n\n  const description = props.noteWallData ? props.noteWallData.noteWallDescription\n    : 'You are looking at a wall with space for people to place sticky notes.'\n  const buttonText = props.noteWallData ? props.noteWallData.addNoteLinkText : 'add a note'\n\n  const massDeleteButton = props.user && props.user.isMod ? (\n    <button onClick={deleteAllNotes}>Mod: Delete all notes</button>\n  ) : (\n    ''\n  )\n\n  const setAsUnconferencingTopicsButton = props.user && props.user.isMod ? (\n    <button onClick={setAsUnconferencingTopics}>Mod: Set as unconferencing topics</button>\n  ) : (\n    ''\n  )\n\n  return (\n    <div>\n      {massDeleteButton}\n      {setAsUnconferencingTopicsButton}\n      <div className='note-wall-description'>\n        {description}\n        <br/><br/>\n        If you&apos;d like, you can <button onClick={addNote} id='addNote' className='link-styled-button'>{buttonText}</button>.\n      </div>\n      {noteViews}\n    </div>\n  )\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable react/prop-types */\n\nimport React, { useContext, useEffect } from 'react'\nimport { HideModalAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport ReactDOM from 'react-dom'\n\ninterface Props {\n    fullScreen: boolean\n}\n\nexport const ModalView: React.FunctionComponent<Props> = (props) => {\n  const dispatch = useContext(DispatchContext)\n\n  useEffect(() => {\n    function keyListener (e) {\n      if (e.keyCode === 27) {\n        dispatch(HideModalAction())\n      }\n    }\n\n    document.addEventListener('keydown', keyListener)\n\n    return () => document.removeEventListener('keydown', keyListener)\n  })\n\n  const close = (e) => {\n    if (e.target.id === 'modal-wrapper' || e.target.id === 'close-button') {\n      dispatch(HideModalAction())\n    }\n  }\n\n  // createPortal means we can shove the modal in the top-level document body,\n  // instead of as part of our view hierarchy\n  return ReactDOM.createPortal(\n    <div id='modal-wrapper' onClick={close} role='dialog' aria-modal={true}>\n      <div id='modal' className={props.fullScreen ? 'full-screen' : null}>\n        <button\n          onClick={close}\n          id='close-button'\n          className='close'\n        >\n            x\n        </button>\n        {props.children}\n      </div>\n    </div>,\n    document.body\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { SetKeepCameraWhenMovingAction } from '../Actions'\nimport { DispatchContext } from '../App'\n\ninterface Props {\n  keepCameraWhenMoving: boolean;\n}\n\nexport default function VideoAudioSettingsView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n\n  const handleKeepCameraWhenMovingSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === 'true'\n    dispatch(SetKeepCameraWhenMovingAction(newValue))\n  }\n\n  return (\n    <div className=\"videoAudioSettingsContainer\">\n      <form className=\"form\" id=\"video-audio-selection-form\">\n        <label htmlFor=\"video-audio-selection-form\" className=\"form-header\">\n          Video/Audio Options:\n        </label>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"keep-camera-when-moving\"\n            value=\"true\"\n            checked={props.keepCameraWhenMoving === true}\n            onChange={handleKeepCameraWhenMovingSelection}\n          />\n          Keep video/audio status when moving rooms\n        </div>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"keep-camera-when-moving\"\n            value=\"false\"\n            checked={props.keepCameraWhenMoving === false}\n            onChange={handleKeepCameraWhenMovingSelection}\n          />\n          Always leave video/audio when moving rooms\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\n\nimport '../../style/profileEditView.css'\nimport { SetUseSimpleNamesAction, SetCaptionsEnabledAction } from '../Actions'\nimport { DispatchContext, SettingsContext } from '../App'\n\nimport { currentTheme, setTheme } from '../storage'\nimport VideoAudioSettingsView from './VideoAudioSettingsView'\n\ninterface Props {\n  keepCameraWhenMoving: boolean;\n  captionsEnabled: boolean;\n}\n\nexport default function SettingsView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n  const { useSimpleNames } = useContext(SettingsContext)\n\n  // Set the selection of the radio group upon opening the modal\n  const [selectedTheme, setSelectedTheme] = React.useState('default')\n\n  useEffect(() => {\n    (async () => {\n      setSelectedTheme(await currentTheme())\n    })()\n  })\n\n  // Handle what happens when you change the modal\n  /// change the value in local storage\n  /// then change the actual theme\n  const handleThemeSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(selectedTheme, event.target.value)\n    document.body.classList.replace(selectedTheme, event.target.value)\n    setSelectedTheme(event.target.value)\n    setTheme(event.target.value)\n  }\n\n  const handleSimpleNamesSelection = (simple: boolean) => {\n    dispatch(SetUseSimpleNamesAction(simple))\n  }\n\n  const handleCaptionChoice = (e) => {\n    if (e.target.value === 'captions-enabled') {\n      dispatch(SetCaptionsEnabledAction(true))\n    } else if (e.target.value === 'captions-disabled') {\n      dispatch(SetCaptionsEnabledAction(false))\n    }\n  }\n\n  return (\n    <div className=\"settingsContainer\">\n      <div className=\"form\" id=\"themeSelectionForm\">\n        <label htmlFor=\"themeSelectionForm\" className=\"form-header\">\n          Select Theme:\n        </label>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"default-theme\"\n            value=\"default\"\n            checked={selectedTheme === 'default'}\n            onChange={handleThemeSelection}\n          />\n          <label htmlFor=\"default-theme\">Default (Dark)</label>\n        </div>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"solarized-dark\"\n            value=\"solarized-dark\"\n            checked={selectedTheme === 'solarized-dark'}\n            onChange={handleThemeSelection}\n          />\n          <label htmlFor=\"solarized-dark\">Solarized Dark</label>\n        </div>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"solarized-light\"\n            value=\"solarized-light\"\n            checked={selectedTheme === 'solarized-light'}\n            onChange={handleThemeSelection}\n          />\n          <label htmlFor=\"solarized-light\">Solarized Light</label>\n        </div>\n      </div>\n      <div className=\"form\" id=\"simpleNamesSelectionForm\">\n        <label htmlFor=\"simpleNamesSelectionForm\" className='form-header'>Username Display Mode:</label>\n        <div className=\"radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"simpleNameSelection\"\n              id=\"useDefaultName\"\n              checked={!useSimpleNames}\n              onChange={() => handleSimpleNamesSelection(false)}\n            />\n            Use Default Names (shows colors, fonts, and polymorph potion emojis)\n          </label>\n        </div>\n        <div className=\"radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"simpleNameSelection\"\n              id=\"useSimpleName\"\n              checked={useSimpleNames}\n              onChange={() => handleSimpleNamesSelection(true)}\n            />\n            Use Simple Names (text only)\n          </label>\n        </div>\n      </div>\n      <div className=\"form\" id=\"captionsEnabled\">\n        <label\n          htmlFor=\"captionsEnabled\"\n          className=\"form-header\"\n          style={{ marginBottom: 0 }}\n        >\n          Enable Captions (Experimental):\n        </label>\n        <span style={{ marginBottom: '1em' }}>\n          This will automatically transcribe spoken audio as messages in the\n          text chat.\n        </span>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"captions-enabled\"\n            value=\"captions-enabled\"\n            checked={props.captionsEnabled}\n            onChange={handleCaptionChoice}\n          />\n          <label htmlFor=\"captions-enabled\">Enabled</label>\n        </div>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"captions-disabled\"\n            value=\"captions-disabled\"\n            checked={!props.captionsEnabled}\n            onChange={handleCaptionChoice}\n          />\n          <label htmlFor=\"captions-disabled\">Disabled</label>\n        </div>\n      </div>\n      <VideoAudioSettingsView\n        keepCameraWhenMoving={props.keepCameraWhenMoving}\n      />\n    </div>\n  )\n}\n","/* eslint-disable jsx-a11y/no-onchange */\nimport React, { useContext, useEffect } from 'react'\nimport { DispatchContext } from '../App'\nimport { HideModalAction, StartVideoChatAction } from '../Actions'\nimport LocalMediaView from './LocalMediaView'\nimport { DeviceInfo, useMediaChatContext } from '../videochat/mediaChatContext'\nimport VideoAudioSettingsView from './VideoAudioSettingsView'\n\ninterface Props {\n  initialVideoDeviceId?: string;\n  initialAudioDeviceId?: string;\n\n  userIsSpeaking: boolean\n\n  roomId: string\n\n  showJoinButton?: boolean\n  hideVideo?: boolean\n  keepCameraWhenMoving: boolean\n}\n\nexport default function MediaSelectorView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n  const { prepareMediaDevices, cameras, mics, currentMic, setCurrentMic, currentCamera, setCurrentCamera, publishMedia, publishAudio, publishingCamera, publishingMic, unpublishMedia } = useMediaChatContext()\n\n  useEffect(() => {\n    const run = async () => {\n      // This should maybe some \"hasSetUpDevices\" flag in the context or whatever,\n      // but checking for the existence of a device seems valid for now.\n      if (!currentMic) {\n        await prepareMediaDevices()\n        console.log('Prepared for media chat')\n      }\n    }\n    run()\n\n    // This code contains an *extremely* cursed bug.\n    // For some reason, unpublishMedia nondeterministically sometimes gets\n    // called in a context where `localVideoTrack` isn't defined,\n    // and thus we can't turn off the user's camera.\n    // Rather than descend into madness, I'm hacking around that in other ways in some cases.\n    // But leaving this in to help when it does.\n    return () => {\n      if (!publishingCamera || !publishingMic) {\n        unpublishMedia()\n      }\n    }\n  }, [])\n\n  const deviceToOption = (d: DeviceInfo) => {\n    return (\n      <option value={d.id} key={d.id}>\n        {d.name}\n      </option>\n    )\n  }\n\n  // TODO: These audio/video changes immediately affect your outgoing stream.\n  // Eventually, they shouldn't.\n  const onVideoChange = (e) => {\n    setCurrentCamera(e.target.value)\n  }\n\n  const onAudioChange = (e) => {\n    setCurrentMic(e.target.value)\n  }\n\n  const clickJoin = () => {\n    dispatch(HideModalAction())\n  }\n\n  let video\n  if (!props.hideVideo) {\n    video = (\n      <><label htmlFor=\"#video-select\">Webcam</label><select\n        name=\"Video\"\n        id=\"video-select\"\n        onChange={onVideoChange}\n        defaultValue={currentCamera && currentCamera.id}\n      >\n        {(cameras || []).map(deviceToOption)}\n      </select><br /></>\n    )\n  }\n\n  // HACK ALERT: Here because I couldn't figure out the CSS. Somebody who knows css please help, my code is dying. I\n  // think it's in videoChat.css that this should be put.\n  const mediaSelectorStyle = {\n    display: 'flex',\n    'flex-direction': 'column'\n  }\n\n  return (\n    <div id='media-selector' style={mediaSelectorStyle}>\n      <div>\n        {props.hideVideo ? '' : <LocalMediaView speaking={props.userIsSpeaking} hideUI={true}/>}\n        <div className='selects'>\n          {video}\n          <label htmlFor=\"#audio-select\">Audio</label>\n          <select\n            name=\"Audio\"\n            id=\"audio-select\"\n            onChange={onAudioChange}\n            defaultValue={currentMic && currentMic.id}\n          >\n            {(mics || []).map(deviceToOption)}\n          </select>\n        </div>\n      </div>\n      <div>\n        <VideoAudioSettingsView keepCameraWhenMoving={props.keepCameraWhenMoving} />\n      </div>\n      <button id=\"join\" onClick={clickJoin}>Use These Devices</button>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function CodeOfConductView () {\n  return (\n    <div id='code-of-conduct'>\n      <p>Our goal is to have a fun and welcoming celebration of roguelike games, so we have a formalized code of conduct that sets these expectations.</p>\n      <p><a href='https://roguelike.club/code.html' target='_blank' rel='noreferrer'>Read our Code of Conduct.</a></p>\n      <p>If you&apos;re being harassed, notice someone being harassed, or have any other concerns related to the code of conduct, you have a few options:</p>\n      <ul>\n        <li>Type <code>/mod</code> into the chat box, followed by a message, to contact all moderators.</li>\n        <li>Email <a href=\"mailto:contact@roguelike.club\">contact@roguelike.club</a>.</li>\n        <li>If you have a report or concern related to an organizer, please contact a different member of the <a href=\"https://roguelike.club/who.html\" target=\"_blank\" rel=\"noreferrer\">organizing team</a> outside of this tool (via email, Twitter DM, Discord, or some other service).</li>\n      </ul>\n    </div>\n  )\n}\n","import React from 'react'\n\nconst SOCIAL_TIME = 'Social Time'\n\nexport interface ScheduleEntry {\n  time: Date,\n  text: string,\n  roomIds: string[]\n  breakoutRoomId?: string\n}\n\nfunction ScheduleEntry (time: string, day: number, text: string, roomIds?: string[], breakoutRoomId?: string) {\n  const dayOneDate = (time) => new Date(`2021-10-16T${time}:00.000-07:00`)\n  const dayTwoDate = (time) => new Date(`2021-10-17T${time}:00.000-07:00`)\n\n  if (day === 1) {\n    return {\n      time: dayOneDate(time), text: text, roomIds: roomIds, breakoutRoomId: breakoutRoomId\n    }\n  } else if (day === 2) {\n    return {\n      time: dayTwoDate(time), text: text, roomIds: roomIds, breakoutRoomId: breakoutRoomId\n    }\n  } else {\n    console.error('Your static data is messed up, somehow.')\n  }\n}\n\n// Saturday entries\n/*\nexport const ScheduleEntries = [\n  ScheduleEntry('09:00', 1, 'Doors Open'),\n  ScheduleEntry('09:15', 1, 'Kickoff', ['theater']),\n  ScheduleEntry('09:30', 1, 'Michael Brough: Possibility of Roguelike Elements', ['theater'], 'mage'),\n  ScheduleEntry('10:00', 1, 'Jeremiah Reid: Juice Your Turns', ['theater'], 'rogue'),\n  ScheduleEntry('10:30', 1, SOCIAL_TIME),\n  ScheduleEntry('11:00', 1, 'Brenda Romero: Dynamic Relationships and Traits in Empire of Sin', ['theater'], 'mage'),\n  ScheduleEntry('11:15', 1, 'Jasmine Otto: Cyclic Plot Generation in a Mixed-Initiative Narrative Instrument', ['theater'], 'rogue'),\n  ScheduleEntry('11:30', 1, 'Francesco Cottone: Chronicles of Stampadia and other postcards from an alternate world', ['theater'], 'tourist'),\n  ScheduleEntry('11:45', 1, 'Atty Vohra: Automating D&D Combat Prep with Roguelike Principles', ['theater'], 'warrior'),\n  ScheduleEntry('12:00', 1, SOCIAL_TIME),\n  ScheduleEntry('13:00', 1, 'Arvi Teikari: Why Noita Became a Roguelite (and Why I Liked That a Lot)', ['theater'], 'mage'),\n  ScheduleEntry('13:30', 1, 'Shawn Main: You May Already Be a Roguelike', ['theater'], 'rogue'),\n  ScheduleEntry('14:00', 1, SOCIAL_TIME),\n  ScheduleEntry('14:30', 1, 'Jason Grinblat: Before you fix a leak ask if it\\'s a fountain (a paean for bugs and edge cases)', ['theater'], 'tourist'),\n  ScheduleEntry('15:00', 1, 'Allie Signet & Joe Maliksi, Society for Internet Blaseball Research: SIBR - Sports, Splorts, and Statistics: Why Data Accessibility Matters in Blaseball and Beyond', ['theater'], 'mage'),\n  ScheduleEntry('15:30', 1, 'Evan Debenham: Community-Driven Roguelike Development', ['theater'], 'warrior'),\n  ScheduleEntry('16:00', 1, SOCIAL_TIME),\n  ScheduleEntry('17:00', 1, 'Spencer Egart: Tooling for Roguelikes and Procgen', ['theater'], 'rogue'),\n  ScheduleEntry('17:15', 1, 'Thomas Robertson: Towards a New Understanding of Procedural Super Attacks', ['theater'], 'warrior'),\n  ScheduleEntry('17:30', 1, 'Dylan White: The Cost of Magic', ['theater'], 'mage'),\n  ScheduleEntry('17:45', 1, 'Qristy Overton: Exhibition: Attempting Brogue on a Dance Mat', ['theater'], 'tourist'),\n  ScheduleEntry('18:00', 1, SOCIAL_TIME),\n  ScheduleEntry('18:15', 1, 'Unconferencing', ['unconference']),\n  ScheduleEntry('19:00', 1, SOCIAL_TIME),\n  ScheduleEntry('20:45', 1, 'Doors Close')\n]\n*/\n\nexport const ScheduleEntries = [\n  ScheduleEntry('09:00', 2, 'Doors Open'),\n  ScheduleEntry('09:15', 2, 'Kickoff', ['theater']),\n  ScheduleEntry('09:30', 2, 'Michael Langford: For the Squishies ⚡ Making Roguelikes Accessible to (Younger) Children and their Parents', ['theater'], 'warrior'),\n  ScheduleEntry('09:45', 2, 'Younès Rabii: Pokemon Glitch - Story of A Roguelike With No Author', ['theater'], 'tourist'),\n  ScheduleEntry('10:00', 2, 'Sraëka-Lillian: Procedural Phonology: Generating Name Generators', ['theater'], 'rogue'),\n  ScheduleEntry('10:15', 1, SOCIAL_TIME),\n  ScheduleEntry('10:30', 2, 'Unconferencing', ['unconference']),\n  ScheduleEntry('11:30', 2, 'Alice Lai: All Together Now: Creating Multiplicative Power in Hades', ['theater'], 'warrior'),\n  ScheduleEntry('12:00', 2, 'Brian Cronin: Off The Rails - Lessons Learned from Monster Train Development', ['theater'], 'rogue'),\n  ScheduleEntry('12:30', 2, SOCIAL_TIME),\n  ScheduleEntry('13:30', 2, 'Chris McCormick: Building Juicy Minimal Roguelikes in the Browser', ['theater'], 'mage'),\n  ScheduleEntry('14:00', 2, 'Rich Wilson: Roguelikes, Immersive Sims, and the Church of the Simulation', ['theater'], 'rogue'),\n  ScheduleEntry('14:30', 2, 'Xalavier Nelson Jr.: Building an Economic Flesh Simulation Will Make You Disassociate from Reality', ['theater'], 'tourist'),\n  ScheduleEntry('15:00', 2, SOCIAL_TIME),\n  ScheduleEntry('15:30', 2, 'Kristen Yu: Video Game Quest Theory for Improved Procedural Content Generation', ['theater'], 'mage'),\n  ScheduleEntry('16:00', 2, 'Ally Brinken & Michelle Webb, En Rogue: Who’s the Boss (And How and Why)?', ['theater'], 'warrior'),\n  ScheduleEntry('16:30', 2, 'John Harris: The Lost Roguelikes', ['theater'], 'rogue'),\n  ScheduleEntry('17:00', 2, SOCIAL_TIME),\n  ScheduleEntry('17:30', 2, 'Nick McConnell: Things I\\'ve Learnt from Maintaining Angband', ['theater'], 'rogue'),\n  ScheduleEntry('17:45', 2, 'Nathan Savant: One Quest To Rule Them All: Quest Design in Non-Games Media', ['theater'], 'warrior'),\n  ScheduleEntry('18:00', 2, 'Noah Swartz: The Tombs of Atuan: The Original Roguelike?', ['theater'], 'mage'),\n  ScheduleEntry('18:15', 2, SOCIAL_TIME),\n  ScheduleEntry('19:00', 2, 'Doors Close')\n]\n\nexport default function ScheduleView () {\n  const formatter = new Intl.DateTimeFormat('en', { hour: 'numeric', minute: 'numeric' })\n  const userTimeZone = formatter.resolvedOptions().timeZone\n\n  const rows = ScheduleEntries.flatMap(r => {\n    if (r.text === SOCIAL_TIME) {\n      return [(<tr key={formatter.format(r.time) + 'hr1'}><th className='break' colSpan={2}><hr /></th></tr>),\n        (<tr key={formatter.format(r.time) + 'text'}><td className='time'>{formatter.format(r.time)}</td><td className='segment'>Social Time</td></tr>),\n        (<tr key={formatter.format(r.time) + 'hr2'}><th className='break' colSpan={2}><hr /></th></tr>)]\n    } else {\n      return [(\n        <tr key={formatter.format(r.time)}>\n          <td className='time'>{formatter.format(r.time)}</td>\n          <td className='segment'>{r.text}</td>\n        </tr>\n      )]\n    }\n  })\n\n  return (\n    <div id='Schedule'>\n      <h1>Schedule</h1>\n      <p>Times below should be in your local time zone. We believe your time zone is {userTimeZone}.</p>\n      <table>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React from 'react'\nimport { SlashCommands } from '../SlashCommands'\n\nexport default function HelpView () {\n  const rows = SlashCommands.map(command => {\n    return (\n      <tr key={command.type}>\n        <td>{command.invocations.join(', ')}</td>\n        <td>{command.description}</td>\n      </tr>\n    )\n  })\n\n  return (\n    <div>\n      <h1>Welcome!</h1>\n      <p>Welcome to the Roguelike Celebration social space! This is an open-source chat app / virtual world built specifically for Roguelike Celebration.</p>\n      <p>You can access this reference at any time by clicking the <strong>Help</strong> button in the left sidebar or by typing <strong>/help</strong> into the chat box.</p>\n      <p>If you have questions, feedback, or need to report a code of conduct violation, you can contact us via the <strong>/mod</strong> command.</p>\n      <h2>Command Reference</h2>\n      <p>You can enter any of these commands by typing directly into the chat box.</p>\n      <table>\n        {rows}\n      </table>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { ShowModalAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport { Modal } from '../modals'\nimport { Room } from '../room'\nimport MapView from './MapView'\n\n interface Props {\n  roomData: { [roomId: string]: Room };\n  currentRoomId: string\n }\n\nexport default function MapModalView (props: Props) {\n  const dispatch = useContext(DispatchContext)\n\n  const showList = () => {\n    dispatch(ShowModalAction(Modal.RoomList))\n  }\n  return (\n    <div>\n      <h1>Map</h1>\n      <p>Click on a room to move there!</p>\n      <p>If you find the map difficult to use, you can also view a <button className='link-styled-button' onClick={showList}>list of all rooms</button>.</p>\n      <MapView roomData={props.roomData} currentRoomId={props.currentRoomId} />\n    </div>\n  )\n}\n","// Note - we're doing firebase 8 because the firebaseui stuff doesn't work with 9, big F\nimport { currentUser, sendSignInLinkToEmail } from '../authentication'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport React from 'react'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst uiConfig = {\n  callbacks: {\n    // The documentation on the firebaseui README appears somewhat borked at time of writing; the structure of\n    // AuthResult doesn't line up with itself! If you go back to that README treat it with caution.\n    signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n      const user = currentUser()\n      if (user.shouldVerifyEmail) {\n        sendSignInLinkToEmail(user.email)\n      }\n      return true\n    }\n  },\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.TwitterAuthProvider.PROVIDER_ID\n  ]\n}\n\nexport default function LoggedOutView () {\n  return (\n    <div>\n      <header role=\"banner\">\n        <h1>Welcome to Roguelike Celebration 2021!</h1>\n      </header>\n      <main role=\"main\">\n        <p>\n          This is a social space for attendees of{' '}\n          <a href='https://roguelike.club'>Roguelike Celebration</a>, a\n          community-generated weekend of talks, games, and conversations about\n          roguelikes and related topics, including procedural generation and\n          game design. It&apos;s for fans, players, developers, scholars, and\n          everyone else!\n        </p>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n        <p>\n          If you log in via email, we will require you to verify that email address.\n        </p>\n        <p>\n          No matter which service you log in with, we do not access any data\n          other than what is needed to authenticate you. If it would make you\n          more comfortable, feel free to sign up for and use a throwaway\n          account on one of these services.\n        </p>\n        <p>\n          After logging in, you will have the opportunity to pick whatever chat handle you would\n          like before entering the space.\n        </p>\n        <p>\n          By entering the space, you agree to our{' '}\n          <a href={'https://roguelike.club/code.html'}>Code of Conduct</a>.\n        </p>\n      </main>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function WelcomeModalView (props: {}) {\n  return (\n    <div>\n      <h1>This isn&apos;t a normal chat app!</h1>\n      <p>\n        In the Roguelike Celebration conference space, you can only send/receive\n        messages <strong>in the chat room you are currently in</strong>.\n      </p>\n      <p>\n        You can move from virtual room to virtual room to talk to different\n        people.\n      </p>\n      <p>\n        You may see or hear others on videochat, but they can&apos;t see or hear you\n        unless you explicitly turn on your audio or video.\n      </p>\n      <p>\n        Our hope is to facilitate smaller group conversations, to capture the feel of an in-person conference, and to give\n        you a fun and playful space to explore with your fellow attendees.\n      </p>\n      <p>\n        Happy wandering, and be wary of reading scrolls without identifying them\n        first ;)\n      </p>\n      <p>-The Roguelike Celebration team</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function GoHomeView () {\n  return (\n    <div id='go-home'>\n      <h1>A magical force repels you from the entrance</h1>\n      <p>Roguelike Celebration is currently closed! Check the <a href=\"https://roguelike.club/event2021.html\" target=\"_blank\" rel=\"noreferrer\">schedule</a> to see when our doors will be open again.</p>\n      <p>We look forward to celebrating again with you soon :)</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function YouAreBannedView () {\n  return (\n    <div id='you-are-banned'>\n      <h1>You are banned</h1>\n      <p>You have been banned from the social space. If you believe you have been banned in error, please email <b>contact at roguelike.club</b>.</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { FaVideo } from 'react-icons/fa'\nimport { moveToRoom } from '../networking'\n\nimport { Room } from '../room'\n\ninterface Props {\n    rooms: Room[]\n}\n\nexport default function RoomListView (props: Props) {\n  const list = props.rooms.map((r) => {\n    return r.hidden ? '' : <RoomListItem room={r} key={`room-sidebar-${r.id}`} />\n  })\n\n  return (\n    <div>\n      <h1>List of Rooms</h1>\n      <ul>\n        {list}\n      </ul>\n    </div>\n  )\n}\n\nconst RoomListItem = (props: { room: Room }) => {\n  const { room } = props\n\n  const onClick = () => {\n    moveToRoom(room.id)\n  }\n  const userCount = room.users ? `(${room.users.length})` : ''\n  const videoIcon = room.videoUsers && room.videoUsers.length > 0 ? <FaVideo /> : ''\n\n  return (\n    <li style={{ listStyle: 'none' }}>\n      <button onClick={onClick} className=\"link-styled-button\">\n        <strong>{room.displayName}</strong> {userCount} {videoIcon}\n      </button>\n    </li>\n  )\n}\n","import React, { useState } from 'react'\nimport { HappeningNowEntry, ServerSettings, toServerSettings } from '../../server/src/types'\nimport { resetRoomData, updateServerSettings } from '../networking'\nimport { Room } from '../room'\n\nexport default function ServerSettingsView (props: { serverSettings: ServerSettings, roomData: { [roomId: string]: Room } }) {\n  const [newSettings, setNewSettings] = useState(JSON.stringify(props.serverSettings, null, 2))\n\n  const [addHappeningNowText, setAddHappeningNowText] = useState('')\n  const [addHappeningNowRoomId, setAddHappeningNowRoomId] = useState('')\n  const [addHappeningNowExternalLink, setAddHappeningNowExternalLink] = useState('')\n\n  const submit = () => {\n    let parsedNewSettings\n    try {\n      parsedNewSettings = toServerSettings(JSON.parse(newSettings))\n    } catch (e) {\n      alert('JSON parse error: ' + e.toString())\n      return\n    }\n\n    if (!parsedNewSettings) {\n      alert('New settings were valid json but had invalid properties, please check for typos!')\n    } else {\n      updateServerSettings(parsedNewSettings)\n    }\n  }\n\n  const deleteHappeningNowEntry = (entry: HappeningNowEntry) => {\n    const confirmation = confirm('Are you sure you want to delete the happening now note?')\n    if (confirmation) {\n      // Ugh I don't feel like googling more about how to work arrays, let's just do the dumb thing\n      const settingsCopy: ServerSettings = JSON.parse(JSON.stringify(props.serverSettings))\n      settingsCopy.happeningNowEntries = props.serverSettings.happeningNowEntries.filter((i) => i.text !== entry.text)\n      updateServerSettings(settingsCopy)\n    }\n  }\n\n  const addEntry = () => {\n    if (addHappeningNowText.length === 0) {\n      alert('You need to have text!')\n      return\n    } else if (addHappeningNowRoomId.length > 0 && addHappeningNowExternalLink.length > 0) {\n      alert('You cannot have roomId and external link')\n      return\n    } else if (addHappeningNowRoomId.length > 0 && !props.roomData[addHappeningNowRoomId]) {\n      alert('No such room as ' + addHappeningNowRoomId)\n      return\n    }\n\n    const settingsCopy: ServerSettings = JSON.parse(JSON.stringify(props.serverSettings))\n    settingsCopy.happeningNowEntries.push({\n      text: addHappeningNowText,\n      roomId: addHappeningNowRoomId.length > 0 ? addHappeningNowRoomId : undefined,\n      externalLink: addHappeningNowExternalLink.length > 0 ? addHappeningNowExternalLink : undefined\n    })\n    updateServerSettings(settingsCopy)\n  }\n\n  const clickedResetRoomData = async () => {\n    if (!confirm(\"Are you sure you'd like to reset room data?\")) return\n    await resetRoomData()\n  }\n\n  return (\n    <div className='serverSettingsContainer'>\n      <button onClick={clickedResetRoomData}>Reset Room Data</button>\n      <h1>Happening Now Controls</h1>\n      <h2>Current Entries</h2>\n      {\n        props.serverSettings.happeningNowEntries.map((e) => {\n          return <li key={e.text}>\n            {JSON.stringify(e)}\n            <button id={'delete-' + e.text} onClick={() => deleteHappeningNowEntry(e)}>Delete</button>\n          </li>\n        })\n      }\n      <div className='form' id='addHappeningNowForm'>\n        <div className=\"field\">\n          <label htmlFor=\"add-happening-now-text\">Text</label>\n          <input\n            type=\"text\"\n            id=\"add-happening-now-text\"\n            value={addHappeningNowText}\n            onChange={(e) => setAddHappeningNowText(e.currentTarget.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"add-happening-now-room-id\">Room ID (blank if you want to link to an external site)</label>\n          <input\n            type=\"text\"\n            id=\"add-happening-now-room-id\"\n            value={addHappeningNowRoomId}\n            onChange={(e) => setAddHappeningNowRoomId(e.currentTarget.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"add-happening-now-external-link\">External Link (blank if you want to link to a room)</label>\n          <input\n            type=\"text\"\n            id=\"add-happening-now-external-link\"\n            value={addHappeningNowExternalLink}\n            onChange={(e) => setAddHappeningNowExternalLink(e.currentTarget.value)}\n          />\n        </div>\n        <button id='add-entry' onClick={addEntry} className='submit'>Add Entry</button>\n      </div>\n\n      <h1>Manual Controls (Finnicky)</h1>\n      <h3 id='old-settings-header'>Old settings:</h3>\n      <pre id='old-settings-pretty'>{JSON.stringify(props.serverSettings, null, 2)}</pre>\n      <h3 id='new-settings-header'>New settings:</h3>\n      <div className='form' id='serverSettingsForm'>\n        <textarea id='new-settings-textarea'\n          defaultValue={newSettings}\n          cols={50}\n          rows={30}\n          onChange={(e) => setNewSettings(e.currentTarget.value)}\n        />\n        <button\n          // shep: issue #45, double checking that spaces didn't sneak into handle.\n          onClick={(e) => {\n            submit()\n          }}\n          className='submit'>\n            Save Changes\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function ClientDeployedModal () {\n  return (\n    <div id='client-deployed'>\n      <h1>New Version Available!</h1>\n      <p>We just updated the social space with new features and bugfixes!</p>\n      <p>Please reload this page whenever is convenient so you can be running the latest code.</p>\n      <button onClick={() => window.location.reload()}>Reload</button>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { HappeningNowEntry } from '../../server/src/types'\nimport { HideModalAction } from '../Actions'\nimport { DispatchContext } from '../App'\nimport { moveToRoom } from '../networking'\nimport { Room } from '../room'\nimport { ScheduleEntries } from './ScheduleView'\n\n// Apparently reverse() does an actual reversal! WELL. All right then, Javascript.\nconst ReversedScheduleEntries = [...ScheduleEntries].reverse()\n\nexport default function HappeningNowView (props: { roomData: { [roomId: string]: Room }, entries: HappeningNowEntry[] }) {\n  const dispatch = useContext(DispatchContext)\n\n  // To test this functionality, just set it at some appropriate date in the conference time\n  // const now = new Date(`2021-10-16T10:35:00.000-07:00`)\n  const now = new Date()\n  const currentlyScheduledIdx = ReversedScheduleEntries.findIndex((entry) => entry.time < now)\n  const currentlyScheduled = ReversedScheduleEntries[currentlyScheduledIdx]\n\n  const moveAndClose = (roomId: string) => {\n    if (!props.roomData[roomId]) {\n      console.error('Can\\'t go to room ' + roomId + ' from link in happening now view, no such room!')\n    } else {\n      moveToRoom(roomId)\n      dispatch(HideModalAction())\n    }\n  }\n\n  const buildScheduledRoomList = (roomIds: string[]) => {\n    return <ul>\n      {roomIds.map((id) => {\n        return <li key={id}>\n          <button id={`button-happening-now${id}`} onClick={() => moveAndClose(id)} className='link-styled-button'>\n            {props.roomData[id] ? props.roomData[id].displayName : 'unknown room'}\n          </button>\n        </li>\n      })}\n    </ul>\n  }\n\n  let currentlyScheduledElement\n  if (currentlyScheduled) {\n    if (currentlyScheduled.text === 'Social Time') {\n      var i = currentlyScheduledIdx + 1\n      const socialTimeOptions = []\n      while (ReversedScheduleEntries[i] && ReversedScheduleEntries[i].breakoutRoomId) {\n        const breakoutEntry = ReversedScheduleEntries[i]\n        const breakoutRoomId = breakoutEntry.breakoutRoomId\n        const discussString = `Discuss ${breakoutEntry.text} in `\n        socialTimeOptions.push(\n          <li key={breakoutRoomId}>\n            {discussString}\n            <button id={`button-happening-now${breakoutRoomId}`} onClick={() => moveAndClose(breakoutRoomId)} className='link-styled-button'>\n              {props.roomData[breakoutRoomId] ? props.roomData[breakoutRoomId].displayName : 'unknown room'}\n            </button>\n          </li>\n        )\n        i++\n      }\n      socialTimeOptions.push(<li key={'option-chat'}>Chat!</li>)\n      socialTimeOptions.push(<li key={'option-explore'}>Explore the space!</li>)\n      socialTimeOptions.push(<li key={'option-hunt'}>Hunt for secrets!</li>)\n      socialTimeOptions.push(<li key={'option-free'}>Just remember to beware the grues.</li>)\n      currentlyScheduledElement = <div id = 'currently-scheduled-div'>\n        <strong>Social Time</strong>\n        <ul>\n          {socialTimeOptions}\n        </ul>\n      </div>\n    } else {\n      currentlyScheduledElement = <div id ='currently-scheduled-div'>\n        {currentlyScheduled.text}\n        {currentlyScheduled.roomIds ? buildScheduledRoomList(currentlyScheduled.roomIds) : ''}\n      </div>\n    }\n  } else {\n    currentlyScheduledElement = <strong>You&apos;re in early! Check the schedule for when the doors officially open.</strong>\n  }\n\n  return (\n    <div id='happening-now'>\n      <h1>Happening Now</h1>\n      <h2>From The Schedule</h2>\n      {currentlyScheduledElement}\n      <h2>Other Live Activities</h2>\n      <ul>\n        {\n          props.entries.map((e) => {\n            if (e.roomId) {\n              return <li key={e.text}>\n                <button id={`button-${e.text}`} onClick={() => moveAndClose(e.roomId)} className='link-styled-button'>{e.text}</button>\n              </li>\n            } else if (e.externalLink) {\n              return <li key={e.text}>\n                <a className='nav-item' href={e.externalLink} target='_blank' rel='nofollow noopener noreferrer'>{e.text}</a>\n              </li>\n            } else {\n              return <li key={e.text}>{e.text}</li>\n            }\n          })\n        }\n      </ul>\n    </div>\n  )\n}\n","import React from 'react'\nimport PageVisibility from 'react-page-visibility'\nimport { AuthenticateAction } from '../Actions'\nimport { currentUser, sendSignInLinkToEmail, signOut } from '../authentication'\n\ninterface Props {\n  userEmail: string;\n  dispatch: any;\n}\n\nexport default function VerifyEmailView (props: Props) {\n  // For some reason, this doesn't work - dispatch ends up as null. So I injected it into props. This is weird and if\n  // whoever's reading this has a good explanation I'd love to hear it! -Travis\n  // const dispatch = useContext(DispatchContext)\n  const dispatch = props.dispatch\n\n  const handleVisibilityChange = (visibility) => {\n    const user = currentUser()\n    if (visibility && user && !user.shouldVerifyEmail) {\n      dispatch(AuthenticateAction(user.id, user.id, user.providerId, false))\n    }\n  }\n\n  const goToAuth = () => {\n    signOut().then(() => {\n      dispatch(AuthenticateAction(undefined, undefined, undefined, undefined))\n    })\n  }\n\n  return (\n    <PageVisibility onChange={handleVisibilityChange}>\n      <div>\n        <header role=\"banner\">\n          <h1>Please verify your email!</h1>\n        </header>\n        <main role=\"main\">\n          <p>\n            You&apos;re currently attempting to log in as <strong>{props.userEmail}</strong>, but your email is not yet\n            verified. Please follow the link in your email to complete the registration process.\n          </p>\n          <p>\n            <strong>If you have verified your email and this page has not automatically logged you in, please refresh\n              the page manually.</strong>\n          </p>\n          <button\n            onClick={(e) => {\n              sendSignInLinkToEmail(props.userEmail)\n            }}>\n              Resend Verification Email\n          </button>\n          <br/>\n          <button onClick={goToAuth}>\n              Use a Different Provider or Email\n          </button>\n        </main>\n      </div>\n    </PageVisibility>\n  )\n}\n","import React, { useContext } from 'react'\nimport { DispatchContext } from '../App'\nimport { AuthenticateAction, HideSideMenuAction } from '../Actions'\nimport config from '../config'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n\nexport default function EmailVerifiedView () {\n  const user = firebase.auth().currentUser\n\n  if (!user.emailVerified) {\n    firebase.auth().signInWithEmailLink(user.email, window.location.href).then(() => {\n      // A crude way of forcing a rerender, because I don't want to go through the trouble of making an action.\n      window.location.reload()\n    })\n  }\n\n  if (!user.emailVerified) {\n    return (\n      <div>\n        <header role=\"banner\">\n          <h1>Attempting to verify email.</h1>\n        </header>\n        <main role=\"main\">\n          <p>\n            Please wait while your email is verified.\n          </p>\n        </main>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <header role=\"banner\">\n          <h1>Your email has been successfully verified!</h1>\n        </header>\n        <main role=\"main\">\n          <p>\n            You may now close this window and go back to the main app.\n          </p>\n        </main>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function RiddleModalView (props: {riddles: string[]}) {\n  const riddleViews = props.riddles.map(function (val, index) { return <p className='riddle' key={'riddle-' + index}>{val}</p> })\n  const riddleTitle = (props.riddles.length > 1 ? 'The engraved riddles read...' : 'The engraved riddle reads...')\n\n  return (\n    <div id='riddle-modal' className='riddle-div'>\n      <h1>{riddleTitle}</h1>\n      {riddleViews}\n    </div>\n  )\n}\n","import * as sdk from 'microsoft-cognitiveservices-speech-sdk'\n\nimport {\n  ResultReason,\n  CancellationReason\n} from 'microsoft-cognitiveservices-speech-sdk'\nimport { Dispatch } from 'react'\nimport { Action, SendCaptionAction } from './Actions'\nimport { fetchCognitiveServicesKey } from './networking'\n\nlet recognizer: sdk.SpeechRecognizer | undefined\nlet speechConfig: sdk.SpeechConfig | undefined\n\nexport async function setUpSpeechRecognizer (\n  deviceId: string,\n  dispatch: Dispatch<Action>\n): Promise<void> {\n  console.log('Starting recognition')\n  if (recognizer) {\n    await recognizer.stopContinuousRecognitionAsync()\n  }\n\n  if (!speechConfig) {\n    const { cognitiveServicesKey, cognitiveServicesRegion } = await fetchCognitiveServicesKey()\n    speechConfig = sdk.SpeechConfig.fromSubscription(\n      cognitiveServicesKey,\n      cognitiveServicesRegion\n    )\n  }\n\n  const audioConfig = sdk.AudioConfig.fromMicrophoneInput(deviceId)\n  recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig)\n\n  recognizer.recognizing = (s, e) => {\n    console.log('RECOGNIZING: ', e.result.text)\n  }\n  recognizer.recognized = (s, e) => {\n    if (e.result.reason === ResultReason.RecognizedSpeech) {\n      console.log(`RECOGNIZED: Text=${e.result.text}`)\n      if (e.result.text !== '') {\n        dispatch(SendCaptionAction(e.result.text))\n      }\n    } else if (e.result.reason === ResultReason.NoMatch) {\n      console.log('NOMATCH: Speech could not be recognized.')\n    }\n  }\n\n  recognizer.canceled = (s, e) => {\n    console.log(`CANCELED: Reason=${e.reason}`)\n\n    if (e.reason === CancellationReason.Error) {\n      console.log(`\"CANCELED: ErrorCode=${e.errorCode}`)\n      console.log(`\"CANCELED: ErrorDetails=${e.errorDetails}`)\n      console.log('CANCELED: Did you update the subscription info?')\n    }\n\n    recognizer.stopContinuousRecognitionAsync()\n  }\n\n  recognizer.sessionStopped = (s, e) => {\n    console.log('\\n    Session stopped event.')\n    recognizer.stopContinuousRecognitionAsync()\n  }\n\n  recognizer.startContinuousRecognitionAsync()\n}\n\nexport async function stopSpeechRecognizer () {\n  await recognizer.stopContinuousRecognitionAsync()\n}\n","import * as React from 'react'\nimport { useState, useEffect, useContext } from 'react'\nimport * as Twilio from 'twilio-video'\nimport { HideModalAction, MediaReceivedSpeakingDataAction, RefreshReactAction, StartVideoChatAction, StopVideoChatAction } from '../Actions'\n\nimport { DispatchContext } from '../App'\n\nimport { fetchTwilioToken } from '../networking'\nimport { setUpSpeechRecognizer, stopSpeechRecognizer } from '../speechRecognizer'\nimport { DeviceInfo, MediaChatContext } from './mediaChatContext'\nimport ParticipantTracks from './twilio/ParticipantTracks'\nimport VideoTrack from './twilio/VideoTrack'\n\nexport const TwilioChatContextProvider = (props: {\n  active: boolean;\n  children: React.ReactNode;\n}) => {\n  const dispatch = useContext(DispatchContext)\n\n  const [token, setToken] = useState<string>()\n  const [roomId, setRoomId] = useState<string>()\n  const [room, setRoom] = useState<Twilio.Room>()\n  const [joinCallFailed, setJoinCallFailed] = useState<boolean>(false)\n\n  const [micEnabled, setMicEnabled] = useState<boolean>(true)\n  const [cameraEnabled, setCameraEnabled] = useState<boolean>(true)\n\n  const [cameras, setCameras] = useState<DeviceInfo[]>([])\n  const [mics, setMics] = useState<DeviceInfo[]>([])\n\n  const [currentMic, setCurrentMicInternal] = useState<DeviceInfo>()\n  const [currentCamera, setCurrentCameraInternal] = useState<DeviceInfo>()\n\n  // These are separate from current to handle the case of the media selector\n  // where we need both mic and camera enabled, but may not want to show\n  // the camera in the background\n  const [publishingCamera, setPublishingCamera] = useState<boolean>()\n  const [publishingMic, setPublishingMic] = useState<boolean>()\n\n  const [remoteParticipants, setRemoteParticipants] = useState<Map<String, Twilio.Participant>>()\n\n  const [localVideoTrack, setLocalVideoTrack] = useState<Twilio.LocalVideoTrack>()\n  const [localAudioTrack, setLocalAudioTrack] = useState<Twilio.LocalAudioTrack>()\n\n  const [localStreamView, setLocalStreamView] = useState<React.ReactNode>()\n\n  const fetchLocalAudioTrack = async () => {\n    if (localAudioTrack) {\n      return localAudioTrack\n    }\n\n    const trackObj: any = {}\n    if (currentMic) {\n      trackObj.audio = { deviceId: currentMic.id }\n    }\n\n    const track = await Twilio.createLocalAudioTrack(trackObj)\n    setLocalAudioTrack(track)\n  }\n\n  const fetchLocalVideoTrack = async () => {\n    console.log('[TWILIO] Fetching local video track')\n\n    const options: Twilio.CreateLocalTrackOptions = { // TODO: Shrink size if mobile\n      height: 720,\n      frameRate: 24,\n      width: 1280\n    }\n\n    if (currentCamera) {\n      options.deviceId = { exact: currentCamera.id }\n    }\n\n    const track = await Twilio.createLocalVideoTrack(options)\n    setLocalVideoTrack(track)\n    setLocalStreamView(<VideoTrack track={track} />)\n\n    if (publishingCamera) {\n      publishVideo()\n    }\n  }\n\n  const startTranscription = () => {\n    if (!currentMic) return\n    setUpSpeechRecognizer(currentMic.id, dispatch)\n  }\n\n  const stopTranscription = () => {\n    stopSpeechRecognizer()\n  }\n\n  const publishMedia = () => {\n    // If we don't have a room we should no-op instead of attempting to publish\n    if (!room) { return }\n    publishAudio()\n    publishVideo()\n  }\n\n  const publishAudio = async () => {\n    if (room) {\n      dispatch(StartVideoChatAction())\n      setPublishingMic(true)\n      if (localAudioTrack) {\n        room.localParticipant.publishTrack(localAudioTrack)\n        await localAudioTrack.restart()\n        startTranscription()\n      }\n    }\n  }\n\n  const publishVideo = () => {\n    if (!room) {\n      return\n    }\n\n    setPublishingCamera(true)\n\n    if (localVideoTrack) {\n      localVideoTrack.restart()\n      localVideoTrack.enable(true)\n      room.localParticipant.publishTrack(localVideoTrack)\n\n      if (!localStreamView) {\n        setLocalStreamView(<VideoTrack track={localVideoTrack} />)\n      }\n    }\n  }\n\n  const unpublishMedia = () => {\n    console.log('In unpublish', localVideoTrack)\n\n    dispatch(StopVideoChatAction())\n    setPublishingCamera(false)\n    setPublishingMic(false)\n\n    if (localAudioTrack) {\n      localAudioTrack.stop()\n      stopSpeechRecognizer()\n\n      if (room) {\n        room.localParticipant.unpublishTrack(localAudioTrack)\n      }\n    }\n\n    if (localVideoTrack) {\n      // We shouldn't need to be so aggressive,\n      // but track.stop() alone isn't doing it\n      // and I can't be bothered to test which exact combo works\n      localVideoTrack.stop()\n      localVideoTrack.detach()\n      localVideoTrack.disable()\n      localVideoTrack.mediaStreamTrack.stop()\n\n      if (room) {\n        room.localParticipant.unpublishTrack(localVideoTrack)\n      }\n    }\n\n    // setLocalStreamView(undefined)\n  }\n\n  useEffect(() => {\n    if (!props.active) return\n    console.log('[TWILIO] In useeffect for camera')\n    if (!currentCamera) return\n    console.log('[TWILIO] Has camera')\n    fetchLocalVideoTrack()\n  }, [currentCamera])\n\n  useEffect(() => {\n    if (!props.active) return\n    if (!currentMic) return\n    fetchLocalAudioTrack()\n  }, [currentMic])\n\n  useEffect(() => {\n    if (!props.active) return\n    if (micEnabled) {\n      startTranscription()\n    } else {\n      stopTranscription()\n    }\n  }, [micEnabled])\n\n  useEffect(() => {\n    if (!props.active) return\n    console.log('[TWILIO] In token roomId useEffect')\n    // The initial token might get set after calling joinCall\n    // This calls joinCall when we're ready after that initial setup\n    if (token && roomId && !room) {\n      console.log('[TWILIO] Joining room')\n      joinCall(roomId, true)\n    }\n  }, [token, roomId])\n\n  async function prepareForMediaChat () {\n    if (token) return\n    return fetchTwilioToken()\n      .then((token) => { setToken(token) })\n  }\n\n  async function prepareMediaDevices () {\n    const mapToDeviceInfo = (d: MediaDeviceInfo): DeviceInfo => {\n      console.log(d)\n      return {\n        id: d.deviceId,\n        name: d.label\n      }\n    }\n\n    try {\n      // This is just to try to force the prompt early enough\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      stream.getTracks().forEach(t => t.stop())\n\n      await navigator.mediaDevices.enumerateDevices()\n        .then((devices) => {\n          console.log('[TWILIO] Fetched devices')\n\n          const cameras = devices\n            .filter(d => d.kind === 'videoinput')\n            .map(mapToDeviceInfo)\n\n          const mics = devices\n            .filter(d => d.kind === 'audioinput')\n            .map(mapToDeviceInfo)\n\n          setCameras(cameras)\n          setMics(mics)\n\n          console.log('[TWILIO] Setting current camera', cameras[0])\n          setCurrentCameraInternal(cameras[0])\n          setCurrentMicInternal(mics[0])\n        })\n    } catch (e) {\n      console.log('[TWILIO] Error fetching media devices', e)\n      alert(\"We couldn't fetch your audio and video devices. This usually means another application is using your primary webcam or mic. Close anything that might be accessing them and try again. If that fails, confirm you haven't denied webcam/mic permission to this website in your browser.\")\n      dispatch(HideModalAction())\n    }\n  }\n\n  async function joinCall (roomId: string, shouldPublishTracks: boolean) {\n    if (!props.active) {\n      console.warn('joinCall was called while text-only mode was on')\n      return\n    }\n    // A useEffect hook will re-call this once the token exists\n    if (!token) {\n      setRoomId(roomId)\n      return\n    }\n\n    // We're real sloppy re: calling this multiple times\n    if (room && room.name === roomId) return\n\n    if (room && room.name !== roomId) {\n      // Remove from previous room\n      room.disconnect()\n    }\n\n    try {\n      const opts: Twilio.ConnectOptions = {\n        name: roomId,\n        tracks: [],\n        maxAudioBitrate: 16000, // For music remove this line\n        bandwidthProfile: {\n          video: {\n            mode: 'grid',\n            maxTracks: 10,\n            renderDimensions: {\n              high: { height: 1080, width: 1920 },\n              standard: { height: 720, width: 1280 },\n              low: { height: 176, width: 144 }\n            }\n          }\n        },\n        preferredVideoCodecs: [{ codec: 'VP8', simulcast: true }],\n        dominantSpeaker: true\n      }\n\n      if (shouldPublishTracks && localVideoTrack) {\n        // This cast shouldn't be necessary, but I'm not sure how to fix it\n        // (Because we define tracks as [] above, TS doesn't know if it's\n        // LocalTrack[] or MediaStreamTrack[])\n        (opts.tracks as Twilio.LocalTrack[]).push(localVideoTrack)\n      }\n\n      if (shouldPublishTracks && localAudioTrack) {\n        (opts.tracks as Twilio.LocalTrack[]).push(localAudioTrack)\n      }\n\n      // This is to prevent a possible race condition where the user has the leave room setting on, switches rooms,\n      // and then quickly rejoins. Because Twilio.connect can take seconds to resolve, this would lead to the user\n      // joining the *previous* room before the Twilio.connect resolved and booted them with non-functioning tracks\n      // into the new room.\n      setRoom(undefined)\n      // TODO: We should have error handling for various Twilio error codes, probably.\n      // throw 'Uncomment this to simulate a Twilio failure.'\n      const newRoom = await Twilio.connect(token, opts)\n      setJoinCallFailed(false)\n\n      // Note that dominantSpeaker can be set to null\n      newRoom.on('dominantSpeakerChanged', (participant: Twilio.Participant) => {\n        if (participant) {\n          dispatch(MediaReceivedSpeakingDataAction(participant.identity))\n        } else {\n          dispatch(MediaReceivedSpeakingDataAction(null))\n        }\n      })\n\n      // TODO: I worry this will send a single video/audio frame if disabled on start? To test\n      newRoom.localParticipant.videoTracks.forEach(publication => {\n        if (cameraEnabled) {\n          publication.track.enable()\n        } else {\n          publication.track.disable()\n        }\n      })\n\n      newRoom.localParticipant.audioTracks.forEach(publication => {\n        if (micEnabled) {\n          publication.track.enable()\n        } else {\n          publication.track.disable()\n        }\n      })\n\n      console.log('[TWILIO] In room?', newRoom)\n      console.log('[TWILIO] Attached participant count:', newRoom.participants.size)\n\n      setLocalStreamView(<ParticipantTracks participant={newRoom.localParticipant} displayVideo={cameraEnabled} displayAudio={micEnabled} />)\n      setRemoteParticipants(newRoom.participants)\n\n      // Required so that when a user who is in the room begins publishing, it shows the user on the client, as the\n      // client participant state can be out of sync with Twilio's state.\n      newRoom.on('trackPublished', (publication: Twilio.RemoteTrackPublication, participant: Twilio.RemoteParticipant) => {\n        dispatch(RefreshReactAction())\n      })\n\n      // I believe there's a race condition when another user leaves the video/audio channels between the draws due to\n      // the event and the Twilio resolution, so sometimes the client re-renders before the person has finished\n      // unpublishing. I'm not a huge fan of how many times we're pushing out the renders for the video chat, but to\n      // properly sync everything up can wait, given that the conf is in...like, less than two weeks now.\n      newRoom.on('trackUnpublished', (publication: Twilio.RemoteTrackPublication, participant: Twilio.RemoteParticipant) => {\n        dispatch(RefreshReactAction())\n      })\n\n      newRoom.on('participantConnected', () => {\n        setRemoteParticipants(newRoom.participants)\n        // HACK ALERT: setRemoteParticipants(...) does not trigger a re-render of the MediaView, hence I force it here.\n        // This function actually resolves *after* the room presence changes, so the client thinks nobody else is in\n        // the MUD room and doesn't bring up the chat client. This then resolves, but the client still doesn't see the\n        // user, so forcing a re-render surfaces that.\n        dispatch(RefreshReactAction())\n      })\n\n      newRoom.on('participantDisconnected', () => {\n        setRemoteParticipants(newRoom.participants)\n        // HACK ALERT: setRemoteParticipants(...) does not trigger a re-render of the MediaView, hence I force it here.\n        // This function actually resolves *after* the room presence changes, so the client thinks nobody else is in\n        // the MUD room and doesn't bring up the chat client. This then resolves, but the client still doesn't see the\n        // user, so forcing a re-render surfaces that.\n        dispatch(RefreshReactAction())\n      })\n\n      window.addEventListener('beforeunload', (event) => {\n        newRoom.disconnect()\n      })\n\n      setRoom(newRoom)\n    } catch (e) {\n      console.log('[TWILIO] Could not connect to room', e)\n      setLocalStreamView(null)\n      setJoinCallFailed(true)\n    }\n  }\n\n  function leaveCall () {\n    console.log('[TWILIO] In leave call', localVideoTrack)\n    if (room) room.disconnect()\n    if (localVideoTrack) localVideoTrack.stop()\n    if (localAudioTrack) localAudioTrack.stop()\n    stopTranscription()\n  }\n\n  return (\n    <MediaChatContext.Provider\n      value={{\n        prepareForMediaChat,\n        prepareMediaDevices,\n\n        cameras,\n        mics,\n\n        currentMic,\n        currentCamera,\n\n        publishingCamera,\n        publishingMic,\n\n        // TODO: Should this function be moved elsewhere?\n        // Should this logic live in a useEffect hook?\n        setCurrentCamera: async (id: string) => {\n          console.log(`[TWILIO] Setting current camera from ${currentCamera.id} (${currentCamera.name}) to ${id}`)\n          if (currentCamera && currentCamera.id !== id) {\n            console.log('[TWILIO] Removing old camera', room)\n            localVideoTrack.stop()\n            if (room) {\n              // TODO: room.unpublishTrack(localVideoTrack) wasn't working for some reason\n              // This blunt approach works for now, but will need changing if we\n              // e.g. add in screen sharing\n              /*\n              room.localParticipant.videoTracks.forEach(publication => {\n                publication.unpublish()\n              })\n              */\n              // TODO: There were huge issues with inconsistency with async timing issues leading to different media\n              // being shown to others versus shown to you - that is, users thought they were using the wrong camera.\n              // Booting the user out whenever they fiddle with their camera is brutal, but fixes it.\n              dispatch(StopVideoChatAction())\n              unpublishMedia()\n            }\n          }\n          setCurrentCameraInternal(cameras.find((c) => c.id === id))\n          localVideoTrack.restart()\n          return null\n        },\n        setCurrentMic: (id: string) => {\n          if (currentMic && currentMic.id !== id) {\n            localAudioTrack.stop()\n            if (room) {\n              /* room.localParticipant.audioTracks.forEach(publication => {\n                publication.unpublish()\n              }) */\n              dispatch(StopVideoChatAction())\n              unpublishMedia()\n            }\n          }\n          setCurrentMicInternal(mics.find(c => c.id === id))\n          localAudioTrack.restart()\n          return null\n        },\n\n        localStreamView,\n\n        publishMedia,\n        unpublishMedia,\n        publishAudio,\n\n        inCall: !!room,\n        joinCallFailed: joinCallFailed,\n        joinCall,\n        leaveCall,\n\n        callParticipants: remoteParticipants,\n\n        micEnabled,\n        setMicEnabled: (enabled: boolean) => {\n          setMicEnabled(enabled)\n          if (!room) return\n\n          room.localParticipant.audioTracks.forEach(publication => {\n            if (enabled) {\n              publication.track.enable()\n            } else {\n              // TODO: Might want to stop/unpublish\n              // to turn off light\n              publication.track.disable()\n            }\n          })\n        },\n\n        cameraEnabled,\n        setCameraEnabled: (enabled: boolean) => {\n          setCameraEnabled(enabled)\n          if (!room) return\n\n          room.localParticipant.videoTracks.forEach(publication => {\n            if (enabled) {\n              publication.track.enable()\n            } else {\n              publication.track.disable()\n            }\n          })\n        }\n      }}\n    >\n      {props.children}\n    </MediaChatContext.Provider>\n  )\n}\n","import React, { useEffect, createContext } from 'react'\n\nimport RoomView from './components/RoomView'\nimport ChatView from './components/ChatView'\nimport InputView from './components/InputView'\nimport { connect, checkIsRegistered, getServerSettings } from './networking'\nimport reducer, { State, defaultState } from './reducer'\nimport {\n  AuthenticateAction,\n  Action,\n  IsRegisteredAction,\n  LoadMessageArchiveAction,\n  ShowSideMenuAction,\n  SendMessageAction,\n  SpaceIsClosedAction,\n  PlayerBannedAction,\n  SetKeepCameraWhenMovingAction,\n  SetTextOnlyModeAction,\n  SetNumberOfFacesAction,\n  SetUseSimpleNamesAction,\n  SetCaptionsEnabledAction\n} from './Actions'\nimport ProfileView from './components/ProfileView'\nimport { useReducerWithThunk } from './useReducerWithThunk'\nimport MediaChatView from './components/MediaChatView'\nimport ProfileEditView from './components/ProfileEditView'\nimport SideNavView from './components/SideNavView'\nimport { IconContext } from 'react-icons/lib'\nimport { Modal } from './modals'\nimport { NoteWallView } from './components/NoteWallView'\nimport { ModalView } from './components/ModalView'\nimport SettingsView from './components/SettingsView'\nimport MediaSelectorView from './components/MediaSelectorView'\nimport CodeOfConductView from './components/CodeOfConductView'\nimport ScheduleView from './components/ScheduleView'\nimport HelpView from './components/HelpView'\nimport MapModalView from './components/MapModalView'\nimport LoggedOutView from './components/LoggedOutView'\nimport WelcomeModalView from './components/WelcomeModalView'\nimport GoHomeView from './components/GoHomeView'\nimport YouAreBannedView from './components/YouAreBannedView'\nimport RoomListView from './components/RoomListView'\nimport RainbowGateModalView from './components/feature/RainbowGateViews'\nimport DullDoorModalView from './components/feature/DullDoorViews'\nimport ServerSettingsView from './components/ServerSettingsView'\nimport ClientDeployedModal from './components/ClientDeployedModal'\nimport FullRoomIndexModalView from './components/feature/FullRoomIndexViews'\nimport HappeningNowView from './components/HappeningNowView'\nimport VerifyEmailView from './components/VerifyEmailView'\nimport EmailVerifiedView from './components/EmailVerifiedView'\nimport RiddleModalView from './components/RiddleModal'\nimport * as Storage from './storage'\nimport { TwilioChatContextProvider } from './videochat/twilioChatContext'\nimport { currentUser, onAuthenticationStateChange } from './authentication'\nimport _ from 'lodash'\n\nexport const DispatchContext = createContext(null)\nexport const UserMapContext = createContext(null)\nexport const SettingsContext = createContext(null)\nexport const IsMobileContext = createContext(null)\nexport const RoomDataContext = createContext(null)\n\nconst App = () => {\n  const [state, dispatch] = useReducerWithThunk<Action, State>(\n    reducer,\n    defaultState\n  )\n\n  useEffect(() => {\n    // TODO: This flow has a lot of confusing, potentially duplicated messages that I'm not sure are necessary\n    // I (Em) started a refactor at one point, but abandoned it since it became too irrelevant from my task\n    onAuthenticationStateChange(async (user) => {\n      if (!user) {\n        dispatch(AuthenticateAction(undefined, undefined, undefined, undefined))\n      } else if (user.shouldVerifyEmail) {\n        const userId = user.id\n        const providerId = user.providerId\n        dispatch(AuthenticateAction(userId, userId, providerId, true))\n      } else {\n        const user = currentUser()\n        const userId = user.id\n        const providerId = user.providerId\n\n        const { registeredUsername, spaceIsClosed, isMod, isBanned } = await checkIsRegistered()\n        if (!registeredUsername) {\n          // If email, use ID to not leak, otherwise use service's default display name (for Twitter, their handle)\n          const defaultDisplayName = user.email\n            ? userId\n            : user.displayName\n          dispatch(\n            AuthenticateAction(userId, defaultDisplayName, providerId, false)\n          )\n          return\n        }\n\n        // TODO: I thiiiink we want this to be in an 'else'\n        dispatch(\n          AuthenticateAction(userId, registeredUsername, providerId, false)\n        )\n\n        if (isBanned) {\n          dispatch(\n            PlayerBannedAction({\n              id: userId,\n              username: registeredUsername,\n              isBanned: isBanned\n            })\n          )\n          dispatch(IsRegisteredAction())\n          return\n        }\n\n        if (spaceIsClosed) {\n          dispatch(SpaceIsClosedAction())\n\n          if (!isMod) {\n            // non-mods shouldn't subscribe to SignalR if the space is closed\n            dispatch(IsRegisteredAction())\n            return\n          }\n        }\n\n        const messageArchive = await Storage.getMessages()\n        if (messageArchive) {\n          dispatch(\n            LoadMessageArchiveAction(\n              messageArchive.messages,\n              messageArchive.whispers\n            )\n          )\n        }\n\n        const useSimpleNames = await Storage.getUseSimpleNames()\n        dispatch(SetUseSimpleNamesAction(useSimpleNames))\n        const keepCameraWhenMoving = await Storage.getKeepCameraWhenMoving()\n        dispatch(SetKeepCameraWhenMovingAction(keepCameraWhenMoving))\n        const textOnlyMode = await Storage.getTextOnlyMode()\n        dispatch(SetTextOnlyModeAction(textOnlyMode, false))\n        const captionsEnabled = await Storage.getCaptionsEnabled()\n        dispatch(SetCaptionsEnabledAction(captionsEnabled))\n\n        dispatch(IsRegisteredAction())\n        connect(userId, dispatch)\n        getServerSettings(dispatch)\n\n        // WARNING: Prior to the \"calculate number of faces for videochat\" code,\n        // there was a no-op resize handler here.\n        // window.addEventListener('resize', () => {})\n        // I frankly have no idea what this was doing,\n        // and worry my changes will cause unexpected errors\n        // -Em, 10/12/2021\n        window.addEventListener('resize', () => {})\n        const onResize = () => {\n          // It seems like a smell to do this in here and have to grab into #main,\n          // but I think it's fine?\n          const VideoWidth = 180\n          const $main = document.getElementById('main')\n          // Addendum: in Firefox on Windows sometimes we get into this function with 'main' as null!\n          if ($main) {\n            const numberOfFaces = Math.floor($main.clientWidth / VideoWidth) - 1\n            dispatch(SetNumberOfFacesAction(numberOfFaces))\n          } else {\n            console.warn('Attempted to call onResize when \\'main\\' element was null; will default to show no faces')\n          }\n        }\n\n        // Our initial paint time is stupid slow\n        // but waiting a long time seems to ensure that #main exists\n        setTimeout(onResize, 2000)\n        window.addEventListener('resize', _.throttle(onResize, 100, { trailing: true }))\n      }\n    })\n  }, [])\n\n  const isMobile = window.outerWidth < 500\n\n  const profile = state.visibleProfile ? (\n    <ProfileView user={state.visibleProfile} whispers={state.whispers} />\n  ) : (\n    ''\n  )\n\n  // This is kind of janky!\n  if (currentUser() && currentUser().isSignInWithEmailLink(window.location.href)) {\n    return <EmailVerifiedView />\n  }\n\n  if (!state.checkedAuthentication) {\n    return <div />\n  }\n\n  if (state.checkedAuthentication && state.mustVerifyEmail) {\n    return <VerifyEmailView\n      userEmail={currentUser().email}\n      dispatch={dispatch}\n    />\n  }\n\n  if (state.checkedAuthentication && !state.authenticated) {\n    return <LoggedOutView />\n  }\n\n  if (!state.hasRegistered) {\n    // Fetching the handle like this is silly.\n    return (\n      <ProfileEditView\n        isFTUE={true}\n        defaultHandle={state.userMap[state.userId].username}\n        user={state.profileData}\n        prepopulateTwitterWithDefaultHandle={state.authenticationProvider === 'twitter'}\n      />\n    )\n  }\n\n  if (state.isClosed && !state.userMap[state.userId].isMod) {\n    return <GoHomeView />\n  } else if (state.isBanned) {\n    return <YouAreBannedView />\n  }\n\n  // It's slightly weird we now construct this here and pass it as a prop to RoomView instead of constructing it there.\n  // Shrug, the conf is in 2 days.\n  let videoChatView\n  if (state.roomData && state.roomId && state.roomData[state.roomId] && state.roomData[state.roomId].mediaChat) {\n    videoChatView = (\n      <MediaChatView\n        visibleSpeakers={state.visibleSpeakers}\n        currentSpeaker={state.currentSpeaker}\n        numberOfFaces={state.numberOfFaces}\n        inMediaChat={state.inMediaChat}\n        textOnlyMode={state.textOnlyMode}\n        audioOnlyMode={state.audioOnlyMode}\n        currentUser={state.userMap[state.userId]}\n      />\n    )\n  }\n\n  let innerModalView, modalView\n\n  // TODO: If we get more modal options than just a size boolean, make this an options object.\n  let modalIsFullScreen = false\n\n  switch (state.activeModal) {\n    case Modal.ProfileEdit: {\n      innerModalView = (\n        <ProfileEditView\n          isFTUE={false}\n          defaultHandle={state.userMap[state.userId].username}\n          user={state.profileData}\n        />\n      )\n      break\n    }\n    case Modal.NoteWall: {\n      const room = state.roomData[state.roomId]\n      innerModalView = (\n        <NoteWallView notes={room.notes} noteWallData={room.noteWallData} user={state.profileData} serverSettings={state.serverSettings} />\n      )\n      break\n    }\n    case Modal.Settings: {\n      innerModalView = <SettingsView keepCameraWhenMoving={state.keepCameraWhenMoving} captionsEnabled={state.captionsEnabled} />\n      break\n    }\n    case Modal.MediaSelector: {\n      console.log('Opening media selector')\n      // TODO: Fix this userIsSpeaking (it was...broken in the first place but if we're bordering we should do it here)\n      innerModalView = (\n        <MediaSelectorView\n          showJoinButton={!state.inMediaChat || state.activeModalOptions.showJoinButton}\n          hideVideo={state.activeModalOptions.hideVideo}\n          userIsSpeaking={false}\n          roomId={state.roomId}\n          keepCameraWhenMoving={state.keepCameraWhenMoving}\n        />\n      )\n      break\n    }\n    case Modal.CodeOfConduct: {\n      innerModalView = <CodeOfConductView />\n      break\n    }\n    case Modal.Schedule: {\n      innerModalView = <ScheduleView />\n      break\n    }\n    case Modal.Map: {\n      modalIsFullScreen = true\n      innerModalView = (\n        <MapModalView roomData={state.roomData} currentRoomId={state.roomId} />\n      )\n      break\n    }\n    case Modal.RoomList: {\n      innerModalView = <RoomListView rooms={Object.values(state.roomData)} />\n      break\n    }\n    case Modal.Help: {\n      innerModalView = <HelpView />\n      break\n    }\n    case Modal.Welcome: {\n      innerModalView = <WelcomeModalView />\n      break\n    }\n    case Modal.ServerSettings: {\n      innerModalView = <ServerSettingsView serverSettings={state.serverSettings} roomData={state.roomData}/>\n      break\n    }\n    case Modal.ClientDeployed: {\n      innerModalView = <ClientDeployedModal />\n      break\n    }\n    case Modal.HappeningNow: {\n      innerModalView = <HappeningNowView roomData={state.roomData} entries={state.serverSettings.happeningNowEntries}/>\n      break\n    }\n    case Modal.FeatureRainbowGate: {\n      innerModalView = <RainbowGateModalView />\n      break\n    }\n    case Modal.FeatureDullDoor: {\n      innerModalView = <DullDoorModalView />\n      break\n    }\n    case Modal.FeatureFullRoomIndex: {\n      innerModalView = <FullRoomIndexModalView rooms={Object.values(state.roomData)}/>\n      break\n    }\n    case Modal.Riddles: {\n      const room = state.roomData[state.roomId]\n      innerModalView = <RiddleModalView riddles={room.riddles}/>\n      break\n    }\n  }\n\n  if (innerModalView) {\n    modalView = <ModalView fullScreen={modalIsFullScreen}>{innerModalView}</ModalView>\n  }\n\n  const showMenu = () => {\n    dispatch(ShowSideMenuAction())\n  }\n\n  const shouldShowMenu = !isMobile || state.mobileSideMenuIsVisible\n\n  // TODO: userMapContext should actually do the thing\n  return (\n    <IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\n      <DispatchContext.Provider value={dispatch}>\n        <TwilioChatContextProvider active={!state.textOnlyMode}>\n          <IsMobileContext.Provider value={isMobile}>\n            <SettingsContext.Provider value={{ useSimpleNames: state.useSimpleNames }}>\n              <UserMapContext.Provider\n                value={{ userMap: state.userMap, myId: state.userId }}\n              >\n                <RoomDataContext.Provider value={state.roomData}>\n                  <div\n                    id={\n                      state.visibleProfile && !isMobile ? 'app-profile-open' : 'app'\n                    }\n                  >\n                    {shouldShowMenu ? (\n                      <span>\n                        <SideNavView\n                          roomData={state.roomData}\n                          currentRoomId={state.roomId}\n                          username={state.userMap[state.userId].username}\n                          spaceIsClosed={state.isClosed}\n                        />\n                        {/* Once we moved the sidebar to be position:fixed, we still\n                      needed something to take up its space in the CSS grid.\n                      This should be fixable via CSS, but sigh, it's 3 days before the event */}\n                        <div id=\"side-nav-placeholder\" />\n                      </span>\n                    ) : (\n                      <button id=\"show-menu\" onClick={showMenu}>\n                        <span role=\"img\" aria-label=\"menu\">\n                          🍔\n                        </span>\n                      </button>\n                    )}\n                    {modalView}\n                    <div id=\"main\" role=\"main\">\n                      {state.roomData[state.roomId] ? (\n                        <RoomView\n                          room={state.roomData[state.roomId]}\n                          userId={state.userId}\n                          roomData={state.roomData}\n                          inMediaChat={state.inMediaChat}\n                          keepCameraWhenMoving={state.keepCameraWhenMoving}\n                          textOnlyMode={state.textOnlyMode}\n                          mediaChatView={videoChatView}\n                          hasDismissedAModal={state.hasDismissedAModal}\n                        />\n                      ) : null}\n                      <ChatView\n                        messages={state.messages}\n                        autoscrollChat={state.autoscrollChat}\n                        serverSettings={state.serverSettings}\n                        captionsEnabled={state.captionsEnabled}\n                      />\n                      <InputView\n                        prepopulated={state.prepopulatedInput}\n                        sendMessage={(message) =>\n                          dispatch(SendMessageAction(message))\n                        }\n                      />\n                    </div>\n                    {profile}\n                  </div>\n                </RoomDataContext.Provider>\n              </UserMapContext.Provider>\n            </SettingsContext.Provider>\n          </IsMobileContext.Provider>\n        </TwilioChatContextProvider>\n      </DispatchContext.Provider>\n    </IconContext.Provider>\n  )\n}\n\nexport default App\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport App from './App'\nimport { currentTheme } from './storage'\n\nwindow.addEventListener('DOMContentLoaded', async () => {\n  ReactDOM.render(<App />, document.getElementById('root') as HTMLElement)\n  document.body.classList.add(await currentTheme())\n})\n"],"names":["$2a197d4f608fa3a6465a2f3645d91abf$var$isHappeningNowEntry","obj","text","String","roomId","externalLink","ValidColors","ValidFontRewards","$2a197d4f608fa3a6465a2f3645d91abf$export$d6cec79eba360c39","$2a197d4f608fa3a6465a2f3645d91abf$export$791e49fbaee75ea9","$0ab838c5afad036d99db4684627e1df8$export$e29dc9d0b3156690","messages","timestamp","$1qt4A$localforage","setItem","$0ab838c5afad036d99db4684627e1df8$var$messagesKey","$0ab838c5afad036d99db4684627e1df8$var$messageTimestampKey","Date","$0ab838c5afad036d99db4684627e1df8$export$b0ec3a30689a15f8","getItem","$0ab838c5afad036d99db4684627e1df8$var$rainbowGateKey","$0ab838c5afad036d99db4684627e1df8$export$6cc5ef8058a12688","value","$0ab838c5afad036d99db4684627e1df8$var$wasColoredEnteringKey","$0ab838c5afad036d99db4684627e1df8$export$a1e521263aeca5b5","$0ab838c5afad036d99db4684627e1df8$var$themeKey","$0ab838c5afad036d99db4684627e1df8$export$69edaf18c0511430","textOnlyMode","$0ab838c5afad036d99db4684627e1df8$var$textOnlyModeKey","$0ab838c5afad036d99db4684627e1df8$var$whisperKey","$0ab838c5afad036d99db4684627e1df8$var$useSimpleNamesKey","$0ab838c5afad036d99db4684627e1df8$var$keepCameraWhenMovingKey","$0ab838c5afad036d99db4684627e1df8$var$captionsEnabledKey","$ab5b6b469d9a2f53c3f68b1f1f4f2efb$export$d0df0905342a2aee","dispatch","$1qt4A$react","useContext","$8791d6f52d5819afb52c0630af87050d$export$9f652a6947b66421","id","className","createElement","onClick","async","visits","$0ab838c5afad036d99db4684627e1df8$export$ffec8796fff546bc","$3Wbh2","UpdateProfileColorAction","anEnum","enumValues","Object","values","Math","floor","random","length","randomEnum","ShowModalAction","$1qZWk","Modal","FeatureRainbowGate","userMap","myId","$1qt4A$useContext","$8791d6f52d5819afb52c0630af87050d$export$f7589c21cbdaef5e","setVisits","$1qt4A$useState","$1qt4A$useEffect","nameColor","$0a0d01af8e2324daf13b4ab9b3b6c0dd$export$b8a2ea075432b203","user","FeatureDullDoor","wasColoredEntering","setWasColoredEntering","$0ab838c5afad036d99db4684627e1df8$export$865401b7b6d9e2a5","HideModalAction","$41d15e40c9ce0f04a683ce7ac2520cd1$export$d358d052fffacdcf","FeatureFullRoomIndex","props","key","rooms","map","e","displayName","shortName","$d242012856b34ef5d8b1afe83fbb4858$export$98e23135daf3d467","generateFood","$3Loy2","pickUpRandomItemFromList","pickUpPuppy","pickUpItem","drinkPolymorph","sendChatMessage","$1qt4A$v4","drinkCancellation","getFortune","readPoster","displayMessageFromList","readClosedSign","getGameRec","pentagramHighTech","$d242012856b34ef5d8b1afe83fbb4858$var$pentagramAction","pentagramMinimalist","pentagramComical","pentagramNormal","hearPickupLine","watchRobot","font","updateFontReward","displayMessage","$a525784c833eebcfdbe2d3b85b7dd388$export$2972a848b7747dfa","_","Error","$136de75e0400a5f2fd7013f182dc974e$export$802aca7cf3aadbf","createContext","prepareForMediaChat","console","log","prepareMediaDevices","publishMedia","publishAudio","unpublishMedia","publishingCamera","publishingMic","cameras","mics","setCurrentCamera","setCurrentMic","currentMic","undefined","currentCamera","localStreamView","inCall","joinCallFailed","joinCall","leaveCall","callParticipants","cameraEnabled","micEnabled","setCameraEnabled","enabled","setMicEnabled","$136de75e0400a5f2fd7013f182dc974e$export$5f360cfba6a20588","$09a3441c0feae0d48a50137d8ecb8cc6$export$9099ad97b570f7c","item","dropItem","useSimpleNames","$8791d6f52d5819afb52c0630af87050d$export$77e26b0bd53d222f","userId","username","isMod","isBanned","player","playerIsMod","handleProfile","data","fetchProfile","banButton","$1qt4A$MenuItem","confirm","BanToggleAction","modButton","ModToggleAction","fontReward","customStyle","nowrap","pronouns","style","$1qt4A$ContextMenuTrigger","renderTag","holdToDisplay","polymorph","$1qt4A$ContextMenu","$1qt4A$reacttooltip","$faae6e746b7f3c2b3e83fa17e2bdeea4$export$9099ad97b570f7c","users","audioUsers","videoUsers","mediaUsers","Array","from","filter","p","audioTracks","size","identity","videoTracks","u","names","userViews","idx","$90b629751dd3f758ce0c9b79c686b931$export$9099ad97b570f7c","includes","$1qt4A$FaVolumeUp","$1qt4A$FaVideo","arr","slice","sep","reduce","xs","x","i","concat","room","fullDescriptionVisible","setFullDescriptionVisible","mediaChat","hasDismissedAModal","keepCameraWhenMoving","leaveVideoChat","StopVideoChatAction","showNoteWall","NoteWall","noteWallView","hasNoteWall","noteWallData","$1qt4A$createElement","roomWallDescription","noteWallButton","JSON","stringify","type","$1qt4A$FaChevronUp","$1qt4A$FaChevronDown","target","getAttribute","moveToRoom","itemName","actionName","dangerouslySetInnerHTML","__html","$eff8625751ef5024a6f395a95f0a01fd$var$parseDescription","description","roomData","$eff8625751ef5024a6f395a95f0a01fd$export$af11fdaa7e0d53ef","specialFeatures","riddles","Riddles","mediaChatView","replace","match","streamRef","$1qt4A$useRef","captionsRef","margin","width","title","ref","height","src","frameBorder","allow","allowFullScreen","MessageType","$081118fa52f8c690b09433b7cc5505c3$export$8842eda039fa1d5f","message","$081118fa52f8c690b09433b7cc5505c3$export$778d708441736e4e","Chat","Emote","Shout","Dance","Caption","$081118fa52f8c690b09433b7cc5505c3$export$316d94e652aac09f","messageId","$081118fa52f8c690b09433b7cc5505c3$export$45313e3148e42d7","$081118fa52f8c690b09433b7cc5505c3$export$4b00e027a81f4247","senderIsSelf","Whisper","$081118fa52f8c690b09433b7cc5505c3$export$1462c2540a30e721","error","$081118fa52f8c690b09433b7cc5505c3$export$2d882037bf823912","command","Command","$4d25182c92271b22c85229ec7035b9ec$var$formatter","Intl","DateTimeFormat","hour","minute","component","Connected","$4d25182c92271b22c85229ec7035b9ec$var$ConnectedMessageView","Disconnected","$4d25182c92271b22c85229ec7035b9ec$var$DisconnectedMessageView","Entered","$4d25182c92271b22c85229ec7035b9ec$var$EnteredView","Left","$4d25182c92271b22c85229ec7035b9ec$var$LeftView","MovedRoom","$4d25182c92271b22c85229ec7035b9ec$var$MovedView","SameRoom","$4d25182c92271b22c85229ec7035b9ec$var$SameView","$4d25182c92271b22c85229ec7035b9ec$var$ChatMessageView","$4d25182c92271b22c85229ec7035b9ec$var$WhisperView","$4d25182c92271b22c85229ec7035b9ec$var$ShoutView","$4d25182c92271b22c85229ec7035b9ec$var$EmoteView","$4d25182c92271b22c85229ec7035b9ec$var$DanceView","$4d25182c92271b22c85229ec7035b9ec$var$CaptionView","$4d25182c92271b22c85229ec7035b9ec$var$ErrorView","Mod","$4d25182c92271b22c85229ec7035b9ec$var$ModMessageView","$4d25182c92271b22c85229ec7035b9ec$var$CommandView","date","msgIndex","hideTimestamp","format","$4d25182c92271b22c85229ec7035b9ec$var$handleDeleteMessage","deleteMessage","$4d25182c92271b22c85229ec7035b9ec$var$linkDecorator","href","rel","$4d25182c92271b22c85229ec7035b9ec$var$DeletableMessageView","$1qt4A$reactlinkify","componentDecorator","mouseButton","children","fromId","$8791d6f52d5819afb52c0630af87050d$export$d566d33d86336347","fromButton","hidden","fromName","toId","toButton","toName","to","openProfile","role","useEffect","lastMessage","document","querySelector","autoscrollChat","scrollTop","offsetTop","parentNode","shouldShowOlderMessages","setShouldShowOlderMessages","useState","shouldRemoveMessage","m","serverSettings","movementMessagesHideRoomIds","numUsersInRoom","movementMessagesHideThreshold","msg","captionsEnabled","lastIndexOfMovedMessage","$1qt4A$findLastIndex","currentRoomMessages","shownMessages","onScroll","messageWindow","isScrolledToBottom","scrollHeight","clientHeight","ActivateAutoscrollAction","DeactivateAutoscrollAction","previousMessage","getTime","shouldShowInterstitial","$4d25182c92271b22c85229ec7035b9ec$export$9099ad97b570f7c","input","setInput","sendMessage","getElementById","focus","prepopulated","onChange","result","$1qt4A$emojify","currentTarget","onKeyPress","autoComplete","$239972febef7f0243c0436450e567c10$var$SlashCommand","name","invocations","singleParameter","SlashCommandType","$239972febef7f0243c0436450e567c10$export$14694e926c7f97a5","$239972febef7f0243c0436450e567c10$export$2cd537a7ddeff3ce","Help","Move","ContactMod","Look","Interact","$715TH","default","FIREBASE_CONFIG","$00d00685c5d3a80cf7221158eb131a4e$export$db8e392eecc8976c","firebaseApp","$1qt4A$firebaseapp","initializeApp","authenticated","checkedAuthentication","hasRegistered","whispers","visibleSpeakers","inMediaChat","activeModal","None","activeModalOptions","happeningNowEntries","spaceIsClosed","numberOfFaces","$00d00685c5d3a80cf7221158eb131a4e$export$9099ad97b570f7c","oldState","action","state","parse","prepopulatedInput","ActionType","ReceivedMyProfile","profileData","ReceivedServerSettings","UpdatedCurrentRoom","oldRoomId","Welcome","$00d00685c5d3a80cf7221158eb131a4e$var$addMessage","$081118fa52f8c690b09433b7cc5505c3$export$51e0a138cdbf3498","UpdatedRoomData","UpdatedPresence","keys","forEach","PlayerConnected","push","PlayerDisconnected","$081118fa52f8c690b09433b7cc5505c3$export$6ac0f7373afabc62","PlayerEntered","$081118fa52f8c690b09433b7cc5505c3$export$22b53a18e340c8f2","PlayerLeft","$081118fa52f8c690b09433b7cc5505c3$export$ab6e7f6fce4ee8f9","ChatMessage","CaptionMessage","whisperMessage","$00d00685c5d3a80cf7221158eb131a4e$var$saveWhisper","ModMessage","$081118fa52f8c690b09433b7cc5505c3$export$9dfa393034454223","DeleteMessage","find","$00d00685c5d3a80cf7221158eb131a4e$var$deleteMessage","targetMessageId","$081118fa52f8c690b09433b7cc5505c3$export$b3ae0cbd60f93c51","$081118fa52f8c690b09433b7cc5505c3$export$2e901d851d138f55","$081118fa52f8c690b09433b7cc5505c3$export$28186bb3d1c7e2fd","UserMap","visibleProfile","PlayerBanned","PlayerUnbanned","UpdateProfileColor","color","updateProfileColor","UpdateFontReward","MediaReceivedSpeakingData","currentSpeaker","oldestIndex","oldestTime","SetNumberOfFaces","StartVideoChat","StopVideoChat","SendMessage","trimmedMessage","trim","beginsWithSlash","exec","matching","invocation","startsWith","$1CoyE","MESSAGE_MAX_LENGTH","split","s","MESSAGE_MAX_WORD_LENGTH","commandStr","parsedUsernameMessage","SendCaption","sendCaption","StartWhisper","ShowProfile","HideProfile","ShowModal","ShowModalWithOptions","modal","options","ShowSideMenu","mobileSideMenuIsVisible","HideSideMenu","DeactivateAutoscroll","ActivateAutoscroll","SetUseSimpleNames","$0ab838c5afad036d99db4684627e1df8$export$c75426b68f516947","SetKeepCameraWhenMoving","$0ab838c5afad036d99db4684627e1df8$export$65e7c79c8525744b","SetCaptionsEnabled","$0ab838c5afad036d99db4684627e1df8$export$a88ffad62dc8e00a","SetTextOnlyMode","refresh","then","window","location","reload","SetAudioOnlyMode","audioOnlyMode","Authenticate","authenticationProvider","provider","mustVerifyEmail","IsRegistered","BanToggle","toggleUserBan","ModToggle","toggleUserMod","LoadMessageArchive","NoteAdd","notes","note","NoteRemove","n","noteId","NoteUpdateLikes","likes","NoteUpdateRoom","SpaceIsClosed","isClosed","SpaceOpenedOrClosed","CommandMessage","$0ab838c5afad036d99db4684627e1df8$export$b5904ee2ea7c6929","$22f5c59dd494ba312a67dfeed417029a$var$ProfileWhisperView","otherUser","whisperMessages","realName","twitterHandle","url","askMeAbout","HideProfileAction","$5d8c0ef7811962f2350daa36a485a5d4$export$9099ad97b570f7c","SendMessageAction","$1qt4A$FaUser","textAlign","hideUI","$1qt4A$FaVideoSlash","$1qt4A$FaVolumeMute","MediaSelector","$1qt4A$FaCog","track","audioEl","current","attach","setAttribute","body","appendChild","detach","el","remove","isLocal","priority","mediaStreamTrack","setMediaStreamTrack","handleStarted","on","off","$64d7d4d66971e6429af1ad2035770748$export$9099ad97b570f7c","dimensions","setDimensions","handleDimensionsChanged","track1","$c08ca7ee7082f94a062a9884db20c273$export$9099ad97b570f7c","isPortrait","muted","setPriority","isFrontFacing","getSettings","facingMode","transform","objectFit","publication","isLocalParticipant","videoOnly","videoPriority","setTrack","removeTrack","$c41c9397be97098525edc9d8313b7475$export$9099ad97b570f7c","kind","$8bd1fd4b611e7c0320af8f713f8660c5$export$9099ad97b570f7c","$d0b3a5eb6544a4f6d83426ca88c7fc0d$export$9099ad97b570f7c","participant","displayVideo","displayAudio","publications","setPublications","tracks","publicationAdded","prevPublications","publicationRemoved","$8600130c989bf68b8d4c57c832853566$export$9099ad97b570f7c","videoPublications","audioPublications","finalPublications","$6bd29315db20ac64ee35c6a600d3c73c$export$9099ad97b570f7c","playVideo","setPlayVideo","renderAsFace","playAudio","setPlayAudio","border","isDominant","$fca75816eb7ab26ac3f2bc7c04743272$export$9099ad97b570f7c","hasVideoTracks","placeholderAvatar","$5d1c9a5ef0ffd79864d7d8e073fac2ef$export$9099ad97b570f7c","showMediaSelector","chatButtons","leaveButtonLabel","Fragment","SetTextOnlyModeAction","canJoinVideoChat","ShowModalWithOptionsAction","hideVideo","offscreenLabel","totalCount","SetAudioOnlyModeAction","disableTextMode","marginLeft","playerVideo","$247bc07bda9210629acaccda0ca9a58e$export$9099ad97b570f7c","speaking","participants","videoParticipantIds","audioParticipantIds","shift","videoParticipants","$0324cbacac62b5aa5c2f2b0fdea55586$export$9099ad97b570f7c","audioParticipants","currentUser","offscreenCount","$382fe6ac57d014d1d8942128aa06e6c0$var$crushSpaces","defaultHandle","prepopulateTwitterWithDefaultHandle","handle","setHandle","setRealName","setPronouns","setDescription","setAskMeAbout","setUrl","twitter","setTwitter","isFTUE","marginTop","marginBottom","htmlFor","localeCompare","updateProfile","hostname","SERVER_HOSTNAME","toggleSpaceItem","openOrCloseSpace","ProfileEdit","Settings","ServerSettings","disconnect","$1REsD","signOut","catch","currentRoomId","w","h","isMiniMap","scrollIntoView","block","inline","$17b39333051ac6c91e15267fe895b7da$var$mapText","$17b39333051ac6c91e15267fe895b7da$var$presenceMapping","replaceString","padEnd","toString","padStart","handleClick","clickableDivs","$17b39333051ac6c91e15267fe895b7da$var$clickableAreas","a","position","left","top","y","cursor","letterSpacing","fontFamily","onClickCapture","Map","stopPropagation","$17b39333051ac6c91e15267fe895b7da$export$9099ad97b570f7c","isMobile","$8791d6f52d5819afb52c0630af87050d$export$d1f8493de3b79ff7","HideSideMenuAction","$5de9767b454e653da16062eb491aabdd$export$9099ad97b570f7c","HappeningNow","$d6f8d93e81493d2f441f84767cb0beb5$var$MenuItem","Schedule","RoomList","CodeOfConduct","$f4af79cc6edfd04a6afa8563d4e9d524$export$9099ad97b570f7c","$dbf5cb8f76d3f9827a15fcf4be7641dc$export$e1a1893ca523e152","canDelete","authorId","canLike","hasLiked","likeNames","l","join","deleteRoomNote","unlikeRoomNote","likeRoomNote","$1qt4A$FaThumbsUp","$1qt4A$FaRegThumbsUp","$1697310038cd980cbde208598c272d78$var$UNCONFERENCING_ROOM_IDS","$1697310038cd980cbde208598c272d78$var$numLikes","roomNote","$1697310038cd980cbde208598c272d78$export$d6d3a20c46c3f26e","noteViews","sort","b","aLikes","noteWallDescription","buttonText","addNoteLinkText","massDeleteButton","setAsUnconferencingTopicsButton","settingsCopy","sortedDescending","newEntries","min","updateServerSettings","promptText","addNotePrompt","prompt","addNoteToWall","$fb8af0e51904493b7887fd1ad70b3a08$export$924a7d7136bc2091","keyListener","keyCode","addEventListener","removeEventListener","close","$1qt4A$reactdom","createPortal","fullScreen","handleKeepCameraWhenMovingSelection","event","newValue","SetKeepCameraWhenMovingAction","checked","selectedTheme","setSelectedTheme","handleThemeSelection","classList","theme","$0ab838c5afad036d99db4684627e1df8$export$4fe6b6a240f01bb0","handleSimpleNamesSelection","simple","SetUseSimpleNamesAction","handleCaptionChoice","SetCaptionsEnabledAction","$070dd344294111e6a4a7afa8de488b5d$export$9099ad97b570f7c","run","deviceToOption","d","video","defaultValue","display","userIsSpeaking","$f410f86fc7b1eb572d5e95b2a1c6ed11$var$ScheduleEntry","time","day","roomIds","breakoutRoomId","time1","dayTwoDate","$f410f86fc7b1eb572d5e95b2a1c6ed11$export$fceef558649e6397","formatter","userTimeZone","resolvedOptions","timeZone","rows","flatMap","r","colSpan","$ea01c535eedffcc7a9a11480ce5dbe42$var$uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","shouldVerifyEmail","sendSignInLinkToEmail","email","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","TwitterAuthProvider","$1qt4A$reactfirebaseuiStyledFirebaseAuth","uiConfig","firebaseAuth","list","$3dc9c6e8efbb99d2ddbd6c8910472468$var$RoomListItem","userCount","videoIcon","listStyle","newSettings","setNewSettings","addHappeningNowText","setAddHappeningNowText","addHappeningNowRoomId","setAddHappeningNowRoomId","addHappeningNowExternalLink","setAddHappeningNowExternalLink","submit","parsedNewSettings","every","$2a197d4f608fa3a6465a2f3645d91abf$export$dd9c3052d7aa062e","alert","resetRoomData","entry","deleteHappeningNowEntry","cols","$e8c1b64c9310e58dcfad6349e75fdc77$var$ReversedScheduleEntries","reverse","now","currentlyScheduledIdx","findIndex","currentlyScheduled","moveAndClose","currentlyScheduledElement","socialTimeOptions","breakoutEntry","discussString","entries","$1qt4A$reactpagevisibility","visibility","AuthenticateAction","providerId","userEmail","emailVerified","signInWithEmailLink","riddleViews","val","index","riddleTitle","$b3905b16eb4692196031988200b22a3b$var$recognizer","$b3905b16eb4692196031988200b22a3b$var$speechConfig","$b3905b16eb4692196031988200b22a3b$export$ac82d96b8e6f6059","stopContinuousRecognitionAsync","$063937ab506278213b0ae028793d0d4c$export$7fc4b01ba6272b61","token","setToken","setRoomId","setRoom","setJoinCallFailed","setCameras","setMics","setCurrentMicInternal","setCurrentCameraInternal","setPublishingCamera","setPublishingMic","remoteParticipants","setRemoteParticipants","localVideoTrack","setLocalVideoTrack","localAudioTrack","setLocalAudioTrack","setLocalStreamView","startTranscription","deviceId","cognitiveServicesKey","cognitiveServicesRegion","fetchCognitiveServicesKey","$1qt4A$SpeechConfig","fromSubscription","audioConfig","$1qt4A$AudioConfig","fromMicrophoneInput","$1qt4A$SpeechRecognizer","recognizing","recognized","reason","$1qt4A$ResultReason","RecognizedSpeech","SendCaptionAction","NoMatch","canceled","$1qt4A$CancellationReason","errorCode","errorDetails","sessionStopped","startContinuousRecognitionAsync","$b3905b16eb4692196031988200b22a3b$export$3bf82eea8420f6d0","stopTranscription","StartVideoChatAction","localParticipant","publishTrack","restart","publishVideo","enable","stop","unpublishTrack","disable","roomId1","shouldPublishTracks","active","opts","maxAudioBitrate","bandwidthProfile","mode","maxTracks","renderDimensions","high","standard","low","preferredVideoCodecs","codec","simulcast","dominantSpeaker","newRoom","$1qt4A$connect","MediaReceivedSpeakingDataAction","RefreshReactAction","warn","frameRate","exact","$1qt4A$createLocalVideoTrack","fetchLocalVideoTrack","trackObj","audio","$1qt4A$createLocalAudioTrack","fetchLocalAudioTrack","Provider","fetchTwilioToken","token1","mapToDeviceInfo","label","navigator","mediaDevices","getUserMedia","getTracks","t","enumerateDevices","devices","cameras1","mics1","c","$1qt4A$createContext","$8791d6f52d5819afb52c0630af87050d$export$9099ad97b570f7c","$7zAPm","useReducerWithThunk","onAuthenticationStateChange","user1","registeredUsername","checkIsRegistered","defaultDisplayName","PlayerBannedAction","IsRegisteredAction","SpaceIsClosedAction","messageArchive","err","$0ab838c5afad036d99db4684627e1df8$export$ca17a3c854de247d","LoadMessageArchiveAction","$0ab838c5afad036d99db4684627e1df8$export$4455bbc670767fbf","$0ab838c5afad036d99db4684627e1df8$export$9b8c234266723bd3","$0ab838c5afad036d99db4684627e1df8$export$37f6a4a4e50a9e8d","$0ab838c5afad036d99db4684627e1df8$export$ec5faae163a0aa9a","connect","getServerSettings","onResize","$main","clientWidth","SetNumberOfFacesAction","setTimeout","$1qt4A$lodash","throttle","trailing","outerWidth","profile","$22f5c59dd494ba312a67dfeed417029a$export$9099ad97b570f7c","isSignInWithEmailLink","$c2936714bdd8164c01bbe0409da6cb83$export$9099ad97b570f7c","$6413a0abbc1e1e32860b98470406a41c$export$9099ad97b570f7c","$ea01c535eedffcc7a9a11480ce5dbe42$export$9099ad97b570f7c","$382fe6ac57d014d1d8942128aa06e6c0$export$9099ad97b570f7c","$8c1dd74cc7c7357de960c8d5e0ec2aef$export$9099ad97b570f7c","$50b9789cc46e8493202b7712ba0e5f97$export$9099ad97b570f7c","videoChatView","innerModalView","modalView","$2f41a850433811f55661c8b3dea88379$export$9099ad97b570f7c","modalIsFullScreen","$229ac4903a321782c49f910651119b21$export$9099ad97b570f7c","$acb843129630c1f57084900ca8671573$export$9099ad97b570f7c","showJoinButton","$f87cc1cf2b07e9a8b5218de39586993b$export$9099ad97b570f7c","$f410f86fc7b1eb572d5e95b2a1c6ed11$export$9099ad97b570f7c","$37a6a5f37cb4b115c6ad103f4f184148$export$9099ad97b570f7c","$3dc9c6e8efbb99d2ddbd6c8910472468$export$9099ad97b570f7c","$d90d57c462b3c4dc9e2450652fb39e7c$export$9099ad97b570f7c","$5e60260bb40ed88c4a0fb550d5363bd1$export$9099ad97b570f7c","$1183c70a667bb840e80013e81082bacf$export$9099ad97b570f7c","ClientDeployed","$fffeaa997d2d7172db39ed78531c23b3$export$9099ad97b570f7c","$e8c1b64c9310e58dcfad6349e75fdc77$export$9099ad97b570f7c","$ab5b6b469d9a2f53c3f68b1f1f4f2efb$export$9099ad97b570f7c","$0a0d01af8e2324daf13b4ab9b3b6c0dd$export$9099ad97b570f7c","$41d15e40c9ce0f04a683ce7ac2520cd1$export$9099ad97b570f7c","$aaa1dc765ca71fbf36fadcd9deec9f55$export$9099ad97b570f7c","shouldShowMenu","$1qt4A$IconContext","verticalAlign","$d6f8d93e81493d2f441f84767cb0beb5$export$9099ad97b570f7c","ShowSideMenuAction","$eff8625751ef5024a6f395a95f0a01fd$export$9099ad97b570f7c","$9a9b57b4a80125afc5540d96d5e59661$export$9099ad97b570f7c","$1qt4A$render","add"],"version":3,"file":"index.59e5e56e.js.map","sourceRoot":"../"}